/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.ValidationErrorDtoSpec;
import ch.dvbern.stip.generated.dto.ValidationWarningDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ValidationReportDtoSpec
 */
@JsonPropertyOrder({
  ValidationReportDtoSpec.JSON_PROPERTY_VALIDATION_ERRORS,
  ValidationReportDtoSpec.JSON_PROPERTY_VALIDATION_WARNINGS,
  ValidationReportDtoSpec.JSON_PROPERTY_HAS_DOCUMENTS
})
@JsonTypeName("ValidationReport")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ValidationReportDtoSpec {
  public static final String JSON_PROPERTY_VALIDATION_ERRORS = "validationErrors";
  private List<ValidationErrorDtoSpec> validationErrors;

  public static final String JSON_PROPERTY_VALIDATION_WARNINGS = "validationWarnings";
  private List<ValidationWarningDtoSpec> validationWarnings;

  public static final String JSON_PROPERTY_HAS_DOCUMENTS = "hasDocuments";
  private Boolean hasDocuments;

  public ValidationReportDtoSpec() {
  }

  public ValidationReportDtoSpec validationErrors(List<ValidationErrorDtoSpec> validationErrors) {
    
    this.validationErrors = validationErrors;
    return this;
  }

  public ValidationReportDtoSpec addValidationErrorsItem(ValidationErrorDtoSpec validationErrorsItem) {
    if (this.validationErrors == null) {
      this.validationErrors = new ArrayList<>();
    }
    this.validationErrors.add(validationErrorsItem);
    return this;
  }

   /**
   * Get validationErrors
   * @return validationErrors
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VALIDATION_ERRORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ValidationErrorDtoSpec> getValidationErrors() {
    return validationErrors;
  }


  @JsonProperty(JSON_PROPERTY_VALIDATION_ERRORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValidationErrors(List<ValidationErrorDtoSpec> validationErrors) {
    this.validationErrors = validationErrors;
  }


  public ValidationReportDtoSpec validationWarnings(List<ValidationWarningDtoSpec> validationWarnings) {
    
    this.validationWarnings = validationWarnings;
    return this;
  }

  public ValidationReportDtoSpec addValidationWarningsItem(ValidationWarningDtoSpec validationWarningsItem) {
    if (this.validationWarnings == null) {
      this.validationWarnings = new ArrayList<>();
    }
    this.validationWarnings.add(validationWarningsItem);
    return this;
  }

   /**
   * Get validationWarnings
   * @return validationWarnings
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VALIDATION_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ValidationWarningDtoSpec> getValidationWarnings() {
    return validationWarnings;
  }


  @JsonProperty(JSON_PROPERTY_VALIDATION_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValidationWarnings(List<ValidationWarningDtoSpec> validationWarnings) {
    this.validationWarnings = validationWarnings;
  }


  public ValidationReportDtoSpec hasDocuments(Boolean hasDocuments) {
    
    this.hasDocuments = hasDocuments;
    return this;
  }

   /**
   * Whether or not the Gesuch validated has one or more GesuchDokument attached
   * @return hasDocuments
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_DOCUMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasDocuments() {
    return hasDocuments;
  }


  @JsonProperty(JSON_PROPERTY_HAS_DOCUMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasDocuments(Boolean hasDocuments) {
    this.hasDocuments = hasDocuments;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidationReportDtoSpec validationReport = (ValidationReportDtoSpec) o;
    return Objects.equals(this.validationErrors, validationReport.validationErrors) &&
        Objects.equals(this.validationWarnings, validationReport.validationWarnings) &&
        Objects.equals(this.hasDocuments, validationReport.hasDocuments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(validationErrors, validationWarnings, hasDocuments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidationReportDtoSpec {\n");
    sb.append("    validationErrors: ").append(toIndentedString(validationErrors)).append("\n");
    sb.append("    validationWarnings: ").append(toIndentedString(validationWarnings)).append("\n");
    sb.append("    hasDocuments: ").append(toIndentedString(hasDocuments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

