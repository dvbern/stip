/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FallDtoSpec
 */
@JsonPropertyOrder({
  FallDtoSpec.JSON_PROPERTY_ID,
  FallDtoSpec.JSON_PROPERTY_FALL_NUMMER,
  FallDtoSpec.JSON_PROPERTY_MANDANT
})
@JsonTypeName("Fall")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FallDtoSpec {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_FALL_NUMMER = "fallNummer";
  private Long fallNummer;

  public static final String JSON_PROPERTY_MANDANT = "mandant";
  private String mandant;

  public FallDtoSpec() {
  }

  public FallDtoSpec id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public FallDtoSpec fallNummer(Long fallNummer) {
    
    this.fallNummer = fallNummer;
    return this;
  }

   /**
   * Get fallNummer
   * @return fallNummer
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FALL_NUMMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getFallNummer() {
    return fallNummer;
  }


  @JsonProperty(JSON_PROPERTY_FALL_NUMMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFallNummer(Long fallNummer) {
    this.fallNummer = fallNummer;
  }


  public FallDtoSpec mandant(String mandant) {
    
    this.mandant = mandant;
    return this;
  }

   /**
   * Get mandant
   * @return mandant
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MANDANT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMandant() {
    return mandant;
  }


  @JsonProperty(JSON_PROPERTY_MANDANT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMandant(String mandant) {
    this.mandant = mandant;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FallDtoSpec fall = (FallDtoSpec) o;
    return Objects.equals(this.id, fall.id) &&
        Objects.equals(this.fallNummer, fall.fallNummer) &&
        Objects.equals(this.mandant, fall.mandant);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, fallNummer, mandant);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FallDtoSpec {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    fallNummer: ").append(toIndentedString(fallNummer)).append("\n");
    sb.append("    mandant: ").append(toIndentedString(mandant)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

