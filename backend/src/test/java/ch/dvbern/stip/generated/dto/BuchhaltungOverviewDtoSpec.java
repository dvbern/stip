/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.BuchhaltungEntryDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BuchhaltungOverviewDtoSpec
 */
@JsonPropertyOrder({
  BuchhaltungOverviewDtoSpec.JSON_PROPERTY_CAN_RETRY_AUSZAHLUNG,
  BuchhaltungOverviewDtoSpec.JSON_PROPERTY_BUCHHALTUNG_ENTRYS
})
@JsonTypeName("BuchhaltungOverview")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BuchhaltungOverviewDtoSpec {
  public static final String JSON_PROPERTY_CAN_RETRY_AUSZAHLUNG = "canRetryAuszahlung";
  private Boolean canRetryAuszahlung;

  public static final String JSON_PROPERTY_BUCHHALTUNG_ENTRYS = "buchhaltungEntrys";
  private List<BuchhaltungEntryDtoSpec> buchhaltungEntrys;

  public BuchhaltungOverviewDtoSpec() {
  }

  public BuchhaltungOverviewDtoSpec canRetryAuszahlung(Boolean canRetryAuszahlung) {
    
    this.canRetryAuszahlung = canRetryAuszahlung;
    return this;
  }

   /**
   * Get canRetryAuszahlung
   * @return canRetryAuszahlung
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CAN_RETRY_AUSZAHLUNG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getCanRetryAuszahlung() {
    return canRetryAuszahlung;
  }


  @JsonProperty(JSON_PROPERTY_CAN_RETRY_AUSZAHLUNG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCanRetryAuszahlung(Boolean canRetryAuszahlung) {
    this.canRetryAuszahlung = canRetryAuszahlung;
  }


  public BuchhaltungOverviewDtoSpec buchhaltungEntrys(List<BuchhaltungEntryDtoSpec> buchhaltungEntrys) {
    
    this.buchhaltungEntrys = buchhaltungEntrys;
    return this;
  }

  public BuchhaltungOverviewDtoSpec addBuchhaltungEntrysItem(BuchhaltungEntryDtoSpec buchhaltungEntrysItem) {
    if (this.buchhaltungEntrys == null) {
      this.buchhaltungEntrys = new ArrayList<>();
    }
    this.buchhaltungEntrys.add(buchhaltungEntrysItem);
    return this;
  }

   /**
   * Get buchhaltungEntrys
   * @return buchhaltungEntrys
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BUCHHALTUNG_ENTRYS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<BuchhaltungEntryDtoSpec> getBuchhaltungEntrys() {
    return buchhaltungEntrys;
  }


  @JsonProperty(JSON_PROPERTY_BUCHHALTUNG_ENTRYS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBuchhaltungEntrys(List<BuchhaltungEntryDtoSpec> buchhaltungEntrys) {
    this.buchhaltungEntrys = buchhaltungEntrys;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuchhaltungOverviewDtoSpec buchhaltungOverview = (BuchhaltungOverviewDtoSpec) o;
    return Objects.equals(this.canRetryAuszahlung, buchhaltungOverview.canRetryAuszahlung) &&
        Objects.equals(this.buchhaltungEntrys, buchhaltungOverview.buchhaltungEntrys);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canRetryAuszahlung, buchhaltungEntrys);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuchhaltungOverviewDtoSpec {\n");
    sb.append("    canRetryAuszahlung: ").append(toIndentedString(canRetryAuszahlung)).append("\n");
    sb.append("    buchhaltungEntrys: ").append(toIndentedString(buchhaltungEntrys)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

