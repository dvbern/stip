/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.DelegierungDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FallWithDelegierungDtoSpec
 */
@JsonPropertyOrder({
  FallWithDelegierungDtoSpec.JSON_PROPERTY_ID,
  FallWithDelegierungDtoSpec.JSON_PROPERTY_FALL_NUMMER,
  FallWithDelegierungDtoSpec.JSON_PROPERTY_MANDANT,
  FallWithDelegierungDtoSpec.JSON_PROPERTY_DELEGIERUNG,
  FallWithDelegierungDtoSpec.JSON_PROPERTY_LETZTE_AKTIVITAET
})
@JsonTypeName("FallWithDelegierung")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FallWithDelegierungDtoSpec {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_FALL_NUMMER = "fallNummer";
  private String fallNummer;

  public static final String JSON_PROPERTY_MANDANT = "mandant";
  private String mandant;

  public static final String JSON_PROPERTY_DELEGIERUNG = "delegierung";
  private DelegierungDtoSpec delegierung;

  public static final String JSON_PROPERTY_LETZTE_AKTIVITAET = "letzteAktivitaet";
  private LocalDate letzteAktivitaet;

  public FallWithDelegierungDtoSpec() {
  }

  public FallWithDelegierungDtoSpec id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public FallWithDelegierungDtoSpec fallNummer(String fallNummer) {
    
    this.fallNummer = fallNummer;
    return this;
  }

   /**
   * Get fallNummer
   * @return fallNummer
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FALL_NUMMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFallNummer() {
    return fallNummer;
  }


  @JsonProperty(JSON_PROPERTY_FALL_NUMMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFallNummer(String fallNummer) {
    this.fallNummer = fallNummer;
  }


  public FallWithDelegierungDtoSpec mandant(String mandant) {
    
    this.mandant = mandant;
    return this;
  }

   /**
   * Get mandant
   * @return mandant
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MANDANT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMandant() {
    return mandant;
  }


  @JsonProperty(JSON_PROPERTY_MANDANT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMandant(String mandant) {
    this.mandant = mandant;
  }


  public FallWithDelegierungDtoSpec delegierung(DelegierungDtoSpec delegierung) {
    
    this.delegierung = delegierung;
    return this;
  }

   /**
   * Get delegierung
   * @return delegierung
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DELEGIERUNG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DelegierungDtoSpec getDelegierung() {
    return delegierung;
  }


  @JsonProperty(JSON_PROPERTY_DELEGIERUNG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDelegierung(DelegierungDtoSpec delegierung) {
    this.delegierung = delegierung;
  }


  public FallWithDelegierungDtoSpec letzteAktivitaet(LocalDate letzteAktivitaet) {
    
    this.letzteAktivitaet = letzteAktivitaet;
    return this;
  }

   /**
   * Get letzteAktivitaet
   * @return letzteAktivitaet
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LETZTE_AKTIVITAET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalDate getLetzteAktivitaet() {
    return letzteAktivitaet;
  }


  @JsonProperty(JSON_PROPERTY_LETZTE_AKTIVITAET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLetzteAktivitaet(LocalDate letzteAktivitaet) {
    this.letzteAktivitaet = letzteAktivitaet;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FallWithDelegierungDtoSpec fallWithDelegierung = (FallWithDelegierungDtoSpec) o;
    return Objects.equals(this.id, fallWithDelegierung.id) &&
        Objects.equals(this.fallNummer, fallWithDelegierung.fallNummer) &&
        Objects.equals(this.mandant, fallWithDelegierung.mandant) &&
        Objects.equals(this.delegierung, fallWithDelegierung.delegierung) &&
        Objects.equals(this.letzteAktivitaet, fallWithDelegierung.letzteAktivitaet);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, fallNummer, mandant, delegierung, letzteAktivitaet);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FallWithDelegierungDtoSpec {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    fallNummer: ").append(toIndentedString(fallNummer)).append("\n");
    sb.append("    mandant: ").append(toIndentedString(mandant)).append("\n");
    sb.append("    delegierung: ").append(toIndentedString(delegierung)).append("\n");
    sb.append("    letzteAktivitaet: ").append(toIndentedString(letzteAktivitaet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

