/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.DokumentTypDtoSpec;
import ch.dvbern.stip.generated.dto.DokumentstatusDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Kommentar zu einem (abgelehnten) GesuchDokument
 */
@JsonPropertyOrder({
  GesuchDokumentKommentarDtoSpec.JSON_PROPERTY_GESUCH_DOKUMENT_ID,
  GesuchDokumentKommentarDtoSpec.JSON_PROPERTY_GESUCH_ID,
  GesuchDokumentKommentarDtoSpec.JSON_PROPERTY_DOKUMENT_TYP,
  GesuchDokumentKommentarDtoSpec.JSON_PROPERTY_DOKUMENT_STATUS,
  GesuchDokumentKommentarDtoSpec.JSON_PROPERTY_KOMMENTAR,
  GesuchDokumentKommentarDtoSpec.JSON_PROPERTY_BENUTZER,
  GesuchDokumentKommentarDtoSpec.JSON_PROPERTY_DATUM
})
@JsonTypeName("GesuchDokumentKommentar")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GesuchDokumentKommentarDtoSpec {
  public static final String JSON_PROPERTY_GESUCH_DOKUMENT_ID = "gesuchDokumentId";
  private UUID gesuchDokumentId;

  public static final String JSON_PROPERTY_GESUCH_ID = "gesuchId";
  private UUID gesuchId;

  public static final String JSON_PROPERTY_DOKUMENT_TYP = "dokumentTyp";
  private DokumentTypDtoSpec dokumentTyp;

  public static final String JSON_PROPERTY_DOKUMENT_STATUS = "dokumentStatus";
  private DokumentstatusDtoSpec dokumentStatus;

  public static final String JSON_PROPERTY_KOMMENTAR = "kommentar";
  private String kommentar;

  public static final String JSON_PROPERTY_BENUTZER = "benutzer";
  private String benutzer;

  public static final String JSON_PROPERTY_DATUM = "datum";
  private LocalDate datum;

  public GesuchDokumentKommentarDtoSpec() {
  }

  public GesuchDokumentKommentarDtoSpec gesuchDokumentId(UUID gesuchDokumentId) {
    
    this.gesuchDokumentId = gesuchDokumentId;
    return this;
  }

   /**
   * Get gesuchDokumentId
   * @return gesuchDokumentId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GESUCH_DOKUMENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getGesuchDokumentId() {
    return gesuchDokumentId;
  }


  @JsonProperty(JSON_PROPERTY_GESUCH_DOKUMENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGesuchDokumentId(UUID gesuchDokumentId) {
    this.gesuchDokumentId = gesuchDokumentId;
  }


  public GesuchDokumentKommentarDtoSpec gesuchId(UUID gesuchId) {
    
    this.gesuchId = gesuchId;
    return this;
  }

   /**
   * Get gesuchId
   * @return gesuchId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GESUCH_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getGesuchId() {
    return gesuchId;
  }


  @JsonProperty(JSON_PROPERTY_GESUCH_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGesuchId(UUID gesuchId) {
    this.gesuchId = gesuchId;
  }


  public GesuchDokumentKommentarDtoSpec dokumentTyp(DokumentTypDtoSpec dokumentTyp) {
    
    this.dokumentTyp = dokumentTyp;
    return this;
  }

   /**
   * Get dokumentTyp
   * @return dokumentTyp
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DOKUMENT_TYP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DokumentTypDtoSpec getDokumentTyp() {
    return dokumentTyp;
  }


  @JsonProperty(JSON_PROPERTY_DOKUMENT_TYP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDokumentTyp(DokumentTypDtoSpec dokumentTyp) {
    this.dokumentTyp = dokumentTyp;
  }


  public GesuchDokumentKommentarDtoSpec dokumentStatus(DokumentstatusDtoSpec dokumentStatus) {
    
    this.dokumentStatus = dokumentStatus;
    return this;
  }

   /**
   * Get dokumentStatus
   * @return dokumentStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOKUMENT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DokumentstatusDtoSpec getDokumentStatus() {
    return dokumentStatus;
  }


  @JsonProperty(JSON_PROPERTY_DOKUMENT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDokumentStatus(DokumentstatusDtoSpec dokumentStatus) {
    this.dokumentStatus = dokumentStatus;
  }


  public GesuchDokumentKommentarDtoSpec kommentar(String kommentar) {
    
    this.kommentar = kommentar;
    return this;
  }

   /**
   * Get kommentar
   * @return kommentar
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KOMMENTAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKommentar() {
    return kommentar;
  }


  @JsonProperty(JSON_PROPERTY_KOMMENTAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKommentar(String kommentar) {
    this.kommentar = kommentar;
  }


  public GesuchDokumentKommentarDtoSpec benutzer(String benutzer) {
    
    this.benutzer = benutzer;
    return this;
  }

   /**
   * Der Benutzer welcher das Dokument abgelehnt hat
   * @return benutzer
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BENUTZER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBenutzer() {
    return benutzer;
  }


  @JsonProperty(JSON_PROPERTY_BENUTZER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBenutzer(String benutzer) {
    this.benutzer = benutzer;
  }


  public GesuchDokumentKommentarDtoSpec datum(LocalDate datum) {
    
    this.datum = datum;
    return this;
  }

   /**
   * Get datum
   * @return datum
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalDate getDatum() {
    return datum;
  }


  @JsonProperty(JSON_PROPERTY_DATUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDatum(LocalDate datum) {
    this.datum = datum;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GesuchDokumentKommentarDtoSpec gesuchDokumentKommentar = (GesuchDokumentKommentarDtoSpec) o;
    return Objects.equals(this.gesuchDokumentId, gesuchDokumentKommentar.gesuchDokumentId) &&
        Objects.equals(this.gesuchId, gesuchDokumentKommentar.gesuchId) &&
        Objects.equals(this.dokumentTyp, gesuchDokumentKommentar.dokumentTyp) &&
        Objects.equals(this.dokumentStatus, gesuchDokumentKommentar.dokumentStatus) &&
        Objects.equals(this.kommentar, gesuchDokumentKommentar.kommentar) &&
        Objects.equals(this.benutzer, gesuchDokumentKommentar.benutzer) &&
        Objects.equals(this.datum, gesuchDokumentKommentar.datum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gesuchDokumentId, gesuchId, dokumentTyp, dokumentStatus, kommentar, benutzer, datum);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GesuchDokumentKommentarDtoSpec {\n");
    sb.append("    gesuchDokumentId: ").append(toIndentedString(gesuchDokumentId)).append("\n");
    sb.append("    gesuchId: ").append(toIndentedString(gesuchId)).append("\n");
    sb.append("    dokumentTyp: ").append(toIndentedString(dokumentTyp)).append("\n");
    sb.append("    dokumentStatus: ").append(toIndentedString(dokumentStatus)).append("\n");
    sb.append("    kommentar: ").append(toIndentedString(kommentar)).append("\n");
    sb.append("    benutzer: ").append(toIndentedString(benutzer)).append("\n");
    sb.append("    datum: ").append(toIndentedString(datum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

