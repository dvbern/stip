/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.GesuchTrancheUpdateDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GesuchUpdateDtoSpec
 */
@JsonPropertyOrder({
  GesuchUpdateDtoSpec.JSON_PROPERTY_NACHFRIST_DOKUMENTE,
  GesuchUpdateDtoSpec.JSON_PROPERTY_GESUCH_TRANCHE_TO_WORK_WITH
})
@JsonTypeName("GesuchUpdate")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GesuchUpdateDtoSpec {
  public static final String JSON_PROPERTY_NACHFRIST_DOKUMENTE = "nachfristDokumente";
  private String nachfristDokumente;

  public static final String JSON_PROPERTY_GESUCH_TRANCHE_TO_WORK_WITH = "gesuchTrancheToWorkWith";
  private GesuchTrancheUpdateDtoSpec gesuchTrancheToWorkWith;

  public GesuchUpdateDtoSpec() {
  }

  public GesuchUpdateDtoSpec nachfristDokumente(String nachfristDokumente) {
    
    this.nachfristDokumente = nachfristDokumente;
    return this;
  }

   /**
   * Get nachfristDokumente
   * @return nachfristDokumente
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NACHFRIST_DOKUMENTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNachfristDokumente() {
    return nachfristDokumente;
  }


  @JsonProperty(JSON_PROPERTY_NACHFRIST_DOKUMENTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNachfristDokumente(String nachfristDokumente) {
    this.nachfristDokumente = nachfristDokumente;
  }


  public GesuchUpdateDtoSpec gesuchTrancheToWorkWith(GesuchTrancheUpdateDtoSpec gesuchTrancheToWorkWith) {
    
    this.gesuchTrancheToWorkWith = gesuchTrancheToWorkWith;
    return this;
  }

   /**
   * Get gesuchTrancheToWorkWith
   * @return gesuchTrancheToWorkWith
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GESUCH_TRANCHE_TO_WORK_WITH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public GesuchTrancheUpdateDtoSpec getGesuchTrancheToWorkWith() {
    return gesuchTrancheToWorkWith;
  }


  @JsonProperty(JSON_PROPERTY_GESUCH_TRANCHE_TO_WORK_WITH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGesuchTrancheToWorkWith(GesuchTrancheUpdateDtoSpec gesuchTrancheToWorkWith) {
    this.gesuchTrancheToWorkWith = gesuchTrancheToWorkWith;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GesuchUpdateDtoSpec gesuchUpdate = (GesuchUpdateDtoSpec) o;
    return Objects.equals(this.nachfristDokumente, gesuchUpdate.nachfristDokumente) &&
        Objects.equals(this.gesuchTrancheToWorkWith, gesuchUpdate.gesuchTrancheToWorkWith);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nachfristDokumente, gesuchTrancheToWorkWith);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GesuchUpdateDtoSpec {\n");
    sb.append("    nachfristDokumente: ").append(toIndentedString(nachfristDokumente)).append("\n");
    sb.append("    gesuchTrancheToWorkWith: ").append(toIndentedString(gesuchTrancheToWorkWith)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

