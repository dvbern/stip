/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.api;

import ch.dvbern.stip.generated.dto.LandDtoSpec;
import ch.dvbern.stip.generated.dto.LandEuEftaDtoSpec;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import io.restassured.RestAssured;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.builder.ResponseSpecBuilder;
import io.restassured.common.mapper.TypeRef;
import io.restassured.http.Method;
import io.restassured.response.Response;

import java.lang.reflect.Type;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Supplier;
import static io.restassured.http.Method.*;

public class StammdatenApiSpec {

    private Supplier<RequestSpecBuilder> reqSpecSupplier;
    private Consumer<RequestSpecBuilder> reqSpecCustomizer;

    private StammdatenApiSpec(Supplier<RequestSpecBuilder> reqSpecSupplier) {
        this.reqSpecSupplier = reqSpecSupplier;
    }

    public static StammdatenApiSpec stammdaten(Supplier<RequestSpecBuilder> reqSpecSupplier) {
        return new StammdatenApiSpec(reqSpecSupplier);
    }

    private RequestSpecBuilder createReqSpec() {
        RequestSpecBuilder reqSpec = reqSpecSupplier.get();
        if(reqSpecCustomizer != null) {
            reqSpecCustomizer.accept(reqSpec);
        }
        return reqSpec;
    }

    public List<Oper> getAllOperations() {
        return Arrays.asList(
                getLaender(),
                getLaenderEuEfta(),
                setLaenderEuEfta()
        );
    }

    public GetLaenderOper getLaender() {
        return new GetLaenderOper(createReqSpec());
    }

    public GetLaenderEuEftaOper getLaenderEuEfta() {
        return new GetLaenderEuEftaOper(createReqSpec());
    }

    public SetLaenderEuEftaOper setLaenderEuEfta() {
        return new SetLaenderEuEftaOper(createReqSpec());
    }

    /**
     * Customize request specification
     * @param reqSpecCustomizer consumer to modify the RequestSpecBuilder
     * @return api
     */
    public StammdatenApiSpec reqSpec(Consumer<RequestSpecBuilder> reqSpecCustomizer) {
        this.reqSpecCustomizer = reqSpecCustomizer;
        return this;
    }

    /**
     * Returns a List of LandCode
     * 
     *
     * return List&lt;LandDtoSpec&gt;
     */
    public static class GetLaenderOper implements Oper {

        public static final Method REQ_METHOD = GET;
        public static final String REQ_URI = "/stammdaten/land";

        private RequestSpecBuilder reqSpec;
        private ResponseSpecBuilder respSpec;

        public GetLaenderOper(RequestSpecBuilder reqSpec) {
            this.reqSpec = reqSpec;
            reqSpec.setAccept("application/json");
            this.respSpec = new ResponseSpecBuilder();
        }

        /**
         * GET /stammdaten/land
         * @param handler handler
         * @param <T> type
         * @return type
         */
        @Override
        public <T> T execute(Function<Response, T> handler) {
            return handler.apply(RestAssured.given().spec(reqSpec.build()).expect().spec(respSpec.build()).when().request(REQ_METHOD, REQ_URI));
        }

        /**
         * GET /stammdaten/land
         * @param handler handler
         * @return List&lt;LandDtoSpec&gt;
         */
        public List<LandDtoSpec> executeAs(Function<Response, Response> handler) {
            TypeRef<List<LandDtoSpec>> type = new TypeRef<List<LandDtoSpec>>(){};
            return execute(handler).as(type);
        }

        /**
         * Customize request specification
         * @param reqSpecCustomizer consumer to modify the RequestSpecBuilder
         * @return operation
         */
        public GetLaenderOper reqSpec(Consumer<RequestSpecBuilder> reqSpecCustomizer) {
            reqSpecCustomizer.accept(reqSpec);
            return this;
        }

        /**
         * Customize response specification
         * @param respSpecCustomizer consumer to modify the ResponseSpecBuilder
         * @return operation
         */
        public GetLaenderOper respSpec(Consumer<ResponseSpecBuilder> respSpecCustomizer) {
            respSpecCustomizer.accept(respSpec);
            return this;
        }
    }
    /**
     * 
     * 
     *
     * return List&lt;LandEuEftaDtoSpec&gt;
     */
    public static class GetLaenderEuEftaOper implements Oper {

        public static final Method REQ_METHOD = GET;
        public static final String REQ_URI = "/stammdaten/land/euefta";

        private RequestSpecBuilder reqSpec;
        private ResponseSpecBuilder respSpec;

        public GetLaenderEuEftaOper(RequestSpecBuilder reqSpec) {
            this.reqSpec = reqSpec;
            reqSpec.setAccept("application/json");
            this.respSpec = new ResponseSpecBuilder();
        }

        /**
         * GET /stammdaten/land/euefta
         * @param handler handler
         * @param <T> type
         * @return type
         */
        @Override
        public <T> T execute(Function<Response, T> handler) {
            return handler.apply(RestAssured.given().spec(reqSpec.build()).expect().spec(respSpec.build()).when().request(REQ_METHOD, REQ_URI));
        }

        /**
         * GET /stammdaten/land/euefta
         * @param handler handler
         * @return List&lt;LandEuEftaDtoSpec&gt;
         */
        public List<LandEuEftaDtoSpec> executeAs(Function<Response, Response> handler) {
            TypeRef<List<LandEuEftaDtoSpec>> type = new TypeRef<List<LandEuEftaDtoSpec>>(){};
            return execute(handler).as(type);
        }

        /**
         * Customize request specification
         * @param reqSpecCustomizer consumer to modify the RequestSpecBuilder
         * @return operation
         */
        public GetLaenderEuEftaOper reqSpec(Consumer<RequestSpecBuilder> reqSpecCustomizer) {
            reqSpecCustomizer.accept(reqSpec);
            return this;
        }

        /**
         * Customize response specification
         * @param respSpecCustomizer consumer to modify the ResponseSpecBuilder
         * @return operation
         */
        public GetLaenderEuEftaOper respSpec(Consumer<ResponseSpecBuilder> respSpecCustomizer) {
            respSpecCustomizer.accept(respSpec);
            return this;
        }
    }
    /**
     * 
     * 
     *
     * @see #body  (required)
     * return List&lt;LandEuEftaDtoSpec&gt;
     */
    public static class SetLaenderEuEftaOper implements Oper {

        public static final Method REQ_METHOD = PATCH;
        public static final String REQ_URI = "/stammdaten/land/euefta";

        private RequestSpecBuilder reqSpec;
        private ResponseSpecBuilder respSpec;

        public SetLaenderEuEftaOper(RequestSpecBuilder reqSpec) {
            this.reqSpec = reqSpec;
            reqSpec.setContentType("application/json");
            reqSpec.setAccept("application/json");
            this.respSpec = new ResponseSpecBuilder();
        }

        /**
         * PATCH /stammdaten/land/euefta
         * @param handler handler
         * @param <T> type
         * @return type
         */
        @Override
        public <T> T execute(Function<Response, T> handler) {
            return handler.apply(RestAssured.given().spec(reqSpec.build()).expect().spec(respSpec.build()).when().request(REQ_METHOD, REQ_URI));
        }

        /**
         * PATCH /stammdaten/land/euefta
         * @param handler handler
         * @return List&lt;LandEuEftaDtoSpec&gt;
         */
        public List<LandEuEftaDtoSpec> executeAs(Function<Response, Response> handler) {
            TypeRef<List<LandEuEftaDtoSpec>> type = new TypeRef<List<LandEuEftaDtoSpec>>(){};
            return execute(handler).as(type);
        }

         /**
         * @param landEuEftaDtoSpec (List&lt;LandEuEftaDtoSpec&gt;)  (required)
         * @return operation
         */
        public SetLaenderEuEftaOper body(List<LandEuEftaDtoSpec> landEuEftaDtoSpec) {
            reqSpec.setBody(landEuEftaDtoSpec);
            return this;
        }

        /**
         * Customize request specification
         * @param reqSpecCustomizer consumer to modify the RequestSpecBuilder
         * @return operation
         */
        public SetLaenderEuEftaOper reqSpec(Consumer<RequestSpecBuilder> reqSpecCustomizer) {
            reqSpecCustomizer.accept(reqSpec);
            return this;
        }

        /**
         * Customize response specification
         * @param respSpecCustomizer consumer to modify the ResponseSpecBuilder
         * @return operation
         */
        public SetLaenderEuEftaOper respSpec(Consumer<ResponseSpecBuilder> respSpecCustomizer) {
            respSpecCustomizer.accept(respSpec);
            return this;
        }
    }
}
