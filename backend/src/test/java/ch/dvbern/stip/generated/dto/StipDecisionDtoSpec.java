/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets StipDecision
 */
public enum StipDecisionDtoSpec {
  
  GESUCH_VALID("GESUCH_VALID"),
  
  EINGABEFRIST_ABGELAUFEN("EINGABEFRIST_ABGELAUFEN"),
  
  AUSBILDUNG_NICHT_ANERKANNT("AUSBILDUNG_NICHT_ANERKANNT"),
  
  AUSBILDUNGEN_LAENGER_12_JAHRE("AUSBILDUNGEN_LAENGER_12_JAHRE"),
  
  AUSBILDUNG_IM_LEBENSLAUF("AUSBILDUNG_IM_LEBENSLAUF"),
  
  PIA_AELTER_35_JAHRE("PIA_AELTER_35_JAHRE"),
  
  KEIN_WOHNSITZ_KANTON_BE("KEIN_WOHNSITZ_KANTON_BE"),
  
  SCHULJAHR_9_SEKSTUFE_1("SCHULJAHR_9_SEKSTUFE_1"),
  
  AUSBILDUNG_PBI1("AUSBILDUNG_PBI1"),
  
  ART_32_BBV("ART_32_BBV"),
  
  ZWEITAUSBILDUNG("ZWEITAUSBILDUNG"),
  
  AUSBILDUNG_2_GLEICHE_STUFE_BVS_ODER_VORBILDUNG("AUSBILDUNG_2_GLEICHE_STUFE_BVS_ODER_VORBILDUNG"),
  
  EBA_LEHRE("EBA_LEHRE"),
  
  HOCHSCHULSTUDIUM_2("HOCHSCHULSTUDIUM_2"),
  
  MEHRERE_AUSBILDUNGSWECHSEL("MEHRERE_AUSBILDUNGSWECHSEL"),
  
  NICHT_BERECHTIGTE_PERSON("NICHT_BERECHTIGTE_PERSON"),
  
  ANSPRUCH_MANUELL_PRUEFEN("ANSPRUCH_MANUELL_PRUEFEN"),
  
  ANSPRUCH_UNKLAR("ANSPRUCH_UNKLAR");

  private String value;

  StipDecisionDtoSpec(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static StipDecisionDtoSpec fromValue(String value) {
    for (StipDecisionDtoSpec b : StipDecisionDtoSpec.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

