/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BuchhaltungSaldokorrekturDtoSpec
 */
@JsonPropertyOrder({
  BuchhaltungSaldokorrekturDtoSpec.JSON_PROPERTY_BETRAG,
  BuchhaltungSaldokorrekturDtoSpec.JSON_PROPERTY_COMMENT
})
@JsonTypeName("BuchhaltungSaldokorrektur")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BuchhaltungSaldokorrekturDtoSpec {
  public static final String JSON_PROPERTY_BETRAG = "betrag";
  private Integer betrag;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public BuchhaltungSaldokorrekturDtoSpec() {
  }

  public BuchhaltungSaldokorrekturDtoSpec betrag(Integer betrag) {
    
    this.betrag = betrag;
    return this;
  }

   /**
   * Get betrag
   * @return betrag
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BETRAG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getBetrag() {
    return betrag;
  }


  @JsonProperty(JSON_PROPERTY_BETRAG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBetrag(Integer betrag) {
    this.betrag = betrag;
  }


  public BuchhaltungSaldokorrekturDtoSpec comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setComment(String comment) {
    this.comment = comment;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuchhaltungSaldokorrekturDtoSpec buchhaltungSaldokorrektur = (BuchhaltungSaldokorrekturDtoSpec) o;
    return Objects.equals(this.betrag, buchhaltungSaldokorrektur.betrag) &&
        Objects.equals(this.comment, buchhaltungSaldokorrektur.comment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(betrag, comment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuchhaltungSaldokorrekturDtoSpec {\n");
    sb.append("    betrag: ").append(toIndentedString(betrag)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

