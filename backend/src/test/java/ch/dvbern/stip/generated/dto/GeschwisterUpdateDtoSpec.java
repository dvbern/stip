/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.AusbildungssituationDtoSpec;
import ch.dvbern.stip.generated.dto.WohnsitzDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GeschwisterUpdateDtoSpec
 */
@JsonPropertyOrder({
  GeschwisterUpdateDtoSpec.JSON_PROPERTY_VORNAME,
  GeschwisterUpdateDtoSpec.JSON_PROPERTY_GEBURTSDATUM,
  GeschwisterUpdateDtoSpec.JSON_PROPERTY_WOHNSITZ,
  GeschwisterUpdateDtoSpec.JSON_PROPERTY_AUSBILDUNGSSITUATION,
  GeschwisterUpdateDtoSpec.JSON_PROPERTY_ID,
  GeschwisterUpdateDtoSpec.JSON_PROPERTY_WOHNSITZ_ANTEIL_MUTTER,
  GeschwisterUpdateDtoSpec.JSON_PROPERTY_WOHNSITZ_ANTEIL_VATER,
  GeschwisterUpdateDtoSpec.JSON_PROPERTY_NACHNAME
})
@JsonTypeName("GeschwisterUpdate")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GeschwisterUpdateDtoSpec {
  public static final String JSON_PROPERTY_VORNAME = "vorname";
  private String vorname;

  public static final String JSON_PROPERTY_GEBURTSDATUM = "geburtsdatum";
  private LocalDate geburtsdatum;

  public static final String JSON_PROPERTY_WOHNSITZ = "wohnsitz";
  private WohnsitzDtoSpec wohnsitz;

  public static final String JSON_PROPERTY_AUSBILDUNGSSITUATION = "ausbildungssituation";
  private AusbildungssituationDtoSpec ausbildungssituation;

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_WOHNSITZ_ANTEIL_MUTTER = "wohnsitzAnteilMutter";
  private BigDecimal wohnsitzAnteilMutter;

  public static final String JSON_PROPERTY_WOHNSITZ_ANTEIL_VATER = "wohnsitzAnteilVater";
  private BigDecimal wohnsitzAnteilVater;

  public static final String JSON_PROPERTY_NACHNAME = "nachname";
  private String nachname;

  public GeschwisterUpdateDtoSpec() {
  }

  public GeschwisterUpdateDtoSpec vorname(String vorname) {
    
    this.vorname = vorname;
    return this;
  }

   /**
   * Get vorname
   * @return vorname
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VORNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVorname() {
    return vorname;
  }


  @JsonProperty(JSON_PROPERTY_VORNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVorname(String vorname) {
    this.vorname = vorname;
  }


  public GeschwisterUpdateDtoSpec geburtsdatum(LocalDate geburtsdatum) {
    
    this.geburtsdatum = geburtsdatum;
    return this;
  }

   /**
   * dd.MM.yyyy
   * @return geburtsdatum
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GEBURTSDATUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalDate getGeburtsdatum() {
    return geburtsdatum;
  }


  @JsonProperty(JSON_PROPERTY_GEBURTSDATUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGeburtsdatum(LocalDate geburtsdatum) {
    this.geburtsdatum = geburtsdatum;
  }


  public GeschwisterUpdateDtoSpec wohnsitz(WohnsitzDtoSpec wohnsitz) {
    
    this.wohnsitz = wohnsitz;
    return this;
  }

   /**
   * Get wohnsitz
   * @return wohnsitz
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WOHNSITZ)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WohnsitzDtoSpec getWohnsitz() {
    return wohnsitz;
  }


  @JsonProperty(JSON_PROPERTY_WOHNSITZ)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWohnsitz(WohnsitzDtoSpec wohnsitz) {
    this.wohnsitz = wohnsitz;
  }


  public GeschwisterUpdateDtoSpec ausbildungssituation(AusbildungssituationDtoSpec ausbildungssituation) {
    
    this.ausbildungssituation = ausbildungssituation;
    return this;
  }

   /**
   * Get ausbildungssituation
   * @return ausbildungssituation
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUSBILDUNGSSITUATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AusbildungssituationDtoSpec getAusbildungssituation() {
    return ausbildungssituation;
  }


  @JsonProperty(JSON_PROPERTY_AUSBILDUNGSSITUATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAusbildungssituation(AusbildungssituationDtoSpec ausbildungssituation) {
    this.ausbildungssituation = ausbildungssituation;
  }


  public GeschwisterUpdateDtoSpec id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public GeschwisterUpdateDtoSpec wohnsitzAnteilMutter(BigDecimal wohnsitzAnteilMutter) {
    
    this.wohnsitzAnteilMutter = wohnsitzAnteilMutter;
    return this;
  }

   /**
   * Required wenn Wohnsitz.MUTTER_VATER.
   * @return wohnsitzAnteilMutter
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WOHNSITZ_ANTEIL_MUTTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getWohnsitzAnteilMutter() {
    return wohnsitzAnteilMutter;
  }


  @JsonProperty(JSON_PROPERTY_WOHNSITZ_ANTEIL_MUTTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWohnsitzAnteilMutter(BigDecimal wohnsitzAnteilMutter) {
    this.wohnsitzAnteilMutter = wohnsitzAnteilMutter;
  }


  public GeschwisterUpdateDtoSpec wohnsitzAnteilVater(BigDecimal wohnsitzAnteilVater) {
    
    this.wohnsitzAnteilVater = wohnsitzAnteilVater;
    return this;
  }

   /**
   * Required wenn Wohnsitz.MUTTER_VATER.
   * @return wohnsitzAnteilVater
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WOHNSITZ_ANTEIL_VATER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getWohnsitzAnteilVater() {
    return wohnsitzAnteilVater;
  }


  @JsonProperty(JSON_PROPERTY_WOHNSITZ_ANTEIL_VATER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWohnsitzAnteilVater(BigDecimal wohnsitzAnteilVater) {
    this.wohnsitzAnteilVater = wohnsitzAnteilVater;
  }


  public GeschwisterUpdateDtoSpec nachname(String nachname) {
    
    this.nachname = nachname;
    return this;
  }

   /**
   * Get nachname
   * @return nachname
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NACHNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNachname() {
    return nachname;
  }


  @JsonProperty(JSON_PROPERTY_NACHNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNachname(String nachname) {
    this.nachname = nachname;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeschwisterUpdateDtoSpec geschwisterUpdate = (GeschwisterUpdateDtoSpec) o;
    return Objects.equals(this.vorname, geschwisterUpdate.vorname) &&
        Objects.equals(this.geburtsdatum, geschwisterUpdate.geburtsdatum) &&
        Objects.equals(this.wohnsitz, geschwisterUpdate.wohnsitz) &&
        Objects.equals(this.ausbildungssituation, geschwisterUpdate.ausbildungssituation) &&
        Objects.equals(this.id, geschwisterUpdate.id) &&
        Objects.equals(this.wohnsitzAnteilMutter, geschwisterUpdate.wohnsitzAnteilMutter) &&
        Objects.equals(this.wohnsitzAnteilVater, geschwisterUpdate.wohnsitzAnteilVater) &&
        Objects.equals(this.nachname, geschwisterUpdate.nachname);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vorname, geburtsdatum, wohnsitz, ausbildungssituation, id, wohnsitzAnteilMutter, wohnsitzAnteilVater, nachname);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeschwisterUpdateDtoSpec {\n");
    sb.append("    vorname: ").append(toIndentedString(vorname)).append("\n");
    sb.append("    geburtsdatum: ").append(toIndentedString(geburtsdatum)).append("\n");
    sb.append("    wohnsitz: ").append(toIndentedString(wohnsitz)).append("\n");
    sb.append("    ausbildungssituation: ").append(toIndentedString(ausbildungssituation)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    wohnsitzAnteilMutter: ").append(toIndentedString(wohnsitzAnteilMutter)).append("\n");
    sb.append("    wohnsitzAnteilVater: ").append(toIndentedString(wohnsitzAnteilVater)).append("\n");
    sb.append("    nachname: ").append(toIndentedString(nachname)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

