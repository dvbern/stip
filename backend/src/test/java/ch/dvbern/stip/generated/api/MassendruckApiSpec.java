/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.api;

import java.io.File;
import ch.dvbern.stip.generated.dto.FileDownloadTokenDtoSpec;
import ch.dvbern.stip.generated.dto.GetGesucheSBQueryTypeDtoSpec;
import ch.dvbern.stip.generated.dto.GetMassendruckJobQueryTypeDtoSpec;
import java.time.LocalDate;
import ch.dvbern.stip.generated.dto.MassendruckDatenschutzbriefDtoSpec;
import ch.dvbern.stip.generated.dto.MassendruckJobDetailDtoSpec;
import ch.dvbern.stip.generated.dto.MassendruckJobDtoSpec;
import ch.dvbern.stip.generated.dto.MassendruckJobSortColumnDtoSpec;
import ch.dvbern.stip.generated.dto.MassendruckJobStatusDtoSpec;
import ch.dvbern.stip.generated.dto.MassendruckJobTypDtoSpec;
import ch.dvbern.stip.generated.dto.MassendruckVerfuegungDtoSpec;
import ch.dvbern.stip.generated.dto.PaginatedMassendruckJobDtoSpec;
import ch.dvbern.stip.generated.dto.SortOrderDtoSpec;
import java.util.UUID;
import ch.dvbern.stip.generated.dto.ValidationReportDtoSpec;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import io.restassured.RestAssured;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.builder.ResponseSpecBuilder;
import io.restassured.common.mapper.TypeRef;
import io.restassured.http.Method;
import io.restassured.response.Response;

import java.lang.reflect.Type;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Supplier;
import static io.restassured.http.Method.*;

public class MassendruckApiSpec {

    private Supplier<RequestSpecBuilder> reqSpecSupplier;
    private Consumer<RequestSpecBuilder> reqSpecCustomizer;

    private MassendruckApiSpec(Supplier<RequestSpecBuilder> reqSpecSupplier) {
        this.reqSpecSupplier = reqSpecSupplier;
    }

    public static MassendruckApiSpec massendruck(Supplier<RequestSpecBuilder> reqSpecSupplier) {
        return new MassendruckApiSpec(reqSpecSupplier);
    }

    private RequestSpecBuilder createReqSpec() {
        RequestSpecBuilder reqSpec = reqSpecSupplier.get();
        if(reqSpecCustomizer != null) {
            reqSpecCustomizer.accept(reqSpec);
        }
        return reqSpec;
    }

    public List<Oper> getAllOperations() {
        return Arrays.asList(
                createMassendruckJobForQueryType(),
                deleteMassendruckJob(),
                downloadMassendruckDocument(),
                getAllMassendruckJobs(),
                getMassendruckDownloadToken(),
                getMassendruckJobDetail(),
                massendruckDatenschutzbriefVersenden(),
                massendruckVerfuegungVersenden(),
                retryMassendruckJob()
        );
    }

    public CreateMassendruckJobForQueryTypeOper createMassendruckJobForQueryType() {
        return new CreateMassendruckJobForQueryTypeOper(createReqSpec());
    }

    public DeleteMassendruckJobOper deleteMassendruckJob() {
        return new DeleteMassendruckJobOper(createReqSpec());
    }

    public DownloadMassendruckDocumentOper downloadMassendruckDocument() {
        return new DownloadMassendruckDocumentOper(createReqSpec());
    }

    public GetAllMassendruckJobsOper getAllMassendruckJobs() {
        return new GetAllMassendruckJobsOper(createReqSpec());
    }

    public GetMassendruckDownloadTokenOper getMassendruckDownloadToken() {
        return new GetMassendruckDownloadTokenOper(createReqSpec());
    }

    public GetMassendruckJobDetailOper getMassendruckJobDetail() {
        return new GetMassendruckJobDetailOper(createReqSpec());
    }

    public MassendruckDatenschutzbriefVersendenOper massendruckDatenschutzbriefVersenden() {
        return new MassendruckDatenschutzbriefVersendenOper(createReqSpec());
    }

    public MassendruckVerfuegungVersendenOper massendruckVerfuegungVersenden() {
        return new MassendruckVerfuegungVersendenOper(createReqSpec());
    }

    public RetryMassendruckJobOper retryMassendruckJob() {
        return new RetryMassendruckJobOper(createReqSpec());
    }

    /**
     * Customize request specification
     * @param reqSpecCustomizer consumer to modify the RequestSpecBuilder
     * @return api
     */
    public MassendruckApiSpec reqSpec(Consumer<RequestSpecBuilder> reqSpecCustomizer) {
        this.reqSpecCustomizer = reqSpecCustomizer;
        return this;
    }

    /**
     * 
     * Create a Massendruck Job for the given query type
     *
     * @see #getGesucheSBQueryTypePath  (required)
     * return MassendruckJobDtoSpec
     */
    public static class CreateMassendruckJobForQueryTypeOper implements Oper {

        public static final Method REQ_METHOD = POST;
        public static final String REQ_URI = "/massendruck/{getGesucheSBQueryType}/create";

        private RequestSpecBuilder reqSpec;
        private ResponseSpecBuilder respSpec;

        public CreateMassendruckJobForQueryTypeOper(RequestSpecBuilder reqSpec) {
            this.reqSpec = reqSpec;
            reqSpec.setAccept("application/json");
            this.respSpec = new ResponseSpecBuilder();
        }

        /**
         * POST /massendruck/{getGesucheSBQueryType}/create
         * @param handler handler
         * @param <T> type
         * @return type
         */
        @Override
        public <T> T execute(Function<Response, T> handler) {
            return handler.apply(RestAssured.given().spec(reqSpec.build()).expect().spec(respSpec.build()).when().request(REQ_METHOD, REQ_URI));
        }

        /**
         * POST /massendruck/{getGesucheSBQueryType}/create
         * @param handler handler
         * @return MassendruckJobDtoSpec
         */
        public MassendruckJobDtoSpec executeAs(Function<Response, Response> handler) {
            TypeRef<MassendruckJobDtoSpec> type = new TypeRef<MassendruckJobDtoSpec>(){};
            return execute(handler).as(type);
        }

        public static final String GET_GESUCHE_S_B_QUERY_TYPE_PATH = "getGesucheSBQueryType";

        /**
         * @param getGesucheSBQueryType (GetGesucheSBQueryTypeDtoSpec)  (required)
         * @return operation
         */
        public CreateMassendruckJobForQueryTypeOper getGesucheSBQueryTypePath(Object getGesucheSBQueryType) {
            reqSpec.addPathParam(GET_GESUCHE_S_B_QUERY_TYPE_PATH, getGesucheSBQueryType);
            return this;
        }

        /**
         * Customize request specification
         * @param reqSpecCustomizer consumer to modify the RequestSpecBuilder
         * @return operation
         */
        public CreateMassendruckJobForQueryTypeOper reqSpec(Consumer<RequestSpecBuilder> reqSpecCustomizer) {
            reqSpecCustomizer.accept(reqSpec);
            return this;
        }

        /**
         * Customize response specification
         * @param respSpecCustomizer consumer to modify the ResponseSpecBuilder
         * @return operation
         */
        public CreateMassendruckJobForQueryTypeOper respSpec(Consumer<ResponseSpecBuilder> respSpecCustomizer) {
            respSpecCustomizer.accept(respSpec);
            return this;
        }
    }
    /**
     * Delete failed Massendruck Job
     * 
     *
     * @see #massendruckIdPath  (required)
     */
    public static class DeleteMassendruckJobOper implements Oper {

        public static final Method REQ_METHOD = POST;
        public static final String REQ_URI = "/massendruck/{massendruckId}/delete";

        private RequestSpecBuilder reqSpec;
        private ResponseSpecBuilder respSpec;

        public DeleteMassendruckJobOper(RequestSpecBuilder reqSpec) {
            this.reqSpec = reqSpec;
            reqSpec.setAccept("application/json");
            this.respSpec = new ResponseSpecBuilder();
        }

        /**
         * POST /massendruck/{massendruckId}/delete
         * @param handler handler
         * @param <T> type
         * @return type
         */
        @Override
        public <T> T execute(Function<Response, T> handler) {
            return handler.apply(RestAssured.given().spec(reqSpec.build()).expect().spec(respSpec.build()).when().request(REQ_METHOD, REQ_URI));
        }

        public static final String MASSENDRUCK_ID_PATH = "massendruckId";

        /**
         * @param massendruckId (UUID)  (required)
         * @return operation
         */
        public DeleteMassendruckJobOper massendruckIdPath(Object massendruckId) {
            reqSpec.addPathParam(MASSENDRUCK_ID_PATH, massendruckId);
            return this;
        }

        /**
         * Customize request specification
         * @param reqSpecCustomizer consumer to modify the RequestSpecBuilder
         * @return operation
         */
        public DeleteMassendruckJobOper reqSpec(Consumer<RequestSpecBuilder> reqSpecCustomizer) {
            reqSpecCustomizer.accept(reqSpec);
            return this;
        }

        /**
         * Customize response specification
         * @param respSpecCustomizer consumer to modify the ResponseSpecBuilder
         * @return operation
         */
        public DeleteMassendruckJobOper respSpec(Consumer<ResponseSpecBuilder> respSpecCustomizer) {
            respSpecCustomizer.accept(respSpec);
            return this;
        }
    }
    /**
     * 
     * 
     *
     * @see #tokenQuery  (required)
     * return File
     */
    public static class DownloadMassendruckDocumentOper implements Oper {

        public static final Method REQ_METHOD = GET;
        public static final String REQ_URI = "/massendruck/download";

        private RequestSpecBuilder reqSpec;
        private ResponseSpecBuilder respSpec;

        public DownloadMassendruckDocumentOper(RequestSpecBuilder reqSpec) {
            this.reqSpec = reqSpec;
            reqSpec.setAccept("application/octet-stream");
            this.respSpec = new ResponseSpecBuilder();
        }

        /**
         * GET /massendruck/download
         * @param handler handler
         * @param <T> type
         * @return type
         */
        @Override
        public <T> T execute(Function<Response, T> handler) {
            return handler.apply(RestAssured.given().spec(reqSpec.build()).expect().spec(respSpec.build()).when().request(REQ_METHOD, REQ_URI));
        }

        /**
         * GET /massendruck/download
         * @param handler handler
         * @return File
         */
        public File executeAs(Function<Response, Response> handler) {
            TypeRef<File> type = new TypeRef<File>(){};
            return execute(handler).as(type);
        }

        public static final String TOKEN_QUERY = "token";

        /**
         * @param token (String)  (required)
         * @return operation
         */
        public DownloadMassendruckDocumentOper tokenQuery(Object... token) {
            reqSpec.addQueryParam(TOKEN_QUERY, token);
            return this;
        }

        /**
         * Customize request specification
         * @param reqSpecCustomizer consumer to modify the RequestSpecBuilder
         * @return operation
         */
        public DownloadMassendruckDocumentOper reqSpec(Consumer<RequestSpecBuilder> reqSpecCustomizer) {
            reqSpecCustomizer.accept(reqSpec);
            return this;
        }

        /**
         * Customize response specification
         * @param respSpecCustomizer consumer to modify the ResponseSpecBuilder
         * @return operation
         */
        public DownloadMassendruckDocumentOper respSpec(Consumer<ResponseSpecBuilder> respSpecCustomizer) {
            respSpecCustomizer.accept(respSpec);
            return this;
        }
    }
    /**
     * Get all Massendruck Jobs
     * 
     *
     * @see #getMassendruckJobsPath  (required)
     * @see #pageQuery  (required)
     * @see #pageSizeQuery  (required)
     * @see #massendruckJobNumberQuery  (optional)
     * @see #userErstelltQuery  (optional)
     * @see #timestampErstelltQuery  (optional)
     * @see #massendruckJobStatusQuery  (optional)
     * @see #massendruckJobTypQuery  (optional)
     * @see #sortColumnQuery  (optional)
     * @see #sortOrderQuery  (optional)
     * return PaginatedMassendruckJobDtoSpec
     */
    public static class GetAllMassendruckJobsOper implements Oper {

        public static final Method REQ_METHOD = GET;
        public static final String REQ_URI = "/massendruck/{getMassendruckJobs}";

        private RequestSpecBuilder reqSpec;
        private ResponseSpecBuilder respSpec;

        public GetAllMassendruckJobsOper(RequestSpecBuilder reqSpec) {
            this.reqSpec = reqSpec;
            reqSpec.setAccept("application/json");
            this.respSpec = new ResponseSpecBuilder();
        }

        /**
         * GET /massendruck/{getMassendruckJobs}
         * @param handler handler
         * @param <T> type
         * @return type
         */
        @Override
        public <T> T execute(Function<Response, T> handler) {
            return handler.apply(RestAssured.given().spec(reqSpec.build()).expect().spec(respSpec.build()).when().request(REQ_METHOD, REQ_URI));
        }

        /**
         * GET /massendruck/{getMassendruckJobs}
         * @param handler handler
         * @return PaginatedMassendruckJobDtoSpec
         */
        public PaginatedMassendruckJobDtoSpec executeAs(Function<Response, Response> handler) {
            TypeRef<PaginatedMassendruckJobDtoSpec> type = new TypeRef<PaginatedMassendruckJobDtoSpec>(){};
            return execute(handler).as(type);
        }

        public static final String GET_MASSENDRUCK_JOBS_PATH = "getMassendruckJobs";

        /**
         * @param getMassendruckJobs (GetMassendruckJobQueryTypeDtoSpec)  (required)
         * @return operation
         */
        public GetAllMassendruckJobsOper getMassendruckJobsPath(Object getMassendruckJobs) {
            reqSpec.addPathParam(GET_MASSENDRUCK_JOBS_PATH, getMassendruckJobs);
            return this;
        }

        public static final String MASSENDRUCK_JOB_NUMBER_QUERY = "massendruckJobNumber";

        /**
         * @param massendruckJobNumber (Integer)  (optional)
         * @return operation
         */
        public GetAllMassendruckJobsOper massendruckJobNumberQuery(Object... massendruckJobNumber) {
            reqSpec.addQueryParam(MASSENDRUCK_JOB_NUMBER_QUERY, massendruckJobNumber);
            return this;
        }

        public static final String USER_ERSTELLT_QUERY = "userErstellt";

        /**
         * @param userErstellt (String)  (optional)
         * @return operation
         */
        public GetAllMassendruckJobsOper userErstelltQuery(Object... userErstellt) {
            reqSpec.addQueryParam(USER_ERSTELLT_QUERY, userErstellt);
            return this;
        }

        public static final String TIMESTAMP_ERSTELLT_QUERY = "timestampErstellt";

        /**
         * @param timestampErstellt (LocalDate)  (optional)
         * @return operation
         */
        public GetAllMassendruckJobsOper timestampErstelltQuery(Object... timestampErstellt) {
            reqSpec.addQueryParam(TIMESTAMP_ERSTELLT_QUERY, timestampErstellt);
            return this;
        }

        public static final String MASSENDRUCK_JOB_STATUS_QUERY = "massendruckJobStatus";

        /**
         * @param massendruckJobStatus (MassendruckJobStatusDtoSpec)  (optional)
         * @return operation
         */
        public GetAllMassendruckJobsOper massendruckJobStatusQuery(Object... massendruckJobStatus) {
            reqSpec.addQueryParam(MASSENDRUCK_JOB_STATUS_QUERY, massendruckJobStatus);
            return this;
        }

        public static final String MASSENDRUCK_JOB_TYP_QUERY = "massendruckJobTyp";

        /**
         * @param massendruckJobTyp (MassendruckJobTypDtoSpec)  (optional)
         * @return operation
         */
        public GetAllMassendruckJobsOper massendruckJobTypQuery(Object... massendruckJobTyp) {
            reqSpec.addQueryParam(MASSENDRUCK_JOB_TYP_QUERY, massendruckJobTyp);
            return this;
        }

        public static final String SORT_COLUMN_QUERY = "sortColumn";

        /**
         * @param sortColumn (MassendruckJobSortColumnDtoSpec)  (optional)
         * @return operation
         */
        public GetAllMassendruckJobsOper sortColumnQuery(Object... sortColumn) {
            reqSpec.addQueryParam(SORT_COLUMN_QUERY, sortColumn);
            return this;
        }

        public static final String SORT_ORDER_QUERY = "sortOrder";

        /**
         * @param sortOrder (SortOrderDtoSpec)  (optional)
         * @return operation
         */
        public GetAllMassendruckJobsOper sortOrderQuery(Object... sortOrder) {
            reqSpec.addQueryParam(SORT_ORDER_QUERY, sortOrder);
            return this;
        }

        public static final String PAGE_QUERY = "page";

        /**
         * @param page (Integer)  (required)
         * @return operation
         */
        public GetAllMassendruckJobsOper pageQuery(Object... page) {
            reqSpec.addQueryParam(PAGE_QUERY, page);
            return this;
        }

        public static final String PAGE_SIZE_QUERY = "pageSize";

        /**
         * @param pageSize (Integer)  (required)
         * @return operation
         */
        public GetAllMassendruckJobsOper pageSizeQuery(Object... pageSize) {
            reqSpec.addQueryParam(PAGE_SIZE_QUERY, pageSize);
            return this;
        }

        /**
         * Customize request specification
         * @param reqSpecCustomizer consumer to modify the RequestSpecBuilder
         * @return operation
         */
        public GetAllMassendruckJobsOper reqSpec(Consumer<RequestSpecBuilder> reqSpecCustomizer) {
            reqSpecCustomizer.accept(reqSpec);
            return this;
        }

        /**
         * Customize response specification
         * @param respSpecCustomizer consumer to modify the ResponseSpecBuilder
         * @return operation
         */
        public GetAllMassendruckJobsOper respSpec(Consumer<ResponseSpecBuilder> respSpecCustomizer) {
            respSpecCustomizer.accept(respSpec);
            return this;
        }
    }
    /**
     * get Token to downlaod Verfuegung
     * 
     *
     * @see #massendruckIdPath  (required)
     * return FileDownloadTokenDtoSpec
     */
    public static class GetMassendruckDownloadTokenOper implements Oper {

        public static final Method REQ_METHOD = GET;
        public static final String REQ_URI = "/massendruck/{massendruckId}/token";

        private RequestSpecBuilder reqSpec;
        private ResponseSpecBuilder respSpec;

        public GetMassendruckDownloadTokenOper(RequestSpecBuilder reqSpec) {
            this.reqSpec = reqSpec;
            reqSpec.setAccept("application/json");
            this.respSpec = new ResponseSpecBuilder();
        }

        /**
         * GET /massendruck/{massendruckId}/token
         * @param handler handler
         * @param <T> type
         * @return type
         */
        @Override
        public <T> T execute(Function<Response, T> handler) {
            return handler.apply(RestAssured.given().spec(reqSpec.build()).expect().spec(respSpec.build()).when().request(REQ_METHOD, REQ_URI));
        }

        /**
         * GET /massendruck/{massendruckId}/token
         * @param handler handler
         * @return FileDownloadTokenDtoSpec
         */
        public FileDownloadTokenDtoSpec executeAs(Function<Response, Response> handler) {
            TypeRef<FileDownloadTokenDtoSpec> type = new TypeRef<FileDownloadTokenDtoSpec>(){};
            return execute(handler).as(type);
        }

        public static final String MASSENDRUCK_ID_PATH = "massendruckId";

        /**
         * @param massendruckId (UUID)  (required)
         * @return operation
         */
        public GetMassendruckDownloadTokenOper massendruckIdPath(Object massendruckId) {
            reqSpec.addPathParam(MASSENDRUCK_ID_PATH, massendruckId);
            return this;
        }

        /**
         * Customize request specification
         * @param reqSpecCustomizer consumer to modify the RequestSpecBuilder
         * @return operation
         */
        public GetMassendruckDownloadTokenOper reqSpec(Consumer<RequestSpecBuilder> reqSpecCustomizer) {
            reqSpecCustomizer.accept(reqSpec);
            return this;
        }

        /**
         * Customize response specification
         * @param respSpecCustomizer consumer to modify the ResponseSpecBuilder
         * @return operation
         */
        public GetMassendruckDownloadTokenOper respSpec(Consumer<ResponseSpecBuilder> respSpecCustomizer) {
            respSpecCustomizer.accept(respSpec);
            return this;
        }
    }
    /**
     * 
     * Create a Massendruck Job for the given query type
     *
     * @see #massendruckJobIdPath  (required)
     * return MassendruckJobDetailDtoSpec
     */
    public static class GetMassendruckJobDetailOper implements Oper {

        public static final Method REQ_METHOD = GET;
        public static final String REQ_URI = "/massendruck/detail/{massendruckJobId}";

        private RequestSpecBuilder reqSpec;
        private ResponseSpecBuilder respSpec;

        public GetMassendruckJobDetailOper(RequestSpecBuilder reqSpec) {
            this.reqSpec = reqSpec;
            reqSpec.setAccept("application/json");
            this.respSpec = new ResponseSpecBuilder();
        }

        /**
         * GET /massendruck/detail/{massendruckJobId}
         * @param handler handler
         * @param <T> type
         * @return type
         */
        @Override
        public <T> T execute(Function<Response, T> handler) {
            return handler.apply(RestAssured.given().spec(reqSpec.build()).expect().spec(respSpec.build()).when().request(REQ_METHOD, REQ_URI));
        }

        /**
         * GET /massendruck/detail/{massendruckJobId}
         * @param handler handler
         * @return MassendruckJobDetailDtoSpec
         */
        public MassendruckJobDetailDtoSpec executeAs(Function<Response, Response> handler) {
            TypeRef<MassendruckJobDetailDtoSpec> type = new TypeRef<MassendruckJobDetailDtoSpec>(){};
            return execute(handler).as(type);
        }

        public static final String MASSENDRUCK_JOB_ID_PATH = "massendruckJobId";

        /**
         * @param massendruckJobId (UUID)  (required)
         * @return operation
         */
        public GetMassendruckJobDetailOper massendruckJobIdPath(Object massendruckJobId) {
            reqSpec.addPathParam(MASSENDRUCK_JOB_ID_PATH, massendruckJobId);
            return this;
        }

        /**
         * Customize request specification
         * @param reqSpecCustomizer consumer to modify the RequestSpecBuilder
         * @return operation
         */
        public GetMassendruckJobDetailOper reqSpec(Consumer<RequestSpecBuilder> reqSpecCustomizer) {
            reqSpecCustomizer.accept(reqSpec);
            return this;
        }

        /**
         * Customize response specification
         * @param respSpecCustomizer consumer to modify the ResponseSpecBuilder
         * @return operation
         */
        public GetMassendruckJobDetailOper respSpec(Consumer<ResponseSpecBuilder> respSpecCustomizer) {
            respSpecCustomizer.accept(respSpec);
            return this;
        }
    }
    /**
     * 
     * Send a Massendruck Datenschutzbrief
     *
     * @see #massendruckDatenschutzbriefIdPath  (required)
     * return MassendruckDatenschutzbriefDtoSpec
     */
    public static class MassendruckDatenschutzbriefVersendenOper implements Oper {

        public static final Method REQ_METHOD = POST;
        public static final String REQ_URI = "/massendruck/datenschutzbrief/versendet/{massendruckDatenschutzbriefId}";

        private RequestSpecBuilder reqSpec;
        private ResponseSpecBuilder respSpec;

        public MassendruckDatenschutzbriefVersendenOper(RequestSpecBuilder reqSpec) {
            this.reqSpec = reqSpec;
            reqSpec.setAccept("application/json");
            this.respSpec = new ResponseSpecBuilder();
        }

        /**
         * POST /massendruck/datenschutzbrief/versendet/{massendruckDatenschutzbriefId}
         * @param handler handler
         * @param <T> type
         * @return type
         */
        @Override
        public <T> T execute(Function<Response, T> handler) {
            return handler.apply(RestAssured.given().spec(reqSpec.build()).expect().spec(respSpec.build()).when().request(REQ_METHOD, REQ_URI));
        }

        /**
         * POST /massendruck/datenschutzbrief/versendet/{massendruckDatenschutzbriefId}
         * @param handler handler
         * @return MassendruckDatenschutzbriefDtoSpec
         */
        public MassendruckDatenschutzbriefDtoSpec executeAs(Function<Response, Response> handler) {
            TypeRef<MassendruckDatenschutzbriefDtoSpec> type = new TypeRef<MassendruckDatenschutzbriefDtoSpec>(){};
            return execute(handler).as(type);
        }

        public static final String MASSENDRUCK_DATENSCHUTZBRIEF_ID_PATH = "massendruckDatenschutzbriefId";

        /**
         * @param massendruckDatenschutzbriefId (UUID)  (required)
         * @return operation
         */
        public MassendruckDatenschutzbriefVersendenOper massendruckDatenschutzbriefIdPath(Object massendruckDatenschutzbriefId) {
            reqSpec.addPathParam(MASSENDRUCK_DATENSCHUTZBRIEF_ID_PATH, massendruckDatenschutzbriefId);
            return this;
        }

        /**
         * Customize request specification
         * @param reqSpecCustomizer consumer to modify the RequestSpecBuilder
         * @return operation
         */
        public MassendruckDatenschutzbriefVersendenOper reqSpec(Consumer<RequestSpecBuilder> reqSpecCustomizer) {
            reqSpecCustomizer.accept(reqSpec);
            return this;
        }

        /**
         * Customize response specification
         * @param respSpecCustomizer consumer to modify the ResponseSpecBuilder
         * @return operation
         */
        public MassendruckDatenschutzbriefVersendenOper respSpec(Consumer<ResponseSpecBuilder> respSpecCustomizer) {
            respSpecCustomizer.accept(respSpec);
            return this;
        }
    }
    /**
     * 
     * Send a Massendruck Verfuegung
     *
     * @see #massendruckVerfuegungIdPath  (required)
     * return MassendruckVerfuegungDtoSpec
     */
    public static class MassendruckVerfuegungVersendenOper implements Oper {

        public static final Method REQ_METHOD = POST;
        public static final String REQ_URI = "/massendruck/verfuegung/versendet/{massendruckVerfuegungId}";

        private RequestSpecBuilder reqSpec;
        private ResponseSpecBuilder respSpec;

        public MassendruckVerfuegungVersendenOper(RequestSpecBuilder reqSpec) {
            this.reqSpec = reqSpec;
            reqSpec.setAccept("application/json");
            this.respSpec = new ResponseSpecBuilder();
        }

        /**
         * POST /massendruck/verfuegung/versendet/{massendruckVerfuegungId}
         * @param handler handler
         * @param <T> type
         * @return type
         */
        @Override
        public <T> T execute(Function<Response, T> handler) {
            return handler.apply(RestAssured.given().spec(reqSpec.build()).expect().spec(respSpec.build()).when().request(REQ_METHOD, REQ_URI));
        }

        /**
         * POST /massendruck/verfuegung/versendet/{massendruckVerfuegungId}
         * @param handler handler
         * @return MassendruckVerfuegungDtoSpec
         */
        public MassendruckVerfuegungDtoSpec executeAs(Function<Response, Response> handler) {
            TypeRef<MassendruckVerfuegungDtoSpec> type = new TypeRef<MassendruckVerfuegungDtoSpec>(){};
            return execute(handler).as(type);
        }

        public static final String MASSENDRUCK_VERFUEGUNG_ID_PATH = "massendruckVerfuegungId";

        /**
         * @param massendruckVerfuegungId (UUID)  (required)
         * @return operation
         */
        public MassendruckVerfuegungVersendenOper massendruckVerfuegungIdPath(Object massendruckVerfuegungId) {
            reqSpec.addPathParam(MASSENDRUCK_VERFUEGUNG_ID_PATH, massendruckVerfuegungId);
            return this;
        }

        /**
         * Customize request specification
         * @param reqSpecCustomizer consumer to modify the RequestSpecBuilder
         * @return operation
         */
        public MassendruckVerfuegungVersendenOper reqSpec(Consumer<RequestSpecBuilder> reqSpecCustomizer) {
            reqSpecCustomizer.accept(reqSpec);
            return this;
        }

        /**
         * Customize response specification
         * @param respSpecCustomizer consumer to modify the ResponseSpecBuilder
         * @return operation
         */
        public MassendruckVerfuegungVersendenOper respSpec(Consumer<ResponseSpecBuilder> respSpecCustomizer) {
            respSpecCustomizer.accept(respSpec);
            return this;
        }
    }
    /**
     * Delete failed Massendruck Job
     * 
     *
     * @see #massendruckIdPath  (required)
     * return MassendruckJobDetailDtoSpec
     */
    public static class RetryMassendruckJobOper implements Oper {

        public static final Method REQ_METHOD = POST;
        public static final String REQ_URI = "/massendruck/{massendruckId}/retry";

        private RequestSpecBuilder reqSpec;
        private ResponseSpecBuilder respSpec;

        public RetryMassendruckJobOper(RequestSpecBuilder reqSpec) {
            this.reqSpec = reqSpec;
            reqSpec.setAccept("application/json");
            this.respSpec = new ResponseSpecBuilder();
        }

        /**
         * POST /massendruck/{massendruckId}/retry
         * @param handler handler
         * @param <T> type
         * @return type
         */
        @Override
        public <T> T execute(Function<Response, T> handler) {
            return handler.apply(RestAssured.given().spec(reqSpec.build()).expect().spec(respSpec.build()).when().request(REQ_METHOD, REQ_URI));
        }

        /**
         * POST /massendruck/{massendruckId}/retry
         * @param handler handler
         * @return MassendruckJobDetailDtoSpec
         */
        public MassendruckJobDetailDtoSpec executeAs(Function<Response, Response> handler) {
            TypeRef<MassendruckJobDetailDtoSpec> type = new TypeRef<MassendruckJobDetailDtoSpec>(){};
            return execute(handler).as(type);
        }

        public static final String MASSENDRUCK_ID_PATH = "massendruckId";

        /**
         * @param massendruckId (UUID)  (required)
         * @return operation
         */
        public RetryMassendruckJobOper massendruckIdPath(Object massendruckId) {
            reqSpec.addPathParam(MASSENDRUCK_ID_PATH, massendruckId);
            return this;
        }

        /**
         * Customize request specification
         * @param reqSpecCustomizer consumer to modify the RequestSpecBuilder
         * @return operation
         */
        public RetryMassendruckJobOper reqSpec(Consumer<RequestSpecBuilder> reqSpecCustomizer) {
            reqSpecCustomizer.accept(reqSpec);
            return this;
        }

        /**
         * Customize response specification
         * @param respSpecCustomizer consumer to modify the ResponseSpecBuilder
         * @return operation
         */
        public RetryMassendruckJobOper respSpec(Consumer<ResponseSpecBuilder> respSpecCustomizer) {
            respSpecCustomizer.accept(respSpec);
            return this;
        }
    }
}
