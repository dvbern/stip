/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.AdresseDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ZahlungsverbindungDtoSpec
 */
@JsonPropertyOrder({
  ZahlungsverbindungDtoSpec.JSON_PROPERTY_VORNAME,
  ZahlungsverbindungDtoSpec.JSON_PROPERTY_ADRESSE,
  ZahlungsverbindungDtoSpec.JSON_PROPERTY_IBAN,
  ZahlungsverbindungDtoSpec.JSON_PROPERTY_NACHNAME
})
@JsonTypeName("Zahlungsverbindung")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ZahlungsverbindungDtoSpec {
  public static final String JSON_PROPERTY_VORNAME = "vorname";
  private String vorname;

  public static final String JSON_PROPERTY_ADRESSE = "adresse";
  private AdresseDtoSpec adresse;

  public static final String JSON_PROPERTY_IBAN = "iban";
  private String iban;

  public static final String JSON_PROPERTY_NACHNAME = "nachname";
  private String nachname;

  public ZahlungsverbindungDtoSpec() {
  }

  public ZahlungsverbindungDtoSpec vorname(String vorname) {
    
    this.vorname = vorname;
    return this;
  }

   /**
   * Get vorname
   * @return vorname
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VORNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVorname() {
    return vorname;
  }


  @JsonProperty(JSON_PROPERTY_VORNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVorname(String vorname) {
    this.vorname = vorname;
  }


  public ZahlungsverbindungDtoSpec adresse(AdresseDtoSpec adresse) {
    
    this.adresse = adresse;
    return this;
  }

   /**
   * Get adresse
   * @return adresse
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADRESSE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AdresseDtoSpec getAdresse() {
    return adresse;
  }


  @JsonProperty(JSON_PROPERTY_ADRESSE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAdresse(AdresseDtoSpec adresse) {
    this.adresse = adresse;
  }


  public ZahlungsverbindungDtoSpec iban(String iban) {
    
    this.iban = iban;
    return this;
  }

   /**
   * Get iban
   * @return iban
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIban() {
    return iban;
  }


  @JsonProperty(JSON_PROPERTY_IBAN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIban(String iban) {
    this.iban = iban;
  }


  public ZahlungsverbindungDtoSpec nachname(String nachname) {
    
    this.nachname = nachname;
    return this;
  }

   /**
   * Get nachname
   * @return nachname
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NACHNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNachname() {
    return nachname;
  }


  @JsonProperty(JSON_PROPERTY_NACHNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNachname(String nachname) {
    this.nachname = nachname;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ZahlungsverbindungDtoSpec zahlungsverbindung = (ZahlungsverbindungDtoSpec) o;
    return Objects.equals(this.vorname, zahlungsverbindung.vorname) &&
        Objects.equals(this.adresse, zahlungsverbindung.adresse) &&
        Objects.equals(this.iban, zahlungsverbindung.iban) &&
        Objects.equals(this.nachname, zahlungsverbindung.nachname);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vorname, adresse, iban, nachname);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ZahlungsverbindungDtoSpec {\n");
    sb.append("    vorname: ").append(toIndentedString(vorname)).append("\n");
    sb.append("    adresse: ").append(toIndentedString(adresse)).append("\n");
    sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
    sb.append("    nachname: ").append(toIndentedString(nachname)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

