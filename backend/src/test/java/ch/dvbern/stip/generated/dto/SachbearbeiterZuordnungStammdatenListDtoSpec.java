/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.SachbearbeiterZuordnungStammdatenDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * 
 */
@JsonPropertyOrder({
  SachbearbeiterZuordnungStammdatenListDtoSpec.JSON_PROPERTY_SACHBEARBEITER,
  SachbearbeiterZuordnungStammdatenListDtoSpec.JSON_PROPERTY_ZUORDNUNG
})
@JsonTypeName("SachbearbeiterZuordnungStammdatenList")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SachbearbeiterZuordnungStammdatenListDtoSpec {
  public static final String JSON_PROPERTY_SACHBEARBEITER = "sachbearbeiter";
  private UUID sachbearbeiter;

  public static final String JSON_PROPERTY_ZUORDNUNG = "zuordnung";
  private SachbearbeiterZuordnungStammdatenDtoSpec zuordnung;

  public SachbearbeiterZuordnungStammdatenListDtoSpec() {
  }

  public SachbearbeiterZuordnungStammdatenListDtoSpec sachbearbeiter(UUID sachbearbeiter) {
    
    this.sachbearbeiter = sachbearbeiter;
    return this;
  }

   /**
   * Get sachbearbeiter
   * @return sachbearbeiter
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SACHBEARBEITER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getSachbearbeiter() {
    return sachbearbeiter;
  }


  @JsonProperty(JSON_PROPERTY_SACHBEARBEITER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSachbearbeiter(UUID sachbearbeiter) {
    this.sachbearbeiter = sachbearbeiter;
  }


  public SachbearbeiterZuordnungStammdatenListDtoSpec zuordnung(SachbearbeiterZuordnungStammdatenDtoSpec zuordnung) {
    
    this.zuordnung = zuordnung;
    return this;
  }

   /**
   * Get zuordnung
   * @return zuordnung
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ZUORDNUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SachbearbeiterZuordnungStammdatenDtoSpec getZuordnung() {
    return zuordnung;
  }


  @JsonProperty(JSON_PROPERTY_ZUORDNUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setZuordnung(SachbearbeiterZuordnungStammdatenDtoSpec zuordnung) {
    this.zuordnung = zuordnung;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SachbearbeiterZuordnungStammdatenListDtoSpec sachbearbeiterZuordnungStammdatenList = (SachbearbeiterZuordnungStammdatenListDtoSpec) o;
    return Objects.equals(this.sachbearbeiter, sachbearbeiterZuordnungStammdatenList.sachbearbeiter) &&
        Objects.equals(this.zuordnung, sachbearbeiterZuordnungStammdatenList.zuordnung);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sachbearbeiter, zuordnung);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SachbearbeiterZuordnungStammdatenListDtoSpec {\n");
    sb.append("    sachbearbeiter: ").append(toIndentedString(sachbearbeiter)).append("\n");
    sb.append("    zuordnung: ").append(toIndentedString(zuordnung)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

