/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.ZahlungsverbindungDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FallAuszahlungUpdateDtoSpec
 */
@JsonPropertyOrder({
  FallAuszahlungUpdateDtoSpec.JSON_PROPERTY_AUSZAHLUNG_AN_SOZIALDIENST,
  FallAuszahlungUpdateDtoSpec.JSON_PROPERTY_ZAHLUNGSVERBINDUNG
})
@JsonTypeName("FallAuszahlungUpdate")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FallAuszahlungUpdateDtoSpec {
  public static final String JSON_PROPERTY_AUSZAHLUNG_AN_SOZIALDIENST = "auszahlungAnSozialdienst";
  private Boolean auszahlungAnSozialdienst;

  public static final String JSON_PROPERTY_ZAHLUNGSVERBINDUNG = "zahlungsverbindung";
  private ZahlungsverbindungDtoSpec zahlungsverbindung;

  public FallAuszahlungUpdateDtoSpec() {
  }

  public FallAuszahlungUpdateDtoSpec auszahlungAnSozialdienst(Boolean auszahlungAnSozialdienst) {
    
    this.auszahlungAnSozialdienst = auszahlungAnSozialdienst;
    return this;
  }

   /**
   * Get auszahlungAnSozialdienst
   * @return auszahlungAnSozialdienst
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUSZAHLUNG_AN_SOZIALDIENST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAuszahlungAnSozialdienst() {
    return auszahlungAnSozialdienst;
  }


  @JsonProperty(JSON_PROPERTY_AUSZAHLUNG_AN_SOZIALDIENST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuszahlungAnSozialdienst(Boolean auszahlungAnSozialdienst) {
    this.auszahlungAnSozialdienst = auszahlungAnSozialdienst;
  }


  public FallAuszahlungUpdateDtoSpec zahlungsverbindung(ZahlungsverbindungDtoSpec zahlungsverbindung) {
    
    this.zahlungsverbindung = zahlungsverbindung;
    return this;
  }

   /**
   * Get zahlungsverbindung
   * @return zahlungsverbindung
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ZAHLUNGSVERBINDUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ZahlungsverbindungDtoSpec getZahlungsverbindung() {
    return zahlungsverbindung;
  }


  @JsonProperty(JSON_PROPERTY_ZAHLUNGSVERBINDUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setZahlungsverbindung(ZahlungsverbindungDtoSpec zahlungsverbindung) {
    this.zahlungsverbindung = zahlungsverbindung;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FallAuszahlungUpdateDtoSpec fallAuszahlungUpdate = (FallAuszahlungUpdateDtoSpec) o;
    return Objects.equals(this.auszahlungAnSozialdienst, fallAuszahlungUpdate.auszahlungAnSozialdienst) &&
        Objects.equals(this.zahlungsverbindung, fallAuszahlungUpdate.zahlungsverbindung);
  }

  @Override
  public int hashCode() {
    return Objects.hash(auszahlungAnSozialdienst, zahlungsverbindung);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FallAuszahlungUpdateDtoSpec {\n");
    sb.append("    auszahlungAnSozialdienst: ").append(toIndentedString(auszahlungAnSozialdienst)).append("\n");
    sb.append("    zahlungsverbindung: ").append(toIndentedString(zahlungsverbindung)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

