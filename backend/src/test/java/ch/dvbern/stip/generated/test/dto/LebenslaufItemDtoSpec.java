/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.test.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.test.dto.LebenslaufAusbildungsArtDtoSpec;
import ch.dvbern.stip.generated.test.dto.TaetigskeitsartDtoSpec;
import ch.dvbern.stip.generated.test.dto.WohnsitzKantonDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * 
 */
@JsonPropertyOrder({
  LebenslaufItemDtoSpec.JSON_PROPERTY_ID,
  LebenslaufItemDtoSpec.JSON_PROPERTY_BILDUNGSART,
  LebenslaufItemDtoSpec.JSON_PROPERTY_VON,
  LebenslaufItemDtoSpec.JSON_PROPERTY_BIS,
  LebenslaufItemDtoSpec.JSON_PROPERTY_WOHNSITZ,
  LebenslaufItemDtoSpec.JSON_PROPERTY_AUSBILDUNG_ABGESCHLOSSEN,
  LebenslaufItemDtoSpec.JSON_PROPERTY_BERUFSBEZEICHNUNG,
  LebenslaufItemDtoSpec.JSON_PROPERTY_FACHRICHTUNG,
  LebenslaufItemDtoSpec.JSON_PROPERTY_TITEL_DES_ABSCHLUSSES,
  LebenslaufItemDtoSpec.JSON_PROPERTY_TAETIGSKEITSART,
  LebenslaufItemDtoSpec.JSON_PROPERTY_TAETIGKEITS_BESCHREIBUNG,
  LebenslaufItemDtoSpec.JSON_PROPERTY_COPY_OF_ID
})
@JsonTypeName("LebenslaufItem")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-25T14:58:08.517580200+01:00[Europe/Zurich]")
public class LebenslaufItemDtoSpec {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_BILDUNGSART = "bildungsart";
  private LebenslaufAusbildungsArtDtoSpec bildungsart;

  public static final String JSON_PROPERTY_VON = "von";
  private String von;

  public static final String JSON_PROPERTY_BIS = "bis";
  private String bis;

  public static final String JSON_PROPERTY_WOHNSITZ = "wohnsitz";
  private WohnsitzKantonDtoSpec wohnsitz;

  public static final String JSON_PROPERTY_AUSBILDUNG_ABGESCHLOSSEN = "ausbildungAbgeschlossen";
  private Boolean ausbildungAbgeschlossen;

  public static final String JSON_PROPERTY_BERUFSBEZEICHNUNG = "berufsbezeichnung";
  private String berufsbezeichnung;

  public static final String JSON_PROPERTY_FACHRICHTUNG = "fachrichtung";
  private String fachrichtung;

  public static final String JSON_PROPERTY_TITEL_DES_ABSCHLUSSES = "titelDesAbschlusses";
  private String titelDesAbschlusses;

  public static final String JSON_PROPERTY_TAETIGSKEITSART = "taetigskeitsart";
  private TaetigskeitsartDtoSpec taetigskeitsart;

  public static final String JSON_PROPERTY_TAETIGKEITS_BESCHREIBUNG = "taetigkeitsBeschreibung";
  private String taetigkeitsBeschreibung;

  public static final String JSON_PROPERTY_COPY_OF_ID = "copyOfId";
  private UUID copyOfId;

  public LebenslaufItemDtoSpec() {
  }

  public LebenslaufItemDtoSpec id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public LebenslaufItemDtoSpec bildungsart(LebenslaufAusbildungsArtDtoSpec bildungsart) {
    
    this.bildungsart = bildungsart;
    return this;
  }

   /**
   * Get bildungsart
   * @return bildungsart
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BILDUNGSART)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LebenslaufAusbildungsArtDtoSpec getBildungsart() {
    return bildungsart;
  }


  @JsonProperty(JSON_PROPERTY_BILDUNGSART)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBildungsart(LebenslaufAusbildungsArtDtoSpec bildungsart) {
    this.bildungsart = bildungsart;
  }


  public LebenslaufItemDtoSpec von(String von) {
    
    this.von = von;
    return this;
  }

   /**
   * Datum im Format mm.YYYY
   * @return von
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVon() {
    return von;
  }


  @JsonProperty(JSON_PROPERTY_VON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVon(String von) {
    this.von = von;
  }


  public LebenslaufItemDtoSpec bis(String bis) {
    
    this.bis = bis;
    return this;
  }

   /**
   * Datum im Format mm.YYYY
   * @return bis
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BIS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBis() {
    return bis;
  }


  @JsonProperty(JSON_PROPERTY_BIS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBis(String bis) {
    this.bis = bis;
  }


  public LebenslaufItemDtoSpec wohnsitz(WohnsitzKantonDtoSpec wohnsitz) {
    
    this.wohnsitz = wohnsitz;
    return this;
  }

   /**
   * Get wohnsitz
   * @return wohnsitz
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WOHNSITZ)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WohnsitzKantonDtoSpec getWohnsitz() {
    return wohnsitz;
  }


  @JsonProperty(JSON_PROPERTY_WOHNSITZ)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWohnsitz(WohnsitzKantonDtoSpec wohnsitz) {
    this.wohnsitz = wohnsitz;
  }


  public LebenslaufItemDtoSpec ausbildungAbgeschlossen(Boolean ausbildungAbgeschlossen) {
    
    this.ausbildungAbgeschlossen = ausbildungAbgeschlossen;
    return this;
  }

   /**
   * 
   * @return ausbildungAbgeschlossen
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUSBILDUNG_ABGESCHLOSSEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAusbildungAbgeschlossen() {
    return ausbildungAbgeschlossen;
  }


  @JsonProperty(JSON_PROPERTY_AUSBILDUNG_ABGESCHLOSSEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAusbildungAbgeschlossen(Boolean ausbildungAbgeschlossen) {
    this.ausbildungAbgeschlossen = ausbildungAbgeschlossen;
  }


  public LebenslaufItemDtoSpec berufsbezeichnung(String berufsbezeichnung) {
    
    this.berufsbezeichnung = berufsbezeichnung;
    return this;
  }

   /**
   * Requierd wenn bildungsart &#x3D; &#39;EIDGENOESSISCHES_BERUFSATTEST&#39; oder &#39;EIDGENOESSISCHES_FAEHIGKEITSZEUGNIS&#39;
   * @return berufsbezeichnung
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BERUFSBEZEICHNUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBerufsbezeichnung() {
    return berufsbezeichnung;
  }


  @JsonProperty(JSON_PROPERTY_BERUFSBEZEICHNUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBerufsbezeichnung(String berufsbezeichnung) {
    this.berufsbezeichnung = berufsbezeichnung;
  }


  public LebenslaufItemDtoSpec fachrichtung(String fachrichtung) {
    
    this.fachrichtung = fachrichtung;
    return this;
  }

   /**
   * Required wenn bildungsart &#x3D; \&quot;BACHELOR_HOCHSCHULE_UNI\&quot; oder \&quot;BACHELOR_FACHHOCHSCHULE\&quot; oder \&quot;MASTER\&quot;
   * @return fachrichtung
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FACHRICHTUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFachrichtung() {
    return fachrichtung;
  }


  @JsonProperty(JSON_PROPERTY_FACHRICHTUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFachrichtung(String fachrichtung) {
    this.fachrichtung = fachrichtung;
  }


  public LebenslaufItemDtoSpec titelDesAbschlusses(String titelDesAbschlusses) {
    
    this.titelDesAbschlusses = titelDesAbschlusses;
    return this;
  }

   /**
   * Required wenn bildungsart &#x3D; \&quot;ANDERER_AUSBILDUNGSABSCHLUSS\&quot;
   * @return titelDesAbschlusses
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITEL_DES_ABSCHLUSSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitelDesAbschlusses() {
    return titelDesAbschlusses;
  }


  @JsonProperty(JSON_PROPERTY_TITEL_DES_ABSCHLUSSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitelDesAbschlusses(String titelDesAbschlusses) {
    this.titelDesAbschlusses = titelDesAbschlusses;
  }


  public LebenslaufItemDtoSpec taetigskeitsart(TaetigskeitsartDtoSpec taetigskeitsart) {
    
    this.taetigskeitsart = taetigskeitsart;
    return this;
  }

   /**
   * Get taetigskeitsart
   * @return taetigskeitsart
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAETIGSKEITSART)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TaetigskeitsartDtoSpec getTaetigskeitsart() {
    return taetigskeitsart;
  }


  @JsonProperty(JSON_PROPERTY_TAETIGSKEITSART)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaetigskeitsart(TaetigskeitsartDtoSpec taetigskeitsart) {
    this.taetigskeitsart = taetigskeitsart;
  }


  public LebenslaufItemDtoSpec taetigkeitsBeschreibung(String taetigkeitsBeschreibung) {
    
    this.taetigkeitsBeschreibung = taetigkeitsBeschreibung;
    return this;
  }

   /**
   * Required wenn taetigkeitsart !&#x3D; null
   * @return taetigkeitsBeschreibung
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAETIGKEITS_BESCHREIBUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaetigkeitsBeschreibung() {
    return taetigkeitsBeschreibung;
  }


  @JsonProperty(JSON_PROPERTY_TAETIGKEITS_BESCHREIBUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaetigkeitsBeschreibung(String taetigkeitsBeschreibung) {
    this.taetigkeitsBeschreibung = taetigkeitsBeschreibung;
  }


  public LebenslaufItemDtoSpec copyOfId(UUID copyOfId) {
    
    this.copyOfId = copyOfId;
    return this;
  }

   /**
   * Get copyOfId
   * @return copyOfId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COPY_OF_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getCopyOfId() {
    return copyOfId;
  }


  @JsonProperty(JSON_PROPERTY_COPY_OF_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCopyOfId(UUID copyOfId) {
    this.copyOfId = copyOfId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LebenslaufItemDtoSpec lebenslaufItem = (LebenslaufItemDtoSpec) o;
    return Objects.equals(this.id, lebenslaufItem.id) &&
        Objects.equals(this.bildungsart, lebenslaufItem.bildungsart) &&
        Objects.equals(this.von, lebenslaufItem.von) &&
        Objects.equals(this.bis, lebenslaufItem.bis) &&
        Objects.equals(this.wohnsitz, lebenslaufItem.wohnsitz) &&
        Objects.equals(this.ausbildungAbgeschlossen, lebenslaufItem.ausbildungAbgeschlossen) &&
        Objects.equals(this.berufsbezeichnung, lebenslaufItem.berufsbezeichnung) &&
        Objects.equals(this.fachrichtung, lebenslaufItem.fachrichtung) &&
        Objects.equals(this.titelDesAbschlusses, lebenslaufItem.titelDesAbschlusses) &&
        Objects.equals(this.taetigskeitsart, lebenslaufItem.taetigskeitsart) &&
        Objects.equals(this.taetigkeitsBeschreibung, lebenslaufItem.taetigkeitsBeschreibung) &&
        Objects.equals(this.copyOfId, lebenslaufItem.copyOfId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, bildungsart, von, bis, wohnsitz, ausbildungAbgeschlossen, berufsbezeichnung, fachrichtung, titelDesAbschlusses, taetigskeitsart, taetigkeitsBeschreibung, copyOfId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LebenslaufItemDtoSpec {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    bildungsart: ").append(toIndentedString(bildungsart)).append("\n");
    sb.append("    von: ").append(toIndentedString(von)).append("\n");
    sb.append("    bis: ").append(toIndentedString(bis)).append("\n");
    sb.append("    wohnsitz: ").append(toIndentedString(wohnsitz)).append("\n");
    sb.append("    ausbildungAbgeschlossen: ").append(toIndentedString(ausbildungAbgeschlossen)).append("\n");
    sb.append("    berufsbezeichnung: ").append(toIndentedString(berufsbezeichnung)).append("\n");
    sb.append("    fachrichtung: ").append(toIndentedString(fachrichtung)).append("\n");
    sb.append("    titelDesAbschlusses: ").append(toIndentedString(titelDesAbschlusses)).append("\n");
    sb.append("    taetigskeitsart: ").append(toIndentedString(taetigskeitsart)).append("\n");
    sb.append("    taetigkeitsBeschreibung: ").append(toIndentedString(taetigkeitsBeschreibung)).append("\n");
    sb.append("    copyOfId: ").append(toIndentedString(copyOfId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

