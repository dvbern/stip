/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.LandDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * LandEuEftaDtoSpec
 */
@JsonPropertyOrder({
  LandEuEftaDtoSpec.JSON_PROPERTY_LAND,
  LandEuEftaDtoSpec.JSON_PROPERTY_IS_EU_EFTA,
  LandEuEftaDtoSpec.JSON_PROPERTY_ISO3CODE,
  LandEuEftaDtoSpec.JSON_PROPERTY_EINTRAG_GUELTIG,
  LandEuEftaDtoSpec.JSON_PROPERTY_DE_KURZFORM,
  LandEuEftaDtoSpec.JSON_PROPERTY_FR_KURZFORM
})
@JsonTypeName("LandEuEfta")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class LandEuEftaDtoSpec {
  public static final String JSON_PROPERTY_LAND = "land";
  private LandDtoSpec land;

  public static final String JSON_PROPERTY_IS_EU_EFTA = "isEuEfta";
  private Boolean isEuEfta;

  public static final String JSON_PROPERTY_ISO3CODE = "iso3code";
  private String iso3code;

  public static final String JSON_PROPERTY_EINTRAG_GUELTIG = "eintragGueltig";
  private String eintragGueltig;

  public static final String JSON_PROPERTY_DE_KURZFORM = "deKurzform";
  private String deKurzform;

  public static final String JSON_PROPERTY_FR_KURZFORM = "frKurzform";
  private String frKurzform;

  public LandEuEftaDtoSpec() {
  }

  public LandEuEftaDtoSpec land(LandDtoSpec land) {
    
    this.land = land;
    return this;
  }

   /**
   * Get land
   * @return land
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LandDtoSpec getLand() {
    return land;
  }


  @JsonProperty(JSON_PROPERTY_LAND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLand(LandDtoSpec land) {
    this.land = land;
  }


  public LandEuEftaDtoSpec isEuEfta(Boolean isEuEfta) {
    
    this.isEuEfta = isEuEfta;
    return this;
  }

   /**
   * Get isEuEfta
   * @return isEuEfta
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_EU_EFTA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsEuEfta() {
    return isEuEfta;
  }


  @JsonProperty(JSON_PROPERTY_IS_EU_EFTA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsEuEfta(Boolean isEuEfta) {
    this.isEuEfta = isEuEfta;
  }


  public LandEuEftaDtoSpec iso3code(String iso3code) {
    
    this.iso3code = iso3code;
    return this;
  }

   /**
   * Get iso3code
   * @return iso3code
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISO3CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIso3code() {
    return iso3code;
  }


  @JsonProperty(JSON_PROPERTY_ISO3CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIso3code(String iso3code) {
    this.iso3code = iso3code;
  }


  public LandEuEftaDtoSpec eintragGueltig(String eintragGueltig) {
    
    this.eintragGueltig = eintragGueltig;
    return this;
  }

   /**
   * Get eintragGueltig
   * @return eintragGueltig
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EINTRAG_GUELTIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEintragGueltig() {
    return eintragGueltig;
  }


  @JsonProperty(JSON_PROPERTY_EINTRAG_GUELTIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEintragGueltig(String eintragGueltig) {
    this.eintragGueltig = eintragGueltig;
  }


  public LandEuEftaDtoSpec deKurzform(String deKurzform) {
    
    this.deKurzform = deKurzform;
    return this;
  }

   /**
   * Get deKurzform
   * @return deKurzform
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DE_KURZFORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDeKurzform() {
    return deKurzform;
  }


  @JsonProperty(JSON_PROPERTY_DE_KURZFORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeKurzform(String deKurzform) {
    this.deKurzform = deKurzform;
  }


  public LandEuEftaDtoSpec frKurzform(String frKurzform) {
    
    this.frKurzform = frKurzform;
    return this;
  }

   /**
   * Get frKurzform
   * @return frKurzform
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FR_KURZFORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFrKurzform() {
    return frKurzform;
  }


  @JsonProperty(JSON_PROPERTY_FR_KURZFORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFrKurzform(String frKurzform) {
    this.frKurzform = frKurzform;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LandEuEftaDtoSpec landEuEfta = (LandEuEftaDtoSpec) o;
    return Objects.equals(this.land, landEuEfta.land) &&
        Objects.equals(this.isEuEfta, landEuEfta.isEuEfta) &&
        Objects.equals(this.iso3code, landEuEfta.iso3code) &&
        Objects.equals(this.eintragGueltig, landEuEfta.eintragGueltig) &&
        Objects.equals(this.deKurzform, landEuEfta.deKurzform) &&
        Objects.equals(this.frKurzform, landEuEfta.frKurzform);
  }

  @Override
  public int hashCode() {
    return Objects.hash(land, isEuEfta, iso3code, eintragGueltig, deKurzform, frKurzform);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LandEuEftaDtoSpec {\n");
    sb.append("    land: ").append(toIndentedString(land)).append("\n");
    sb.append("    isEuEfta: ").append(toIndentedString(isEuEfta)).append("\n");
    sb.append("    iso3code: ").append(toIndentedString(iso3code)).append("\n");
    sb.append("    eintragGueltig: ").append(toIndentedString(eintragGueltig)).append("\n");
    sb.append("    deKurzform: ").append(toIndentedString(deKurzform)).append("\n");
    sb.append("    frKurzform: ").append(toIndentedString(frKurzform)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

