/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.DruckauftragStatusDtoSpec;
import ch.dvbern.stip.generated.dto.DruckauftragTypDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DruckauftragDtoSpec
 */
@JsonPropertyOrder({
  DruckauftragDtoSpec.JSON_PROPERTY_ID,
  DruckauftragDtoSpec.JSON_PROPERTY_BATCH_NAME,
  DruckauftragDtoSpec.JSON_PROPERTY_BEARBEITER,
  DruckauftragDtoSpec.JSON_PROPERTY_TIMESTAMP_ERSTELLT,
  DruckauftragDtoSpec.JSON_PROPERTY_DRUCKAUFTRAG_STATUS,
  DruckauftragDtoSpec.JSON_PROPERTY_DRUCKAUFTRAG_TYP
})
@JsonTypeName("Druckauftrag")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DruckauftragDtoSpec {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_BATCH_NAME = "batchName";
  private String batchName;

  public static final String JSON_PROPERTY_BEARBEITER = "bearbeiter";
  private String bearbeiter;

  public static final String JSON_PROPERTY_TIMESTAMP_ERSTELLT = "timestampErstellt";
  private String timestampErstellt;

  public static final String JSON_PROPERTY_DRUCKAUFTRAG_STATUS = "druckauftragStatus";
  private DruckauftragStatusDtoSpec druckauftragStatus;

  public static final String JSON_PROPERTY_DRUCKAUFTRAG_TYP = "druckauftragTyp";
  private DruckauftragTypDtoSpec druckauftragTyp;

  public DruckauftragDtoSpec() {
  }

  public DruckauftragDtoSpec id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public DruckauftragDtoSpec batchName(String batchName) {
    
    this.batchName = batchName;
    return this;
  }

   /**
   * Get batchName
   * @return batchName
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BATCH_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBatchName() {
    return batchName;
  }


  @JsonProperty(JSON_PROPERTY_BATCH_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBatchName(String batchName) {
    this.batchName = batchName;
  }


  public DruckauftragDtoSpec bearbeiter(String bearbeiter) {
    
    this.bearbeiter = bearbeiter;
    return this;
  }

   /**
   * Get bearbeiter
   * @return bearbeiter
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BEARBEITER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBearbeiter() {
    return bearbeiter;
  }


  @JsonProperty(JSON_PROPERTY_BEARBEITER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBearbeiter(String bearbeiter) {
    this.bearbeiter = bearbeiter;
  }


  public DruckauftragDtoSpec timestampErstellt(String timestampErstellt) {
    
    this.timestampErstellt = timestampErstellt;
    return this;
  }

   /**
   * Get timestampErstellt
   * @return timestampErstellt
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TIMESTAMP_ERSTELLT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTimestampErstellt() {
    return timestampErstellt;
  }


  @JsonProperty(JSON_PROPERTY_TIMESTAMP_ERSTELLT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTimestampErstellt(String timestampErstellt) {
    this.timestampErstellt = timestampErstellt;
  }


  public DruckauftragDtoSpec druckauftragStatus(DruckauftragStatusDtoSpec druckauftragStatus) {
    
    this.druckauftragStatus = druckauftragStatus;
    return this;
  }

   /**
   * Get druckauftragStatus
   * @return druckauftragStatus
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DRUCKAUFTRAG_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DruckauftragStatusDtoSpec getDruckauftragStatus() {
    return druckauftragStatus;
  }


  @JsonProperty(JSON_PROPERTY_DRUCKAUFTRAG_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDruckauftragStatus(DruckauftragStatusDtoSpec druckauftragStatus) {
    this.druckauftragStatus = druckauftragStatus;
  }


  public DruckauftragDtoSpec druckauftragTyp(DruckauftragTypDtoSpec druckauftragTyp) {
    
    this.druckauftragTyp = druckauftragTyp;
    return this;
  }

   /**
   * Get druckauftragTyp
   * @return druckauftragTyp
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DRUCKAUFTRAG_TYP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DruckauftragTypDtoSpec getDruckauftragTyp() {
    return druckauftragTyp;
  }


  @JsonProperty(JSON_PROPERTY_DRUCKAUFTRAG_TYP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDruckauftragTyp(DruckauftragTypDtoSpec druckauftragTyp) {
    this.druckauftragTyp = druckauftragTyp;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DruckauftragDtoSpec druckauftrag = (DruckauftragDtoSpec) o;
    return Objects.equals(this.id, druckauftrag.id) &&
        Objects.equals(this.batchName, druckauftrag.batchName) &&
        Objects.equals(this.bearbeiter, druckauftrag.bearbeiter) &&
        Objects.equals(this.timestampErstellt, druckauftrag.timestampErstellt) &&
        Objects.equals(this.druckauftragStatus, druckauftrag.druckauftragStatus) &&
        Objects.equals(this.druckauftragTyp, druckauftrag.druckauftragTyp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, batchName, bearbeiter, timestampErstellt, druckauftragStatus, druckauftragTyp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DruckauftragDtoSpec {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    batchName: ").append(toIndentedString(batchName)).append("\n");
    sb.append("    bearbeiter: ").append(toIndentedString(bearbeiter)).append("\n");
    sb.append("    timestampErstellt: ").append(toIndentedString(timestampErstellt)).append("\n");
    sb.append("    druckauftragStatus: ").append(toIndentedString(druckauftragStatus)).append("\n");
    sb.append("    druckauftragTyp: ").append(toIndentedString(druckauftragTyp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

