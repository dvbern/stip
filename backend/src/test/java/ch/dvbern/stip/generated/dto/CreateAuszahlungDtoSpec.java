/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.AuszahlungDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateAuszahlungDtoSpec
 */
@JsonPropertyOrder({
  CreateAuszahlungDtoSpec.JSON_PROPERTY_DELIVERY_ID,
  CreateAuszahlungDtoSpec.JSON_PROPERTY_VENDOR_NO,
  CreateAuszahlungDtoSpec.JSON_PROPERTY_POSITIONS_TEXT,
  CreateAuszahlungDtoSpec.JSON_PROPERTY_ZAHLUNGSZWECK,
  CreateAuszahlungDtoSpec.JSON_PROPERTY_AUSZAHLUNG
})
@JsonTypeName("CreateAuszahlung")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreateAuszahlungDtoSpec {
  public static final String JSON_PROPERTY_DELIVERY_ID = "deliveryId";
  private Integer deliveryId;

  public static final String JSON_PROPERTY_VENDOR_NO = "vendorNo";
  private Integer vendorNo;

  public static final String JSON_PROPERTY_POSITIONS_TEXT = "positionsText";
  private String positionsText;

  public static final String JSON_PROPERTY_ZAHLUNGSZWECK = "zahlungszweck";
  private String zahlungszweck;

  public static final String JSON_PROPERTY_AUSZAHLUNG = "auszahlung";
  private AuszahlungDtoSpec auszahlung;

  public CreateAuszahlungDtoSpec() {
  }

  public CreateAuszahlungDtoSpec deliveryId(Integer deliveryId) {
    
    this.deliveryId = deliveryId;
    return this;
  }

   /**
   * Get deliveryId
   * @return deliveryId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DELIVERY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDeliveryId() {
    return deliveryId;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeliveryId(Integer deliveryId) {
    this.deliveryId = deliveryId;
  }


  public CreateAuszahlungDtoSpec vendorNo(Integer vendorNo) {
    
    this.vendorNo = vendorNo;
    return this;
  }

   /**
   * Get vendorNo
   * @return vendorNo
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VENDOR_NO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getVendorNo() {
    return vendorNo;
  }


  @JsonProperty(JSON_PROPERTY_VENDOR_NO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVendorNo(Integer vendorNo) {
    this.vendorNo = vendorNo;
  }


  public CreateAuszahlungDtoSpec positionsText(String positionsText) {
    
    this.positionsText = positionsText;
    return this;
  }

   /**
   * Get positionsText
   * @return positionsText
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSITIONS_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPositionsText() {
    return positionsText;
  }


  @JsonProperty(JSON_PROPERTY_POSITIONS_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPositionsText(String positionsText) {
    this.positionsText = positionsText;
  }


  public CreateAuszahlungDtoSpec zahlungszweck(String zahlungszweck) {
    
    this.zahlungszweck = zahlungszweck;
    return this;
  }

   /**
   * Get zahlungszweck
   * @return zahlungszweck
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ZAHLUNGSZWECK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getZahlungszweck() {
    return zahlungszweck;
  }


  @JsonProperty(JSON_PROPERTY_ZAHLUNGSZWECK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setZahlungszweck(String zahlungszweck) {
    this.zahlungszweck = zahlungszweck;
  }


  public CreateAuszahlungDtoSpec auszahlung(AuszahlungDtoSpec auszahlung) {
    
    this.auszahlung = auszahlung;
    return this;
  }

   /**
   * Get auszahlung
   * @return auszahlung
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUSZAHLUNG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AuszahlungDtoSpec getAuszahlung() {
    return auszahlung;
  }


  @JsonProperty(JSON_PROPERTY_AUSZAHLUNG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuszahlung(AuszahlungDtoSpec auszahlung) {
    this.auszahlung = auszahlung;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAuszahlungDtoSpec createAuszahlung = (CreateAuszahlungDtoSpec) o;
    return Objects.equals(this.deliveryId, createAuszahlung.deliveryId) &&
        Objects.equals(this.vendorNo, createAuszahlung.vendorNo) &&
        Objects.equals(this.positionsText, createAuszahlung.positionsText) &&
        Objects.equals(this.zahlungszweck, createAuszahlung.zahlungszweck) &&
        Objects.equals(this.auszahlung, createAuszahlung.auszahlung);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deliveryId, vendorNo, positionsText, zahlungszweck, auszahlung);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAuszahlungDtoSpec {\n");
    sb.append("    deliveryId: ").append(toIndentedString(deliveryId)).append("\n");
    sb.append("    vendorNo: ").append(toIndentedString(vendorNo)).append("\n");
    sb.append("    positionsText: ").append(toIndentedString(positionsText)).append("\n");
    sb.append("    zahlungszweck: ").append(toIndentedString(zahlungszweck)).append("\n");
    sb.append("    auszahlung: ").append(toIndentedString(auszahlung)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

