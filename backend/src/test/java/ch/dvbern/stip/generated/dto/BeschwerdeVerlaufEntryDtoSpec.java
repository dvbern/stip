/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.BeschwerdeEntscheidDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BeschwerdeVerlaufEntryDtoSpec
 */
@JsonPropertyOrder({
  BeschwerdeVerlaufEntryDtoSpec.JSON_PROPERTY_BESCHWERDE_ENTSCHEID,
  BeschwerdeVerlaufEntryDtoSpec.JSON_PROPERTY_TIMESTAMP_ERSTELLT,
  BeschwerdeVerlaufEntryDtoSpec.JSON_PROPERTY_USER_ERSTELLT,
  BeschwerdeVerlaufEntryDtoSpec.JSON_PROPERTY_KOMMENTAR,
  BeschwerdeVerlaufEntryDtoSpec.JSON_PROPERTY_BESCHWERDE_SET_TO
})
@JsonTypeName("BeschwerdeVerlaufEntry")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BeschwerdeVerlaufEntryDtoSpec {
  public static final String JSON_PROPERTY_BESCHWERDE_ENTSCHEID = "beschwerdeEntscheid";
  private BeschwerdeEntscheidDtoSpec beschwerdeEntscheid;

  public static final String JSON_PROPERTY_TIMESTAMP_ERSTELLT = "timestampErstellt";
  private java.time.LocalDateTime timestampErstellt;

  public static final String JSON_PROPERTY_USER_ERSTELLT = "userErstellt";
  private String userErstellt;

  public static final String JSON_PROPERTY_KOMMENTAR = "kommentar";
  private String kommentar;

  public static final String JSON_PROPERTY_BESCHWERDE_SET_TO = "beschwerdeSetTo";
  private Boolean beschwerdeSetTo;

  public BeschwerdeVerlaufEntryDtoSpec() {
  }

  public BeschwerdeVerlaufEntryDtoSpec beschwerdeEntscheid(BeschwerdeEntscheidDtoSpec beschwerdeEntscheid) {
    
    this.beschwerdeEntscheid = beschwerdeEntscheid;
    return this;
  }

   /**
   * Get beschwerdeEntscheid
   * @return beschwerdeEntscheid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BESCHWERDE_ENTSCHEID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BeschwerdeEntscheidDtoSpec getBeschwerdeEntscheid() {
    return beschwerdeEntscheid;
  }


  @JsonProperty(JSON_PROPERTY_BESCHWERDE_ENTSCHEID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBeschwerdeEntscheid(BeschwerdeEntscheidDtoSpec beschwerdeEntscheid) {
    this.beschwerdeEntscheid = beschwerdeEntscheid;
  }


  public BeschwerdeVerlaufEntryDtoSpec timestampErstellt(java.time.LocalDateTime timestampErstellt) {
    
    this.timestampErstellt = timestampErstellt;
    return this;
  }

   /**
   * Get timestampErstellt
   * @return timestampErstellt
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TIMESTAMP_ERSTELLT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.time.LocalDateTime getTimestampErstellt() {
    return timestampErstellt;
  }


  @JsonProperty(JSON_PROPERTY_TIMESTAMP_ERSTELLT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTimestampErstellt(java.time.LocalDateTime timestampErstellt) {
    this.timestampErstellt = timestampErstellt;
  }


  public BeschwerdeVerlaufEntryDtoSpec userErstellt(String userErstellt) {
    
    this.userErstellt = userErstellt;
    return this;
  }

   /**
   * Get userErstellt
   * @return userErstellt
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_ERSTELLT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUserErstellt() {
    return userErstellt;
  }


  @JsonProperty(JSON_PROPERTY_USER_ERSTELLT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserErstellt(String userErstellt) {
    this.userErstellt = userErstellt;
  }


  public BeschwerdeVerlaufEntryDtoSpec kommentar(String kommentar) {
    
    this.kommentar = kommentar;
    return this;
  }

   /**
   * Get kommentar
   * @return kommentar
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KOMMENTAR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getKommentar() {
    return kommentar;
  }


  @JsonProperty(JSON_PROPERTY_KOMMENTAR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKommentar(String kommentar) {
    this.kommentar = kommentar;
  }


  public BeschwerdeVerlaufEntryDtoSpec beschwerdeSetTo(Boolean beschwerdeSetTo) {
    
    this.beschwerdeSetTo = beschwerdeSetTo;
    return this;
  }

   /**
   * Get beschwerdeSetTo
   * @return beschwerdeSetTo
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BESCHWERDE_SET_TO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getBeschwerdeSetTo() {
    return beschwerdeSetTo;
  }


  @JsonProperty(JSON_PROPERTY_BESCHWERDE_SET_TO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBeschwerdeSetTo(Boolean beschwerdeSetTo) {
    this.beschwerdeSetTo = beschwerdeSetTo;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BeschwerdeVerlaufEntryDtoSpec beschwerdeVerlaufEntry = (BeschwerdeVerlaufEntryDtoSpec) o;
    return Objects.equals(this.beschwerdeEntscheid, beschwerdeVerlaufEntry.beschwerdeEntscheid) &&
        Objects.equals(this.timestampErstellt, beschwerdeVerlaufEntry.timestampErstellt) &&
        Objects.equals(this.userErstellt, beschwerdeVerlaufEntry.userErstellt) &&
        Objects.equals(this.kommentar, beschwerdeVerlaufEntry.kommentar) &&
        Objects.equals(this.beschwerdeSetTo, beschwerdeVerlaufEntry.beschwerdeSetTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(beschwerdeEntscheid, timestampErstellt, userErstellt, kommentar, beschwerdeSetTo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BeschwerdeVerlaufEntryDtoSpec {\n");
    sb.append("    beschwerdeEntscheid: ").append(toIndentedString(beschwerdeEntscheid)).append("\n");
    sb.append("    timestampErstellt: ").append(toIndentedString(timestampErstellt)).append("\n");
    sb.append("    userErstellt: ").append(toIndentedString(userErstellt)).append("\n");
    sb.append("    kommentar: ").append(toIndentedString(kommentar)).append("\n");
    sb.append("    beschwerdeSetTo: ").append(toIndentedString(beschwerdeSetTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

