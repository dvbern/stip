/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.VerfuegungDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AdminDokumenteDtoSpec
 */
@JsonPropertyOrder({
  AdminDokumenteDtoSpec.JSON_PROPERTY_VERFUEGUNGEN,
  AdminDokumenteDtoSpec.JSON_PROPERTY_DATENSCHUTZBRIEF_MASSENDRUCK_JOB_ID
})
@JsonTypeName("AdminDokumente")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AdminDokumenteDtoSpec {
  public static final String JSON_PROPERTY_VERFUEGUNGEN = "verfuegungen";
  private List<VerfuegungDtoSpec> verfuegungen;

  public static final String JSON_PROPERTY_DATENSCHUTZBRIEF_MASSENDRUCK_JOB_ID = "datenschutzbriefMassendruckJobId";
  private UUID datenschutzbriefMassendruckJobId;

  public AdminDokumenteDtoSpec() {
  }

  public AdminDokumenteDtoSpec verfuegungen(List<VerfuegungDtoSpec> verfuegungen) {
    
    this.verfuegungen = verfuegungen;
    return this;
  }

  public AdminDokumenteDtoSpec addVerfuegungenItem(VerfuegungDtoSpec verfuegungenItem) {
    if (this.verfuegungen == null) {
      this.verfuegungen = new ArrayList<>();
    }
    this.verfuegungen.add(verfuegungenItem);
    return this;
  }

   /**
   * Get verfuegungen
   * @return verfuegungen
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VERFUEGUNGEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<VerfuegungDtoSpec> getVerfuegungen() {
    return verfuegungen;
  }


  @JsonProperty(JSON_PROPERTY_VERFUEGUNGEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVerfuegungen(List<VerfuegungDtoSpec> verfuegungen) {
    this.verfuegungen = verfuegungen;
  }


  public AdminDokumenteDtoSpec datenschutzbriefMassendruckJobId(UUID datenschutzbriefMassendruckJobId) {
    
    this.datenschutzbriefMassendruckJobId = datenschutzbriefMassendruckJobId;
    return this;
  }

   /**
   * Get datenschutzbriefMassendruckJobId
   * @return datenschutzbriefMassendruckJobId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATENSCHUTZBRIEF_MASSENDRUCK_JOB_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getDatenschutzbriefMassendruckJobId() {
    return datenschutzbriefMassendruckJobId;
  }


  @JsonProperty(JSON_PROPERTY_DATENSCHUTZBRIEF_MASSENDRUCK_JOB_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatenschutzbriefMassendruckJobId(UUID datenschutzbriefMassendruckJobId) {
    this.datenschutzbriefMassendruckJobId = datenschutzbriefMassendruckJobId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdminDokumenteDtoSpec adminDokumente = (AdminDokumenteDtoSpec) o;
    return Objects.equals(this.verfuegungen, adminDokumente.verfuegungen) &&
        Objects.equals(this.datenschutzbriefMassendruckJobId, adminDokumente.datenschutzbriefMassendruckJobId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(verfuegungen, datenschutzbriefMassendruckJobId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdminDokumenteDtoSpec {\n");
    sb.append("    verfuegungen: ").append(toIndentedString(verfuegungen)).append("\n");
    sb.append("    datenschutzbriefMassendruckJobId: ").append(toIndentedString(datenschutzbriefMassendruckJobId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

