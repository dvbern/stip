/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.StipDecisionDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * VerfuegungDtoSpec
 */
@JsonPropertyOrder({
  VerfuegungDtoSpec.JSON_PROPERTY_ID,
  VerfuegungDtoSpec.JSON_PROPERTY_TIMESTAMP_ERSTELLT,
  VerfuegungDtoSpec.JSON_PROPERTY_FILENAME,
  VerfuegungDtoSpec.JSON_PROPERTY_STIP_DECISION
})
@JsonTypeName("Verfuegung")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class VerfuegungDtoSpec {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_TIMESTAMP_ERSTELLT = "timestampErstellt";
  private String timestampErstellt;

  public static final String JSON_PROPERTY_FILENAME = "filename";
  private String filename;

  public static final String JSON_PROPERTY_STIP_DECISION = "stipDecision";
  private StipDecisionDtoSpec stipDecision;

  public VerfuegungDtoSpec() {
  }

  public VerfuegungDtoSpec id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public VerfuegungDtoSpec timestampErstellt(String timestampErstellt) {
    
    this.timestampErstellt = timestampErstellt;
    return this;
  }

   /**
   * Get timestampErstellt
   * @return timestampErstellt
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TIMESTAMP_ERSTELLT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTimestampErstellt() {
    return timestampErstellt;
  }


  @JsonProperty(JSON_PROPERTY_TIMESTAMP_ERSTELLT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTimestampErstellt(String timestampErstellt) {
    this.timestampErstellt = timestampErstellt;
  }


  public VerfuegungDtoSpec filename(String filename) {
    
    this.filename = filename;
    return this;
  }

   /**
   * Get filename
   * @return filename
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FILENAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFilename() {
    return filename;
  }


  @JsonProperty(JSON_PROPERTY_FILENAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFilename(String filename) {
    this.filename = filename;
  }


  public VerfuegungDtoSpec stipDecision(StipDecisionDtoSpec stipDecision) {
    
    this.stipDecision = stipDecision;
    return this;
  }

   /**
   * Get stipDecision
   * @return stipDecision
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STIP_DECISION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StipDecisionDtoSpec getStipDecision() {
    return stipDecision;
  }


  @JsonProperty(JSON_PROPERTY_STIP_DECISION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStipDecision(StipDecisionDtoSpec stipDecision) {
    this.stipDecision = stipDecision;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VerfuegungDtoSpec verfuegung = (VerfuegungDtoSpec) o;
    return Objects.equals(this.id, verfuegung.id) &&
        Objects.equals(this.timestampErstellt, verfuegung.timestampErstellt) &&
        Objects.equals(this.filename, verfuegung.filename) &&
        Objects.equals(this.stipDecision, verfuegung.stipDecision);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, timestampErstellt, filename, stipDecision);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VerfuegungDtoSpec {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    timestampErstellt: ").append(toIndentedString(timestampErstellt)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    stipDecision: ").append(toIndentedString(stipDecision)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

