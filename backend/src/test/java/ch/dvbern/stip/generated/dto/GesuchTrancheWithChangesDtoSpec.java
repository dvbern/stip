/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.GesuchTrancheDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * 1 or 2 Aenderungstranche in relation to another Tranche
 */
@JsonPropertyOrder({
  GesuchTrancheWithChangesDtoSpec.JSON_PROPERTY_CHANGES
})
@JsonTypeName("GesuchTrancheWithChanges")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GesuchTrancheWithChangesDtoSpec {
  public static final String JSON_PROPERTY_CHANGES = "changes";
  private List<GesuchTrancheDtoSpec> changes;

  public GesuchTrancheWithChangesDtoSpec() {
  }

  public GesuchTrancheWithChangesDtoSpec changes(List<GesuchTrancheDtoSpec> changes) {
    
    this.changes = changes;
    return this;
  }

  public GesuchTrancheWithChangesDtoSpec addChangesItem(GesuchTrancheDtoSpec changesItem) {
    if (this.changes == null) {
      this.changes = new ArrayList<>();
    }
    this.changes.add(changesItem);
    return this;
  }

   /**
   * Get changes
   * @return changes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GesuchTrancheDtoSpec> getChanges() {
    return changes;
  }


  @JsonProperty(JSON_PROPERTY_CHANGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChanges(List<GesuchTrancheDtoSpec> changes) {
    this.changes = changes;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GesuchTrancheWithChangesDtoSpec gesuchTrancheWithChanges = (GesuchTrancheWithChangesDtoSpec) o;
    return Objects.equals(this.changes, gesuchTrancheWithChanges.changes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(changes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GesuchTrancheWithChangesDtoSpec {\n");
    sb.append("    changes: ").append(toIndentedString(changes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

