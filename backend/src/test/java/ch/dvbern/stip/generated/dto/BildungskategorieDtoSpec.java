/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.BildungsstufeDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BildungskategorieDtoSpec
 */
@JsonPropertyOrder({
  BildungskategorieDtoSpec.JSON_PROPERTY_BEZEICHNUNG_DE,
  BildungskategorieDtoSpec.JSON_PROPERTY_BEZEICHNUNG_FR,
  BildungskategorieDtoSpec.JSON_PROPERTY_BILDUNGSSTUFE,
  BildungskategorieDtoSpec.JSON_PROPERTY_BFS,
  BildungskategorieDtoSpec.JSON_PROPERTY_ID
})
@JsonTypeName("Bildungskategorie")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BildungskategorieDtoSpec {
  public static final String JSON_PROPERTY_BEZEICHNUNG_DE = "bezeichnungDe";
  private String bezeichnungDe;

  public static final String JSON_PROPERTY_BEZEICHNUNG_FR = "bezeichnungFr";
  private String bezeichnungFr;

  public static final String JSON_PROPERTY_BILDUNGSSTUFE = "bildungsstufe";
  private BildungsstufeDtoSpec bildungsstufe;

  public static final String JSON_PROPERTY_BFS = "bfs";
  private Integer bfs;

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public BildungskategorieDtoSpec() {
  }

  public BildungskategorieDtoSpec bezeichnungDe(String bezeichnungDe) {
    
    this.bezeichnungDe = bezeichnungDe;
    return this;
  }

   /**
   * Get bezeichnungDe
   * @return bezeichnungDe
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BEZEICHNUNG_DE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBezeichnungDe() {
    return bezeichnungDe;
  }


  @JsonProperty(JSON_PROPERTY_BEZEICHNUNG_DE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBezeichnungDe(String bezeichnungDe) {
    this.bezeichnungDe = bezeichnungDe;
  }


  public BildungskategorieDtoSpec bezeichnungFr(String bezeichnungFr) {
    
    this.bezeichnungFr = bezeichnungFr;
    return this;
  }

   /**
   * Get bezeichnungFr
   * @return bezeichnungFr
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BEZEICHNUNG_FR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBezeichnungFr() {
    return bezeichnungFr;
  }


  @JsonProperty(JSON_PROPERTY_BEZEICHNUNG_FR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBezeichnungFr(String bezeichnungFr) {
    this.bezeichnungFr = bezeichnungFr;
  }


  public BildungskategorieDtoSpec bildungsstufe(BildungsstufeDtoSpec bildungsstufe) {
    
    this.bildungsstufe = bildungsstufe;
    return this;
  }

   /**
   * Get bildungsstufe
   * @return bildungsstufe
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BILDUNGSSTUFE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BildungsstufeDtoSpec getBildungsstufe() {
    return bildungsstufe;
  }


  @JsonProperty(JSON_PROPERTY_BILDUNGSSTUFE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBildungsstufe(BildungsstufeDtoSpec bildungsstufe) {
    this.bildungsstufe = bildungsstufe;
  }


  public BildungskategorieDtoSpec bfs(Integer bfs) {
    
    this.bfs = bfs;
    return this;
  }

   /**
   * Get bfs
   * @return bfs
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BFS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getBfs() {
    return bfs;
  }


  @JsonProperty(JSON_PROPERTY_BFS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBfs(Integer bfs) {
    this.bfs = bfs;
  }


  public BildungskategorieDtoSpec id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BildungskategorieDtoSpec bildungskategorie = (BildungskategorieDtoSpec) o;
    return Objects.equals(this.bezeichnungDe, bildungskategorie.bezeichnungDe) &&
        Objects.equals(this.bezeichnungFr, bildungskategorie.bezeichnungFr) &&
        Objects.equals(this.bildungsstufe, bildungskategorie.bildungsstufe) &&
        Objects.equals(this.bfs, bildungskategorie.bfs) &&
        Objects.equals(this.id, bildungskategorie.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bezeichnungDe, bezeichnungFr, bildungsstufe, bfs, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BildungskategorieDtoSpec {\n");
    sb.append("    bezeichnungDe: ").append(toIndentedString(bezeichnungDe)).append("\n");
    sb.append("    bezeichnungFr: ").append(toIndentedString(bezeichnungFr)).append("\n");
    sb.append("    bildungsstufe: ").append(toIndentedString(bildungsstufe)).append("\n");
    sb.append("    bfs: ").append(toIndentedString(bfs)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

