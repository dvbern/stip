/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.AusbildungsPensumDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AusbildungBaseDtoSpec
 */
@JsonPropertyOrder({
  AusbildungBaseDtoSpec.JSON_PROPERTY_ID,
  AusbildungBaseDtoSpec.JSON_PROPERTY_FALL_ID,
  AusbildungBaseDtoSpec.JSON_PROPERTY_FACHRICHTUNG_BERUFSBEZEICHNUNG,
  AusbildungBaseDtoSpec.JSON_PROPERTY_AUSBILDUNG_NICHT_GEFUNDEN,
  AusbildungBaseDtoSpec.JSON_PROPERTY_AUSBILDUNG_BEGIN,
  AusbildungBaseDtoSpec.JSON_PROPERTY_AUSBILDUNG_END,
  AusbildungBaseDtoSpec.JSON_PROPERTY_BESUCHT_B_M_S,
  AusbildungBaseDtoSpec.JSON_PROPERTY_PENSUM,
  AusbildungBaseDtoSpec.JSON_PROPERTY_ALTERNATIVE_AUSBILDUNGSSTAETTE,
  AusbildungBaseDtoSpec.JSON_PROPERTY_ALTERNATIVE_AUSBILDUNGSGANG,
  AusbildungBaseDtoSpec.JSON_PROPERTY_AUSBILDUNGSORT_P_L_Z,
  AusbildungBaseDtoSpec.JSON_PROPERTY_AUSBILDUNGSORT,
  AusbildungBaseDtoSpec.JSON_PROPERTY_IS_AUSBILDUNG_AUSLAND,
  AusbildungBaseDtoSpec.JSON_PROPERTY_LAND_ID
})
@JsonTypeName("AusbildungBase")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AusbildungBaseDtoSpec {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_FALL_ID = "fallId";
  private UUID fallId;

  public static final String JSON_PROPERTY_FACHRICHTUNG_BERUFSBEZEICHNUNG = "fachrichtungBerufsbezeichnung";
  private String fachrichtungBerufsbezeichnung;

  public static final String JSON_PROPERTY_AUSBILDUNG_NICHT_GEFUNDEN = "ausbildungNichtGefunden";
  private Boolean ausbildungNichtGefunden;

  public static final String JSON_PROPERTY_AUSBILDUNG_BEGIN = "ausbildungBegin";
  private String ausbildungBegin;

  public static final String JSON_PROPERTY_AUSBILDUNG_END = "ausbildungEnd";
  private String ausbildungEnd;

  public static final String JSON_PROPERTY_BESUCHT_B_M_S = "besuchtBMS";
  private Boolean besuchtBMS;

  public static final String JSON_PROPERTY_PENSUM = "pensum";
  private AusbildungsPensumDtoSpec pensum;

  public static final String JSON_PROPERTY_ALTERNATIVE_AUSBILDUNGSSTAETTE = "alternativeAusbildungsstaette";
  private String alternativeAusbildungsstaette;

  public static final String JSON_PROPERTY_ALTERNATIVE_AUSBILDUNGSGANG = "alternativeAusbildungsgang";
  private String alternativeAusbildungsgang;

  public static final String JSON_PROPERTY_AUSBILDUNGSORT_P_L_Z = "ausbildungsortPLZ";
  private String ausbildungsortPLZ;

  public static final String JSON_PROPERTY_AUSBILDUNGSORT = "ausbildungsort";
  private String ausbildungsort;

  public static final String JSON_PROPERTY_IS_AUSBILDUNG_AUSLAND = "isAusbildungAusland";
  private Boolean isAusbildungAusland;

  public static final String JSON_PROPERTY_LAND_ID = "landId";
  private UUID landId;

  public AusbildungBaseDtoSpec() {
  }

  public AusbildungBaseDtoSpec id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public AusbildungBaseDtoSpec fallId(UUID fallId) {
    
    this.fallId = fallId;
    return this;
  }

   /**
   * Get fallId
   * @return fallId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FALL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getFallId() {
    return fallId;
  }


  @JsonProperty(JSON_PROPERTY_FALL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFallId(UUID fallId) {
    this.fallId = fallId;
  }


  public AusbildungBaseDtoSpec fachrichtungBerufsbezeichnung(String fachrichtungBerufsbezeichnung) {
    
    this.fachrichtungBerufsbezeichnung = fachrichtungBerufsbezeichnung;
    return this;
  }

   /**
   * Get fachrichtungBerufsbezeichnung
   * @return fachrichtungBerufsbezeichnung
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FACHRICHTUNG_BERUFSBEZEICHNUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFachrichtungBerufsbezeichnung() {
    return fachrichtungBerufsbezeichnung;
  }


  @JsonProperty(JSON_PROPERTY_FACHRICHTUNG_BERUFSBEZEICHNUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFachrichtungBerufsbezeichnung(String fachrichtungBerufsbezeichnung) {
    this.fachrichtungBerufsbezeichnung = fachrichtungBerufsbezeichnung;
  }


  public AusbildungBaseDtoSpec ausbildungNichtGefunden(Boolean ausbildungNichtGefunden) {
    
    this.ausbildungNichtGefunden = ausbildungNichtGefunden;
    return this;
  }

   /**
   * Get ausbildungNichtGefunden
   * @return ausbildungNichtGefunden
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUSBILDUNG_NICHT_GEFUNDEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAusbildungNichtGefunden() {
    return ausbildungNichtGefunden;
  }


  @JsonProperty(JSON_PROPERTY_AUSBILDUNG_NICHT_GEFUNDEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAusbildungNichtGefunden(Boolean ausbildungNichtGefunden) {
    this.ausbildungNichtGefunden = ausbildungNichtGefunden;
  }


  public AusbildungBaseDtoSpec ausbildungBegin(String ausbildungBegin) {
    
    this.ausbildungBegin = ausbildungBegin;
    return this;
  }

   /**
   * Datum im Format mm.YYYY
   * @return ausbildungBegin
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUSBILDUNG_BEGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAusbildungBegin() {
    return ausbildungBegin;
  }


  @JsonProperty(JSON_PROPERTY_AUSBILDUNG_BEGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAusbildungBegin(String ausbildungBegin) {
    this.ausbildungBegin = ausbildungBegin;
  }


  public AusbildungBaseDtoSpec ausbildungEnd(String ausbildungEnd) {
    
    this.ausbildungEnd = ausbildungEnd;
    return this;
  }

   /**
   * Datum im Format mm.YYYY
   * @return ausbildungEnd
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUSBILDUNG_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAusbildungEnd() {
    return ausbildungEnd;
  }


  @JsonProperty(JSON_PROPERTY_AUSBILDUNG_END)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAusbildungEnd(String ausbildungEnd) {
    this.ausbildungEnd = ausbildungEnd;
  }


  public AusbildungBaseDtoSpec besuchtBMS(Boolean besuchtBMS) {
    
    this.besuchtBMS = besuchtBMS;
    return this;
  }

   /**
   * Required wenn Abschluss.askForBerufsmaturitaet &#x3D; true
   * @return besuchtBMS
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BESUCHT_B_M_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getBesuchtBMS() {
    return besuchtBMS;
  }


  @JsonProperty(JSON_PROPERTY_BESUCHT_B_M_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBesuchtBMS(Boolean besuchtBMS) {
    this.besuchtBMS = besuchtBMS;
  }


  public AusbildungBaseDtoSpec pensum(AusbildungsPensumDtoSpec pensum) {
    
    this.pensum = pensum;
    return this;
  }

   /**
   * Get pensum
   * @return pensum
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PENSUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AusbildungsPensumDtoSpec getPensum() {
    return pensum;
  }


  @JsonProperty(JSON_PROPERTY_PENSUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPensum(AusbildungsPensumDtoSpec pensum) {
    this.pensum = pensum;
  }


  public AusbildungBaseDtoSpec alternativeAusbildungsstaette(String alternativeAusbildungsstaette) {
    
    this.alternativeAusbildungsstaette = alternativeAusbildungsstaette;
    return this;
  }

   /**
   * Required wenn andere ausbildungNichtGefunden &#x3D; true
   * @return alternativeAusbildungsstaette
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_AUSBILDUNGSSTAETTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAlternativeAusbildungsstaette() {
    return alternativeAusbildungsstaette;
  }


  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_AUSBILDUNGSSTAETTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlternativeAusbildungsstaette(String alternativeAusbildungsstaette) {
    this.alternativeAusbildungsstaette = alternativeAusbildungsstaette;
  }


  public AusbildungBaseDtoSpec alternativeAusbildungsgang(String alternativeAusbildungsgang) {
    
    this.alternativeAusbildungsgang = alternativeAusbildungsgang;
    return this;
  }

   /**
   * Required wenn andere ausbildungNichtGefunden &#x3D; true
   * @return alternativeAusbildungsgang
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_AUSBILDUNGSGANG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAlternativeAusbildungsgang() {
    return alternativeAusbildungsgang;
  }


  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_AUSBILDUNGSGANG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlternativeAusbildungsgang(String alternativeAusbildungsgang) {
    this.alternativeAusbildungsgang = alternativeAusbildungsgang;
  }


  public AusbildungBaseDtoSpec ausbildungsortPLZ(String ausbildungsortPLZ) {
    
    this.ausbildungsortPLZ = ausbildungsortPLZ;
    return this;
  }

   /**
   * Not required if isAusbildungAusland &#x3D; true
   * @return ausbildungsortPLZ
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUSBILDUNGSORT_P_L_Z)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAusbildungsortPLZ() {
    return ausbildungsortPLZ;
  }


  @JsonProperty(JSON_PROPERTY_AUSBILDUNGSORT_P_L_Z)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAusbildungsortPLZ(String ausbildungsortPLZ) {
    this.ausbildungsortPLZ = ausbildungsortPLZ;
  }


  public AusbildungBaseDtoSpec ausbildungsort(String ausbildungsort) {
    
    this.ausbildungsort = ausbildungsort;
    return this;
  }

   /**
   * Not required if isAusbildungAusland &#x3D; true
   * @return ausbildungsort
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUSBILDUNGSORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAusbildungsort() {
    return ausbildungsort;
  }


  @JsonProperty(JSON_PROPERTY_AUSBILDUNGSORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAusbildungsort(String ausbildungsort) {
    this.ausbildungsort = ausbildungsort;
  }


  public AusbildungBaseDtoSpec isAusbildungAusland(Boolean isAusbildungAusland) {
    
    this.isAusbildungAusland = isAusbildungAusland;
    return this;
  }

   /**
   * Get isAusbildungAusland
   * @return isAusbildungAusland
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_AUSBILDUNG_AUSLAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsAusbildungAusland() {
    return isAusbildungAusland;
  }


  @JsonProperty(JSON_PROPERTY_IS_AUSBILDUNG_AUSLAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsAusbildungAusland(Boolean isAusbildungAusland) {
    this.isAusbildungAusland = isAusbildungAusland;
  }


  public AusbildungBaseDtoSpec landId(UUID landId) {
    
    this.landId = landId;
    return this;
  }

   /**
   * Get landId
   * @return landId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAND_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getLandId() {
    return landId;
  }


  @JsonProperty(JSON_PROPERTY_LAND_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLandId(UUID landId) {
    this.landId = landId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AusbildungBaseDtoSpec ausbildungBase = (AusbildungBaseDtoSpec) o;
    return Objects.equals(this.id, ausbildungBase.id) &&
        Objects.equals(this.fallId, ausbildungBase.fallId) &&
        Objects.equals(this.fachrichtungBerufsbezeichnung, ausbildungBase.fachrichtungBerufsbezeichnung) &&
        Objects.equals(this.ausbildungNichtGefunden, ausbildungBase.ausbildungNichtGefunden) &&
        Objects.equals(this.ausbildungBegin, ausbildungBase.ausbildungBegin) &&
        Objects.equals(this.ausbildungEnd, ausbildungBase.ausbildungEnd) &&
        Objects.equals(this.besuchtBMS, ausbildungBase.besuchtBMS) &&
        Objects.equals(this.pensum, ausbildungBase.pensum) &&
        Objects.equals(this.alternativeAusbildungsstaette, ausbildungBase.alternativeAusbildungsstaette) &&
        Objects.equals(this.alternativeAusbildungsgang, ausbildungBase.alternativeAusbildungsgang) &&
        Objects.equals(this.ausbildungsortPLZ, ausbildungBase.ausbildungsortPLZ) &&
        Objects.equals(this.ausbildungsort, ausbildungBase.ausbildungsort) &&
        Objects.equals(this.isAusbildungAusland, ausbildungBase.isAusbildungAusland) &&
        Objects.equals(this.landId, ausbildungBase.landId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, fallId, fachrichtungBerufsbezeichnung, ausbildungNichtGefunden, ausbildungBegin, ausbildungEnd, besuchtBMS, pensum, alternativeAusbildungsstaette, alternativeAusbildungsgang, ausbildungsortPLZ, ausbildungsort, isAusbildungAusland, landId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AusbildungBaseDtoSpec {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    fallId: ").append(toIndentedString(fallId)).append("\n");
    sb.append("    fachrichtungBerufsbezeichnung: ").append(toIndentedString(fachrichtungBerufsbezeichnung)).append("\n");
    sb.append("    ausbildungNichtGefunden: ").append(toIndentedString(ausbildungNichtGefunden)).append("\n");
    sb.append("    ausbildungBegin: ").append(toIndentedString(ausbildungBegin)).append("\n");
    sb.append("    ausbildungEnd: ").append(toIndentedString(ausbildungEnd)).append("\n");
    sb.append("    besuchtBMS: ").append(toIndentedString(besuchtBMS)).append("\n");
    sb.append("    pensum: ").append(toIndentedString(pensum)).append("\n");
    sb.append("    alternativeAusbildungsstaette: ").append(toIndentedString(alternativeAusbildungsstaette)).append("\n");
    sb.append("    alternativeAusbildungsgang: ").append(toIndentedString(alternativeAusbildungsgang)).append("\n");
    sb.append("    ausbildungsortPLZ: ").append(toIndentedString(ausbildungsortPLZ)).append("\n");
    sb.append("    ausbildungsort: ").append(toIndentedString(ausbildungsort)).append("\n");
    sb.append("    isAusbildungAusland: ").append(toIndentedString(isAusbildungAusland)).append("\n");
    sb.append("    landId: ").append(toIndentedString(landId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

