/*
 * STIP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.dvbern.stip.generated.dto;

import java.util.Objects;
import java.util.Arrays;
import ch.dvbern.stip.generated.dto.NotificationTypeDtoSpec;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Notification for a Gesuch
 */
@JsonPropertyOrder({
  NotificationDtoSpec.JSON_PROPERTY_NOTIFICATION_TYPE,
  NotificationDtoSpec.JSON_PROPERTY_GESUCH_ID,
  NotificationDtoSpec.JSON_PROPERTY_USER_ERSTELLT,
  NotificationDtoSpec.JSON_PROPERTY_TIMESTAMP_ERSTELLT
})
@JsonTypeName("Notification")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class NotificationDtoSpec {
  public static final String JSON_PROPERTY_NOTIFICATION_TYPE = "notificationType";
  private NotificationTypeDtoSpec notificationType;

  public static final String JSON_PROPERTY_GESUCH_ID = "gesuchId";
  private UUID gesuchId;

  public static final String JSON_PROPERTY_USER_ERSTELLT = "userErstellt";
  private String userErstellt;

  public static final String JSON_PROPERTY_TIMESTAMP_ERSTELLT = "timestampErstellt";
  private LocalDate timestampErstellt;

  public NotificationDtoSpec() {
  }

  public NotificationDtoSpec notificationType(NotificationTypeDtoSpec notificationType) {
    
    this.notificationType = notificationType;
    return this;
  }

   /**
   * Get notificationType
   * @return notificationType
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NOTIFICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public NotificationTypeDtoSpec getNotificationType() {
    return notificationType;
  }


  @JsonProperty(JSON_PROPERTY_NOTIFICATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNotificationType(NotificationTypeDtoSpec notificationType) {
    this.notificationType = notificationType;
  }


  public NotificationDtoSpec gesuchId(UUID gesuchId) {
    
    this.gesuchId = gesuchId;
    return this;
  }

   /**
   * Get gesuchId
   * @return gesuchId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GESUCH_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getGesuchId() {
    return gesuchId;
  }


  @JsonProperty(JSON_PROPERTY_GESUCH_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGesuchId(UUID gesuchId) {
    this.gesuchId = gesuchId;
  }


  public NotificationDtoSpec userErstellt(String userErstellt) {
    
    this.userErstellt = userErstellt;
    return this;
  }

   /**
   * Get userErstellt
   * @return userErstellt
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_ERSTELLT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUserErstellt() {
    return userErstellt;
  }


  @JsonProperty(JSON_PROPERTY_USER_ERSTELLT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserErstellt(String userErstellt) {
    this.userErstellt = userErstellt;
  }


  public NotificationDtoSpec timestampErstellt(LocalDate timestampErstellt) {
    
    this.timestampErstellt = timestampErstellt;
    return this;
  }

   /**
   * Get timestampErstellt
   * @return timestampErstellt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIMESTAMP_ERSTELLT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getTimestampErstellt() {
    return timestampErstellt;
  }


  @JsonProperty(JSON_PROPERTY_TIMESTAMP_ERSTELLT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimestampErstellt(LocalDate timestampErstellt) {
    this.timestampErstellt = timestampErstellt;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotificationDtoSpec notification = (NotificationDtoSpec) o;
    return Objects.equals(this.notificationType, notification.notificationType) &&
        Objects.equals(this.gesuchId, notification.gesuchId) &&
        Objects.equals(this.userErstellt, notification.userErstellt) &&
        Objects.equals(this.timestampErstellt, notification.timestampErstellt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(notificationType, gesuchId, userErstellt, timestampErstellt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotificationDtoSpec {\n");
    sb.append("    notificationType: ").append(toIndentedString(notificationType)).append("\n");
    sb.append("    gesuchId: ").append(toIndentedString(gesuchId)).append("\n");
    sb.append("    userErstellt: ").append(toIndentedString(userErstellt)).append("\n");
    sb.append("    timestampErstellt: ").append(toIndentedString(timestampErstellt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

