package ch.dvbern.stip.api.sap.generated.business_partner;

import java.net.URL;

import javax.xml.namespace.QName;

import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 4.0.3
 * 2025-04-24T16:07:19.377+02:00
 * Generated source version: 4.0.3
 *
 */
@WebServiceClient(name = "os_BusinessPartnerCreateService",
                  wsdlLocation = "wsdl/businesspartner/SST-009-BusinessPartnerCreate.wsdl",
                  targetNamespace = "urn:be.ch:KTBE_MDG:BUSINESS_PARTNER")
public class OsBusinessPartnerCreateService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("urn:be.ch:KTBE_MDG:BUSINESS_PARTNER", "os_BusinessPartnerCreateService");
    public final static QName HTTPSPort = new QName("urn:be.ch:KTBE_MDG:BUSINESS_PARTNER", "HTTPS_Port");
    public final static QName HTTPPort = new QName("urn:be.ch:KTBE_MDG:BUSINESS_PARTNER", "HTTP_Port");
    static {
        URL url = OsBusinessPartnerCreateService.class.getResource("wsdl/businesspartner/SST-009-BusinessPartnerCreate.wsdl");
        if (url == null) {
            url = OsBusinessPartnerCreateService.class.getClassLoader().getResource("wsdl/businesspartner/SST-009-BusinessPartnerCreate.wsdl");
        }
        if (url == null) {
            java.util.logging.Logger.getLogger(OsBusinessPartnerCreateService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "wsdl/businesspartner/SST-009-BusinessPartnerCreate.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public OsBusinessPartnerCreateService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public OsBusinessPartnerCreateService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OsBusinessPartnerCreateService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public OsBusinessPartnerCreateService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public OsBusinessPartnerCreateService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public OsBusinessPartnerCreateService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns OsBusinessPartnerCreate
     */
    @WebEndpoint(name = "HTTPS_Port")
    public OsBusinessPartnerCreate getHTTPSPort() {
        return super.getPort(HTTPSPort, OsBusinessPartnerCreate.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OsBusinessPartnerCreate
     */
    @WebEndpoint(name = "HTTPS_Port")
    public OsBusinessPartnerCreate getHTTPSPort(WebServiceFeature... features) {
        return super.getPort(HTTPSPort, OsBusinessPartnerCreate.class, features);
    }


    /**
     *
     * @return
     *     returns OsBusinessPartnerCreate
     */
    @WebEndpoint(name = "HTTP_Port")
    public OsBusinessPartnerCreate getHTTPPort() {
        return super.getPort(HTTPPort, OsBusinessPartnerCreate.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OsBusinessPartnerCreate
     */
    @WebEndpoint(name = "HTTP_Port")
    public OsBusinessPartnerCreate getHTTPPort(WebServiceFeature... features) {
        return super.getPort(HTTPPort, OsBusinessPartnerCreate.class, features);
    }

}
