<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>ch.dvbern.oss.stip</groupId>
  <artifactId>stip-api</artifactId>
  <version>${revision}</version>
  <properties>
    <archunit.version>1.0.1</archunit.version>
    <assertj.version>3.24.2</assertj.version>
    <checkerframework.version>3.19.0</checkerframework.version>
    <compiler-plugin.version>3.11.0</compiler-plugin.version>
    <contract.path>${project.basedir}/../contract/openapi.yaml</contract.path>
    <contract.version>1.24.0</contract.version>
    <itext.version>9.0.0</itext.version>
    <kie.version>8.41.0.Final</kie.version>
    <liquibase-maven-plugin.version>4.27.0</liquibase-maven-plugin.version>
    <lombok.version>1.18.28</lombok.version>
    <mapstruct.version>1.5.5.Final</mapstruct.version>
    <maven.compiler.release>17</maven.compiler.release>
    <package>ch.dvbern.stip</package>
    <package.generated>${package}.generated</package.generated>
    <package.generated.test>${package.generated}</package.generated.test>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <quarkiverse.sentry.version>2.0.7</quarkiverse.sentry.version>
    <quarkus-amazon-services.version>2.3.0</quarkus-amazon-services.version>
    <quarkus-antivirus.version>1.0.1</quarkus-antivirus.version>
    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
    <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
    <quarkus.platform.version>3.6.4</quarkus.platform.version>
    <querydsl.version>5.0.0</querydsl.version>
    <rest-assured.gen.dir>${project.build.directory}/rest-assured</rest-assured.gen.dir>
    <rest-assured.version>4.5.1</rest-assured.version>
    <revision>local</revision>
    <savoirtech.json-comparator.version>1.1.1</savoirtech.json-comparator.version>
    <skipITs>true</skipITs>
    <sonar.exclusions>file:**/generated/**,
      file:**/.mvn/**,
      file:**/.quarkus/**</sonar.exclusions>
    <sonar.qualitygate.wait>true</sonar.qualitygate.wait>
    <spotless.eclipse.version>4.29</spotless.eclipse.version>
    <spotless.version>2.43.0</spotless.version>
    <surefire-plugin.version>3.0.0</surefire-plugin.version>
    <testcontainers.version>1.18.3</testcontainers.version>
    <ci.disableConsole>false</ci.disableConsole>
    <ci.logLevel>DEBUG</ci.logLevel>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainers.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.quarkiverse.amazonservices</groupId>
        <artifactId>quarkus-amazon-services-bom</artifactId>
        <version>${quarkus-amazon-services.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>quarkus-cxf-bom</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-reactive-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-orm</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-liquibase</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-validator</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-openapi</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-reactive</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-reactive-qute</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-logging-gelf</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-arc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-envers</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-vertx</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-jwt-build</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-jwt</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkiverse.loggingsentry</groupId>
      <artifactId>quarkus-logging-sentry</artifactId>
      <version>${quarkiverse.sentry.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>findbugs-annotations</artifactId>
      <version>3.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.checkerframework</groupId>
      <artifactId>checker-qual</artifactId>
      <version>${checkerframework.version}</version>
    </dependency>
    <dependency>
      <groupId>com.querydsl</groupId>
      <artifactId>querydsl-jpa</artifactId>
      <version>${querydsl.version}</version>
      <classifier>jakarta</classifier>
    </dependency>
    <dependency>
      <groupId>com.querydsl</groupId>
      <artifactId>querydsl-apt</artifactId>
      <version>${querydsl.version}</version>
      <classifier>jakarta</classifier>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-orm-panache</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkiverse.amazonservices</groupId>
      <artifactId>quarkus-amazon-s3</artifactId>
    </dependency>
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>url-connection-client</artifactId>
    </dependency>
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>netty-nio-client</artifactId>
    </dependency>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-core</artifactId>
      <version>2.8.0</version>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-mailer</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-oidc</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.stateless4j</groupId>
      <artifactId>stateless4j</artifactId>
      <version>2.6.0</version>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-config-yaml</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-rest-client-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-quartz</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkiverse.antivirus</groupId>
      <artifactId>quarkus-antivirus</artifactId>
      <version>${quarkus-antivirus.version}</version>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-keycloak-admin-client</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkiverse.cxf</groupId>
      <artifactId>quarkus-cxf</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5-mockito</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${rest-assured.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>localstack</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit</artifactId>
      <version>${archunit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
      <version>0.2.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jacoco</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-test-oidc-server</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-test-security-oidc</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.savoirtech.json</groupId>
      <artifactId>json-comparator</artifactId>
      <version>${savoirtech.json-comparator.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.13.0</version>
    </dependency>
    <dependency>
      <groupId>ch.dvbern.oss.commons-i18n-l10n</groupId>
      <artifactId>dvb-commons-i18n-l10n-api</artifactId>
      <version>0.0.2</version>
    </dependency>
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-api</artifactId>
      <version>${kie.version}</version>
    </dependency>
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-dmn-api</artifactId>
      <version>${kie.version}</version>
    </dependency>
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-dmn-core</artifactId>
      <version>${kie.version}</version>
    </dependency>
    <dependency>
      <groupId>jakarta.xml.soap</groupId>
      <artifactId>jakarta.xml.soap-api</artifactId>
      <version>3.0.1</version>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.messaging.saaj</groupId>
      <artifactId>saaj-impl</artifactId>
      <version>3.0.4</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>itext-core</artifactId>
      <version>${itext.version}</version>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>bouncy-castle-adapter</artifactId>
      <version>${itext.version}</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>svg</artifactId>
      <version>${itext.version}</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.platform.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.mysema.maven</groupId>
        <artifactId>apt-maven-plugin</artifactId>
        <version>1.1.3</version>
        <executions>
          <execution>
            <phase>process-sources</phase>
            <goals>
              <goal>process</goal>
            </goals>
            <configuration>
              <outputDirectory>target/generated-sources/querydsl</outputDirectory>
              <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
            <path>
              <groupId>com.querydsl</groupId>
              <artifactId>querydsl-apt</artifactId>
              <classifier>jpa</classifier>
              <classifier>jakarta</classifier>
              <version>${querydsl.version}</version>
            </path>
            <path>
              <groupId>org.checkerframework</groupId>
              <artifactId>checker</artifactId>
              <version>${checkerframework.version}</version>
            </path>
          </annotationProcessorPaths>
          <annotationProcessors>
            <annotationProcessor>lombok.launch.AnnotationProcessorHider$AnnotationProcessor</annotationProcessor>
            <annotationProcessor>org.mapstruct.ap.MappingProcessor</annotationProcessor>
          </annotationProcessors>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <quarkus.log.level>${ci.logLevel}</quarkus.log.level>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
          <consoleOutputReporter>
            <disable>${ci.disableConsole}</disable>
          </consoleOutputReporter>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <systemPropertyVariables>
                <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                <maven.home>${maven.home}</maven.home>
              </systemPropertyVariables>
              <consoleOutputReporter>
                <disable>${ci.disableConsole}</disable>
              </consoleOutputReporter>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <version>${liquibase-maven-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-hibernate-orm</artifactId>
            <version>${quarkus.platform.version}</version>
          </dependency>
          <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase-maven-plugin.version}</version>
          </dependency>
          <dependency>
            <groupId>org.liquibase.ext</groupId>
            <artifactId>liquibase-hibernate6</artifactId>
            <version>${liquibase-maven-plugin.version}</version>
          </dependency>
          <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-jdbc-postgresql</artifactId>
            <version>${quarkus.platform.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <changeLogFile>src/main/resources/db/migration/changelog.xml</changeLogFile>
          <diffChangeLogFile>src/main/resources/db/migration/XXXXX_diffchange.xml</diffChangeLogFile>
          <outputChangeLogFile>src/main/resources/db/migration/XXXXX_genchange.xml</outputChangeLogFile>
          <propertyFile>liquibase.properties</propertyFile>
          <driver>org.postgresql.Driver</driver>
          <referenceUrl>hibernate:ejb3:LiquibasePU</referenceUrl>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <ratchetFrom>origin/main</ratchetFrom>
          <java>
            <toggleOffOn />
            <excludes>
              <include>src/**/generated/**/*.*</include>
            </excludes>
            <replaceRegex>
              <name>Remove wildcard imports</name>
              <searchRegex>import\s+(?:static\s+)?[^\*\s]+\*;(\r\n|\r|\n)</searchRegex>
              <replacement>$1</replacement>
            </replaceRegex>
            <cleanthat />
            <eclipse>
              <version>${spotless.eclipse.version}</version>
              <file>${project.basedir}/stip-codestyle.xml</file>
            </eclipse>
            <trimTrailingWhitespace />
            <importOrder>
              <order>java,,\#</order>
            </importOrder>
            <removeUnusedImports />
            <licenseHeader>
              <file>${project.basedir}/LICENSE_HEADER.txt</file>
            </licenseHeader>
          </java>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <properties>
        <skipITs>false</skipITs>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>
    <profile>
      <id>coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.7</version>
            <executions>
              <execution>
                <id>default-prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <exclClassLoaders>*QuarkusClassLoader</exclClassLoaders>
                  <destFile>${project.build.directory}/jacoco-quarkus.exec</destFile>
                  <append>true</append>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <excludes>
                <exclude>ch/dvbern/stip/generated/dto/PersonInAusbildungDto.java</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>generate-stubs-from-contract</id>
      <build>
        <defaultGoal>generate-sources</defaultGoal>
        <plugins>
          <plugin>
            <artifactId>maven-clean-plugin</artifactId>
            <version>3.2.0</version>
            <configuration>
              <filesets>
                <fileset>
                  <directory>${basedir}/src/test/java/ch/dvbern/stip/generated</directory>
                </fileset>
                <fileset>
                  <directory>${basedir}/src/main/java/ch/dvbern/stip/generated</directory>
                </fileset>
              </filesets>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>3.0.2</version>
            <executions>
              <execution>
                <id>copy-openapi-contract-to-quarkus</id>
                <phase>initialize</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${basedir}/src/main/resources/META-INF/</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${basedir}/../contract/</directory>
                      <includes>
                        <include>openapi.yaml</include>
                      </includes>
                    </resource>
                  </resources>
                  <overwrite>true</overwrite>
                </configuration>
              </execution>
              <execution>
                <id>copy-openapi-rest-assured-classes-to-project</id>
                <phase>process-test-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${basedir}/src/test/java</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${rest-assured.gen.dir}/src/main/java</directory>
                      <includes>
                        <include>**/*</include>
                      </includes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.openapitools</groupId>
            <artifactId>openapi-generator-maven-plugin</artifactId>
            <version>7.1.0</version>
            <executions>
              <execution>
                <id>generate-stubs</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>generate</goal>
                </goals>
                <configuration>
                  <openapiNormalizer>REFACTOR_ALLOF_WITH_PROPERTIES_ONLY=true</openapiNormalizer>
                  <inputSpec>${contract.path}</inputSpec>
                  <generatorName>jaxrs-spec</generatorName>
                  <library>quarkus</library>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>${project.artifactId}</artifactId>
                  <artifactVersion>${project.version}</artifactVersion>
                  <output>${project.basedir}</output>
                  <skipOverwrite>false</skipOverwrite>
                  <templateDirectory>${project.basedir}/templates</templateDirectory>
                  <modelNameSuffix>Dto</modelNameSuffix>
                  <apiNameSuffix>Resource</apiNameSuffix>
                  <generateSupportingFiles>false</generateSupportingFiles>
                  <schemaMappings>FileUpload=org.jboss.resteasy.reactive.multipart.FileUpload,
                    Gesuchstatus=ch.dvbern.stip.api.gesuchstatus.type.Gesuchstatus,
                    Anrede=ch.dvbern.stip.api.common.type.Anrede,
                    Niederlassungsstatus=ch.dvbern.stip.api.personinausbildung.type.Niederlassungsstatus,
                    Sprache=ch.dvbern.stip.api.personinausbildung.type.Sprache,
                    Zivilstand=ch.dvbern.stip.api.personinausbildung.type.Zivilstand,
                    ElternAbwesenheitsGrund=ch.dvbern.stip.api.familiensituation.type.ElternAbwesenheitsGrund,
                    ElternUnbekanntheitsGrund=ch.dvbern.stip.api.familiensituation.type.ElternUnbekanntheitsGrund,
                    Elternschaftsteilung=ch.dvbern.stip.api.familiensituation.type.Elternschaftsteilung,
                    ElternTyp=ch.dvbern.stip.api.eltern.type.ElternTyp,
                    Land=ch.dvbern.stip.api.stammdaten.type.Land,
                    DokumentTyp=ch.dvbern.stip.api.dokument.type.DokumentTyp,
                    Taetigkeitsart=ch.dvbern.stip.api.lebenslauf.type.Taetigkeitsart,
                    Kontoinhaber=ch.dvbern.stip.api.auszahlung.type.Kontoinhaber,
                    Ausbildungssituation=ch.dvbern.stip.api.common.type.Ausbildungssituation,
                    Wohnsitz=ch.dvbern.stip.api.common.type.Wohnsitz,
                    WohnsitzKanton=ch.dvbern.stip.api.lebenslauf.type.WohnsitzKanton,
                    LebenslaufAusbildungsArt=ch.dvbern.stip.api.lebenslauf.type.LebenslaufAusbildungsArt,
                    Bildungsstufe=ch.dvbern.stip.api.bildungskategorie.type.Bildungsstufe,
                    SteuerdatenTyp=ch.dvbern.stip.api.steuerdaten.type.SteuerdatenTyp,
                    GetGesucheSBQueryType=ch.dvbern.stip.api.gesuch.type.GetGesucheSBQueryType,
                    NotificationType=ch.dvbern.stip.api.notification.type.NotificationType,
                    Dokumentstatus=ch.dvbern.stip.api.dokument.type.Dokumentstatus,
                    GesuchTrancheStatus=ch.dvbern.stip.api.gesuchtranche.type.GesuchTrancheStatus,
                    GesuchTrancheTyp=ch.dvbern.stip.api.gesuchtranche.type.GesuchTrancheTyp,
                    SbDashboardColumn=ch.dvbern.stip.api.gesuch.type.SbDashboardColumn,
                    SortOrder=ch.dvbern.stip.api.gesuch.type.SortOrder,
                    AusbildungsStatus=ch.dvbern.stip.api.ausbildung.type.AusbildungsStatus,
                    StipDecision=ch.dvbern.stip.api.common.type.StipDecision,
                    GesuchNotizTyp=ch.dvbern.stip.api.notiz.type.GesuchNotizTyp,
                    UnterschriftenblattDokumentTyp=ch.dvbern.stip.api.unterschriftenblatt.type.UnterschriftenblattDokumentTyp,
                    DokumentArt=ch.dvbern.stip.api.dokument.type.DokumentArt,
                    SapStatus=ch.dvbern.stip.api.buchhaltung.type.SapStatus,
                    BuchhaltungType=ch.dvbern.stip.api.buchhaltung.type.BuchhaltungType</schemaMappings>
                  <addCompileSourceRoot>true</addCompileSourceRoot>
                  <templateDirectory>${project.basedir}/templates</templateDirectory>
                  <configOptions>
                    <sourceFolder>src/main/java</sourceFolder>
                    <dateLibrary>java8</dateLibrary>
                    <modelPackage>${package.generated}.dto</modelPackage>
                    <invokerPackage>${package.generated}</invokerPackage>
                    <apiPackage>${package.generated}.api</apiPackage>
                    <serializableModel>true</serializableModel>
                    <sortModelPropertiesByRequiredFlag>true</sortModelPropertiesByRequiredFlag>
                    <useJakartaEe>true</useJakartaEe>
                    <useSwaggerAnnotations>false</useSwaggerAnnotations>
                    <interfaceOnly>true</interfaceOnly>
                    <returnResponse>false</returnResponse>
                    <additionalModelTypeAnnotations>@lombok.NoArgsConstructor
                      @lombok.AllArgsConstructor
                      @org.eclipse.microprofile.openapi.annotations.media.Schema(hidden=true)</additionalModelTypeAnnotations>
                    <hideGenerationTimestamp>true</hideGenerationTimestamp>
                    <useTags>true</useTags>
                  </configOptions>
                  <typeMappings>
                    <typeMapping>DateTime=java.time.LocalDateTime</typeMapping>
                    <typeMapping>dateTime=java.time.LocalDateTime</typeMapping>
                  </typeMappings>
                </configuration>
              </execution>
              <execution>
                <id>generate-rest-assured-client</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>generate</goal>
                </goals>
                <configuration>
                  <inputSpec>${contract.path}</inputSpec>
                  <output>${rest-assured.gen.dir}</output>
                  <generatorName>java</generatorName>
                  <library>rest-assured</library>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>${project.groupId}-test-client</artifactId>
                  <artifactVersion>${project.version}</artifactVersion>
                  <skipOverwrite>false</skipOverwrite>
                  <generateModelTests>false</generateModelTests>
                  <generateApiTests>false</generateApiTests>
                  <apiNameSuffix>ApiSpec</apiNameSuffix>
                  <modelNameSuffix>DtoSpec</modelNameSuffix>
                  <configOptions>
                    <modelPackage>${package.generated.test}.dto</modelPackage>
                    <invokerPackage>${package.generated.test}</invokerPackage>
                    <apiPackage>${package.generated.test}.api</apiPackage>
                    <useJakartaEe>true</useJakartaEe>
                    <serializationLibrary>jackson</serializationLibrary>
                    <containerDefaultToNull>true</containerDefaultToNull>
                    <snapshotVersion>true</snapshotVersion>
                    <hideGenerationTimestamp>true</hideGenerationTimestamp>
                  </configOptions>
                  <typeMappings>
                    <typeMapping>DateTime=java.time.LocalDateTime</typeMapping>
                    <typeMapping>dateTime=java.time.LocalDateTime</typeMapping>
                  </typeMappings>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
