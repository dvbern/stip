stages: [.reset, build, validate, test, analyze, package]

include:
  - component: 'gitlab.dvbern.ch/devops/gitlab/components/nx@v0.8.0'
    inputs:
      app-name: '*-app'
      test-app-name: '*'
      context-dir: 'frontend'
      component-test-package-version: '13.6.2'
      allow-test-failure: 'false'
      allow-e2e-test-failure: 'false'
      e2e-on: 'never'

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/sonarqube@v0.8.0'
    inputs:
      sonar-scanner: cli
      context-dir: 'frontend'
      sonar-project-key: "$SONAR_PROJECT_KEY_FRONTEND"
      sonar-token: "$SONAR_TOKEN_FRONTEND"

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/buildah@v0.8.0'
    inputs:
      name: package:sachbearbeitung-app
      context-dir: frontend
      image-name: 'sachbearbeitung-app'
      version: '$VERSION'
      build-latest: 'false'
      build-args: |
        APP=sachbearbeitung-app

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/buildah@v0.8.0'
    inputs:
      name: package:gesuch-app
      context-dir: frontend
      image-name: 'gesuch-app'
      version: '$VERSION'
      build-latest: 'false'
      build-args: |
        APP=gesuch-app


reset-nx:
  image: "$DVB_DOCKER_REGISTRY/devops/docker/buildenvs/node/18"
  tags:
  - zone:tz
  - os:linux
  - type:docker
  needs:
  - nx-install
  cache:
  - key:
      files:
      - frontend/package.json
      - frontend/package-lock.json
    paths:
    - frontend/node_modules/
    - frontend/.nx/cache
    policy: pull-push
  - key:
      files:
      - frontend/package-lock.json
    paths:
    - frontend/.npm
    policy: pull-push
  variables:
    NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
  stage: ".reset"
  script:
  - cd $CI_PROJECT_DIR/frontend
  - npm i
  - npm i @nx/nx-linux-x64-gnu
  - npx nx reset
  - npm ci
  rules:
  - if: "$PIPELINE_TYPE =~ /(default|mr)/"