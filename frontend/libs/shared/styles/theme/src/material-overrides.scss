@use '@angular/cdk' as cdk;
@use '@angular/material' as mat;

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$gesuch-app-primary: mat.define-palette(mat.$blue-grey-palette);
$gesuch-app-accent: mat.define-palette(mat.$blue-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$gesuch-app-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$gesuch-app-theme: mat.define-light-theme(
  (
    color: (
      primary: $gesuch-app-primary,
      accent: $gesuch-app-accent,
      warn: $gesuch-app-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($gesuch-app-theme);
@include cdk.a11y-visually-hidden();

// Snackbar overlay settings for container size
// modify the parent container of the snackbar to center it
.cdk-overlay-pane:not(.mat-mdc-snack-bar-handset):has(
    > .mat-mdc-snack-bar-container
  ) {
  position: relative !important;
  margin: 120px auto 0 auto !important;
  flex-basis: var(--content-max-width);
  justify-content: flex-end;
  align-items: flex-end;
  align-self: flex-start;

  .mat-mdc-snack-bar-container {
    position: absolute;
    top: 0;
    flex: 0 0 auto;
    justify-content: flex-end;
    align-items: flex-start;
  }
}

.mdc-text-field:not(.mdc-text-field--disabled):not(.mdc-text-field--invalid)
  .mdc-floating-label {
  color: $black;
}
.mdc-text-field.mdc-text-field--disabled {
  .mdc-floating-label,
  .mdc-text-field__input::placeholder {
    color: rgba(0, 0, 0, 0.67);
  }
  .mdc-notched-outline > * {
    border-color: rgba(0, 0, 0, 0.15);
  }
}
.mat-mdc-form-field.mat-mdc-form-field-label-always-float {
  align-self: flex-start;
  --mat-mdc-form-field-floating-label-scale: 1;
  --mdc-outlined-text-field-outline-color: rgba(0, 0, 0, 0.09);
  .mat-mdc-form-field-hint {
    font-size: 0.75rem;
  }
  .mat-mdc-text-field-wrapper.mdc-text-field--outlined
    .mdc-notched-outline--upgraded
    .mdc-floating-label--float-above {
    font-size: 0.875rem;
    --mat-mdc-form-field-label-transform: translateY(-38.75px)
      scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));
  }

  .mdc-text-field--outlined {
    background-color: $input-bg;
  }
  .mat-mdc-form-field-hint-wrapper,
  .mat-mdc-form-field-error-wrapper {
    padding: 0;
  }
}
// Used for readonly mat-form-fields, see dvSharedUiFormReadonly
form.readonly .mat-mdc-form-field {
  --mdc-outlined-text-field-disabled-outline-color: transparent;
  --mdc-outlined-text-field-disabled-input-text-color: black;
  --mdc-outlined-text-field-disabled-label-text-color: black;
  --mdc-outlined-text-field-container-shape: 0;

  .mat-mdc-input-element {
    font-size: 1.25rem;
    font-weight: bold;
  }
  .mdc-text-field--outlined {
    background-color: transparent;
  }
  .mat-mdc-form-field-hint,
  .mat-mdc-form-field-icon-suffix {
    display: none;
  }
  .mdc-text-field--outlined .mdc-floating-label {
    left: 0;
  }
}
.mat-mdc-table .mat-mdc-header-row {
  --mat-table-header-container-height: 20px;
}
.mat-mdc-table {
  .mat-mdc-header-cell {
    padding-top: 20px;
    padding-bottom: 20px;
  }
  .combined-header-row {
    .mat-mdc-header-cell {
      border-bottom: 0;
      padding-top: 20px;
      padding-bottom: 0px;
    }
    .mat-mdc-header-row + .mat-mdc-header-row .mat-mdc-header-cell {
      padding-bottom: 20px;
      padding-top: 0;
    }
  }
}
.mat-mdc-paginator-page-size-label {
  align-self: center;
}
.mdc-radio .mdc-label {
  width: 100%;
}
.mat-mdc-radio-group.ng-invalid.ng-touched .mat-mdc-radio-button {
  --mdc-radio-unselected-icon-color: #{mat.get-color-from-palette(
      $gesuch-app-warn
    )};
  --mdc-radio-unselected-focus-icon-color: #{mat.get-color-from-palette(
      $gesuch-app-warn
    )};
}
.mat-mdc-form-field-error:not(:first-child) {
  display: none;
}
.dense-control {
  @include mat.form-field-density(-2);
}

.cdk-row.active,
table tr.mat-mdc-row {
  &.active,
  &.highlightable:hover {
    background-color: var(--mat-option-hover-state-layer-color);
  }
  &.highlightable {
    cursor: pointer;
  }
}

.mat-mdc-progress-bar {
  --mdc-linear-progress-active-indicator-height: 2px;
  --mdc-linear-progress-track-height: 2px;
  --mdc-linear-progress-active-indicator-color: #{$success};
  --mdc-linear-progress-track-color: #{lighten($success, 45%)};
}

.mat-mdc-progress-bar.mat-accent {
  --mdc-linear-progress-active-indicator-color: #{$info};
  --mdc-linear-progress-track-color: #{lighten($info, 35%)};
}

.mat-mdc-progress-bar.mat-warn {
  --mdc-linear-progress-active-indicator-color: #{$danger};
  --mdc-linear-progress-track-color: #{lighten($danger, 25%)};
}

.mat-mdc-snack-bar-container {
  --mdc-snackbar-container-color: #{$success};
  --mat-mdc-snack-bar-button-color: #fff;
  --mdc-snackbar-supporting-text-color: #fff;

  &.accent {
    --mdc-snackbar-container-color: #{$info};
  }
  &.warn {
    --mdc-snackbar-container-color: #{$warn};
  }
  &.error {
    --mdc-snackbar-container-color: #{$danger};
  }
}
