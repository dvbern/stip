openapi: 3.0.3
info:
  title: STIP API
  version: '1.0'
  license:
    name: GNU AGPLv3
    url: 'https://www.gnu.org/licenses/agpl.txt'
servers:
  - url: 'http://localhost:{port}/api/v1'
    description: ''
    variables:
      port:
        default: '8080'
        description: ''
paths:
  /gesuch:
    get:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gesuch'
          description: |
            Returns all Gesuche
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesuche
      summary: Returns all Gesuche
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GesuchCreate'
        required: true
      tags:
        - Gesuch
      responses:
        '201':
          description: New Gesuch is created
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createGesuch
      summary: Creates a new Gesuch
  '/gesuch/{gesuchId}/dokument/{dokumentTyp}':
    get:
      tags:
        - Gesuch
      parameters:
        - name: dokumentTyp
          schema:
            $ref: '#/components/schemas/DokumentTyp'
          in: path
          required: true
        - name: gesuchId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dokument'
          description: Returns an Array of Dokumente for a given GesuchId and a DokumentTyp
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getDokumenteForTyp
      summary: Returniert der GesuchDokument mit der gegebene Id und alle Dokument die dazu gehoeren.
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DokumentCreate'
        required: true
      tags:
        - Gesuch
      parameters:
        - name: dokumentTyp
          schema:
            $ref: '#/components/schemas/DokumentTyp'
          in: path
          required: true
        - name: gesuchId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createDokument
  '/fall/{fallId}':
    get:
      tags:
        - Fall
      parameters:
        - name: fallId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fall'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getFall
      summary: Returniert der Fall mit der gegebene Id.
    parameters:
      - name: fallId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
  /config/deployment:
    get:
      tags:
        - Configuration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentConfig'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getDeploymentConfig
      summary: Returniert der Deployment Configuration.
      description: Gibt zuerueck die Version und Stage aus das Backend
  /gesuchsperiode:
    get:
      tags:
        - Gesuchsperiode
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gesuchsperiode'
          description: Get `Gesuchsperiode`
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesuchsperioden
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GesuchsperiodeCreate'
        required: true
      tags:
        - Gesuchsperiode
      responses:
        '201':
          description: Created `Gesuchsperiode`
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createGesuchsperiode
  /gesuchsperiode/aktive:
    get:
      tags:
        - Gesuchsperiode
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gesuchsperiode'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getAktiveGesuchsperioden
      summary: Get all active Gesuchsperioden
  '/gesuchsperiode/{gesuchsperiodeId}':
    get:
      tags:
        - Gesuchsperiode
      parameters:
        - name: gesuchsperiodeId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gesuchsperiode'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesuchsperiode
      summary: Returniert der Gesuchsperiode mit der gegebene Id.
  /stammdaten/land:
    get:
      tags:
        - Stammdaten
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getLaender
      summary: Returns a List of LandCode
  '/gesuch/{gesuchId}/dokument/{dokumentTyp}/{dokumentId}':
    get:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: File returned
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getDokument
      summary: get Dokument
    delete:
      tags:
        - Gesuch
      parameters:
        - name: dokumentTyp
          schema:
            $ref: '#/components/schemas/DokumentTyp'
          in: path
          required: true
        - name: gesuchId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '204':
          description: |
            Dokument deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: deleteDokument
      summary: deletes a Dokument
    parameters:
      - name: gesuchId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
      - name: dokumentTyp
        schema:
          $ref: '#/components/schemas/DokumentTyp'
        in: path
        required: true
      - name: dokumentId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
  /ausbildungsstaette:
    get:
      tags:
        - Ausbildungsstaette
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ausbildungsstaette'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getAusbildungsstaetten
      summary: Returniert alle Ausbildungsstaette zur Verfuegung.
  /benutzer:
    get:
      tags:
        - Benutzer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Benutzer'
          description: Return alle Benutzende
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getBenutzende
      summary: Get all Benutzer
  '/benutzer/{benutzerId}':
    get:
      tags:
        - Benutzer
      parameters:
        - name: benutzerId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benutzer'
          description: Return der Benutzende die zu der ID gehoert
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getBenutzer
      summary: Get Benutzer mit ID
  '/gesuch/benutzer/{benutzerId}':
    get:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gesuch'
          description: Return alle Gesuche die gehoeren zu dieser Gesuchstellende
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesucheForBenutzer
      summary: Get all Gesuch for Benutzende
    parameters:
      - name: benutzerId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
  '/fall/benutzer/{benutzerId}':
    get:
      tags:
        - Fall
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fall'
          description: Return der Fall des Benutzende
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getFallForBenutzer
      summary: Get alle Fälle für den gegebene Benutzende
    post:
      tags:
        - Fall
      responses:
        '201':
          description: New Fall created
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createFall
    parameters:
      - name: benutzerId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
  '/gesuch/fall/{fallId}':
    get:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gesuch'
          description: Return alle Gesuche die gehoeren zu dieser Fall
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesucheForFall
      summary: Return alle Gesuche die gehören zu dieser Fall
    parameters:
      - name: fallId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
  '/gesuch/{gesuchId}':
    get:
      tags:
        - Gesuch
      parameters:
        - name: gesuchId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gesuch'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesuch
      summary: Returns the Gesuch with the given Id
    delete:
      tags:
        - Gesuch
      parameters:
        - name: gesuchId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '204':
          description: |
            Gesuch deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: deleteGesuch
      summary: delete a Gesuch
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GesuchUpdate'
        required: true
      tags:
        - Gesuch
      parameters:
        - name: gesuchId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '202':
          description: Gesuch updated
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: updateGesuch
      summary: Updates the Gesuch with the given Id
components:
  schemas:
    Anrede:
      enum:
        - HERR
        - FRAU
      type: string
    AusbildungsPensum:
      enum:
        - VOLLZEIT
        - TEILZEIT
      type: string
    Ausbildungsland:
      enum:
        - SCHWEIZ
        - AUSLAND
      type: string
    DokumentTyp:
      enum:
        - PERSON_IN_AUSBILDUNG_DOK
        - AUSBILDUNG_DOK
        - ELTERN_DOK
        - PARTNER_DOK
      type: string
    ElternAbwesenheitsGrund:
      enum:
        - VERSTORBEN
        - UNBEKANNT
        - WEDER_NOCH
      type: string
    ElternUnbekanntheitsGrund:
      enum:
        - UNBEKANNTER_AUFENTHALTSORT
        - FEHLENDE_ANERKENNUNG
      type: string
    Elternschaftsteilung:
      enum:
        - MUTTER
        - VATER
        - GEMEINSAM
      type: string
    Gesuchstatus:
      enum:
        - OFFEN
        - IN_BEARBEITUNG
      type: string
    LocalDate:
      format: date
      type: string
      example: '2022-03-10'
    Niederlassungsstatus:
      enum:
        - NIEDERLASSUNGSBEWILLIGUNG_L
        - NIEDERLASSUNGSBEWILLIGUNG_B
        - NIEDERLASSUNGSBEWILLIGUNG_C
        - NIEDERLASSUNGSBEWILLIGUNG_G
      type: string
    Wohnsitz:
      enum:
        - EIGENER_HAUSHALT
        - FAMILIE
        - MUTTER_VATER
      type: string
    Zivilstand:
      enum:
        - LEDIG
        - VERHEIRATET
        - KONKUBINAT
        - EINGETRAGENE_PARTNERSCHAFT
        - GESCHIEDEN_GERICHTLICH
        - AUFGELOESTE_PARTNERSCHAFT
        - VERWITWET
      type: string
    Adresse:
      required:
        - land
        - strasse
        - plz
        - ort
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        land:
          $ref: '#/components/schemas/Land'
        coAdresse:
          type: string
        strasse:
          type: string
        hausnummer:
          type: string
        plz:
          type: string
        ort:
          type: string
    Ausbildungsgang:
      required:
        - id
        - bezeichnungDe
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        bezeichnungDe:
          type: string
        bezeichnungFr:
          type: string
    BenutzerLogin:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    DeploymentConfig:
      type: object
      properties:
        environment:
          type: string
        version:
          type: string
    Dokument:
      required:
        - id
        - filename
        - filepfad
        - filesize
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        filename:
          type: string
        filepfad:
          type: string
        filesize:
          type: string
    Fall:
      required:
        - id
        - fallNummer
        - mandant
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        fallNummer:
          format: int64
          type: integer
        mandant:
          type: string
    GesuchsperiodeCreate:
      type: object
      properties:
        gueltigAb:
          $ref: '#/components/schemas/LocalDate'
        gueltigBis:
          $ref: '#/components/schemas/LocalDate'
        einreichfrist:
          $ref: '#/components/schemas/LocalDate'
        aufschaltdatum:
          $ref: '#/components/schemas/LocalDate'
    DokumentCreate:
      required:
        - file
      type: object
      properties:
        file:
          $ref: '#/components/schemas/FileUpload'
    FileUpload:
      format: binary
      type: string
    UUID:
      format: uuid
      type: string
    AusbildungUpdate:
      required:
        - ausbildungsland
        - fachrichtung
        - ausbildungBegin
        - ausbildungEnd
        - pensum
      type: object
      properties:
        ausbildungsgangId:
          $ref: '#/components/schemas/UUID'
          description: |
            Required wenn andere ausbildungNichtGefunden = false
        ausbildungsland:
          $ref: '#/components/schemas/Ausbildungsland'
        alternativeAusbildungsgang:
          description: |
            Required wenn andere ausbildungNichtGefunden = true
          type: string
        fachrichtung:
          type: string
        ausbildungNichtGefunden:
          type: boolean
        ausbildungBegin:
          description: Datum im Format mm.YYYY
          type: string
        ausbildungEnd:
          description: Datum im Format mm.YYYY
          type: string
        pensum:
          $ref: '#/components/schemas/AusbildungsPensum'
        ausbildungsstaetteId:
          $ref: '#/components/schemas/UUID'
          description: |
            Required wenn andere ausbildungNichtGefunden = false
        alternativeAusbildungsstaette:
          description: Required wenn andere ausbildungNichtGefunden = true
          type: string
    LebenslaufItemUpdate:
      title: Root Type for Lebenslauf
      description: ''
      required:
        - beschreibung
        - bis
        - von
        - wohnsitz
      type: object
      properties:
        wohnsitz:
          $ref: '#/components/schemas/WohnsitzKanton'
        id:
          $ref: '#/components/schemas/UUID'
          description: ''
        beschreibung:
          type: string
        bildungsart:
          $ref: '#/components/schemas/Bildungsart'
          description: Required wenn taetigkeitsart = null
        taetigskeitsart:
          $ref: '#/components/schemas/Taetigskeitsart'
          description: Required wenn bildungsart = null
        von:
          description: Datum im Format mm.YYYY
          type: string
        bis:
          description: Datum im Format mm.YYYY
          type: string
    FamiliensituationUpdate:
      required:
        - elternVerheiratetZusammen
      type: object
      properties:
        elternVerheiratetZusammen:
          type: boolean
        elternteilUnbekanntVerstorben:
          type: boolean
        gerichtlicheAlimentenregelung:
          type: boolean
        mutterUnbekanntVerstorben:
          $ref: '#/components/schemas/ElternAbwesenheitsGrund'
        mutterUnbekanntGrund:
          $ref: '#/components/schemas/ElternUnbekanntheitsGrund'
        mutterWiederverheiratet:
          type: boolean
        vaterUnbekanntVerstorben:
          $ref: '#/components/schemas/ElternAbwesenheitsGrund'
        vaterUnbekanntGrund:
          $ref: '#/components/schemas/ElternUnbekanntheitsGrund'
        vaterWiederverheiratet:
          type: boolean
        sorgerecht:
          $ref: '#/components/schemas/Elternschaftsteilung'
        obhut:
          $ref: '#/components/schemas/Elternschaftsteilung'
        obhutMutter:
          description: Required nur wenn obhut = GEMEINSAM
          type: number
        obhutVater:
          description: Required nur wenn obhut = GEMEINSAM
          type: number
        werZahltAlimente:
          $ref: '#/components/schemas/Elternschaftsteilung'
          description: Required nur wenn gerichtlicheAlimentenregelung = true
    Ausbildungssituation:
      description: ''
      enum:
        - VORSCHULPFLICHTIG
        - SCHULPFLICHTIG
        - IN_AUSBILDUNG
        - KEINE
      type: string
    GeschwisterUpdate:
      title: Root Type for Geschwister
      description: ''
      required:
        - wohnsitz
        - vorname
        - nachname
        - geburtsdatum
        - ausbildungssituation
      type: object
      properties:
        vorname:
          type: string
        geburtsdatum:
          format: date
          description: dd.MM.YYYY
          type: string
        wohnsitz:
          $ref: '#/components/schemas/Wohnsitz'
        ausbildungssituation:
          $ref: '#/components/schemas/Ausbildungssituation'
        id:
          $ref: '#/components/schemas/UUID'
        wohnsitzAnteilMutter:
          description: Required wenn Wohnsitz.MUTTER_VATER.
          type: number
        wohnsitzAnteilVater:
          description: Required wenn Wohnsitz.MUTTER_VATER.
          type: number
        nachname:
          type: string
    PartnerUpdate:
      required:
        - adresse
        - nachname
        - vorname
        - geburtsdatum
        - jahreseinkommen
        - sozialversicherungsnummer
      type: object
      properties:
        adresse:
          $ref: '#/components/schemas/Adresse'
        vorname:
          type: string
        geburtsdatum:
          $ref: '#/components/schemas/LocalDate'
          description: dd.MM.YYYY
        jahreseinkommen:
          description: ''
          type: number
        sozialversicherungsnummer:
          description: ''
          type: string
        nachname:
          type: string
    KindUpdate:
      title: Root Type for Geschwister
      description: ''
      required:
        - wohnsitz
        - vorname
        - nachname
        - geburtsdatum
        - ausbildungssituation
      type: object
      properties:
        vorname:
          type: string
        geburtsdatum:
          format: date
          description: dd.MM.YYYY
          type: string
        wohnsitz:
          $ref: '#/components/schemas/Wohnsitz'
        ausbildungssituation:
          $ref: '#/components/schemas/Ausbildungssituation'
        id:
          $ref: '#/components/schemas/UUID'
        wohnsitzAnteilMutter:
          description: Required wenn Wohnsitz.MUTTER_VATER.
          type: number
        wohnsitzAnteilVater:
          description: Required wenn Wohnsitz.MUTTER_VATER.
          type: number
        nachname:
          type: string
    Auszahlung:
      title: Root Type for Auszahlung
      description: ''
      type: object
      allOf:
        - type: object
        - $ref: '#/components/schemas/AuszahlungUpdate'
    AuszahlungUpdate:
      title: Root Type for Auszahlung
      description: ''
      required:
        - adresse
        - iban
        - nachname
        - vorname
        - kontoinhaber
      type: object
      properties:
        vorname:
          type: string
        adresse:
          $ref: '#/components/schemas/Adresse'
          properties:
            coAdresse:
              type: string
            strasse:
              type: string
            hausnummer:
              type: string
            plz:
              type: string
            ort:
              type: string
            land:
              type: string
        iban:
          type: string
        nachname:
          type: string
        kontoinhaber:
          $ref: '#/components/schemas/Kontoinhaber'
    Gesuch:
      description: ''
      required:
        - fall
        - gesuchsperiode
        - gesuchStatus
        - gesuchNummer
        - id
      type: object
      properties:
        fall:
          $ref: '#/components/schemas/Fall'
          description: ''
        gesuchsperiode:
          $ref: '#/components/schemas/Gesuchsperiode'
          description: ''
        gesuchStatus:
          $ref: '#/components/schemas/Gesuchstatus'
          description: ''
        gesuchNummer:
          format: int32
          description: ''
          type: integer
        id:
          $ref: '#/components/schemas/UUID'
          description: ''
        gesuch_formular_freigabe_copy:
          $ref: '#/components/schemas/GesuchFormular'
          description: ''
        gesuch_formular_to_work_with:
          $ref: '#/components/schemas/GesuchFormular'
          description: ''
    GesuchCreate:
      required:
        - fallId
        - gesuchsperiodeId
      type: object
      properties:
        fallId:
          $ref: '#/components/schemas/UUID'
        gesuchsperiodeId:
          $ref: '#/components/schemas/UUID'
    GesuchUpdate:
      description: ''
      type: object
      properties:
        gesuch_formular_to_work_with:
          $ref: '#/components/schemas/GesuchFormularUpdate'
          description: ''
    Land:
      enum:
        - CH
        - DE
        - FR
        - IT
      type: string
    Sprache:
      description: ''
      enum:
        - DEUTSCH
        - FRANZOESISCH
      type: string
    WohnsitzKanton:
      description: ''
      enum:
        - AG
        - AI
        - AR
        - BL
        - BS
        - BE
        - FR
        - GE
        - GL
        - GR
        - JU
        - LU
        - NE
        - NW
        - OW
        - SG
        - SH
        - SZ
        - SO
        - TI
        - TG
        - UR
        - VD
        - VS
        - ZG
        - ZH
        - AUSLAND
      type: string
    Ausbildung:
      type: object
      allOf:
        - type: object
        - $ref: '#/components/schemas/AusbildungUpdate'
    Familiensituation:
      type: object
      allOf:
        - type: object
        - $ref: '#/components/schemas/FamiliensituationUpdate'
    Taetigskeitsart:
      enum:
        - ERWERBSTAETIGKEIT
        - ANDERE_TAETIGKEIT
      type: string
    Bildungsart:
      description: ''
      enum:
        - BERUFSVORBEREITENDES_SCHULJAHR_VORLEHRE
        - GYMNASIALE_MATURITAETSSCHULEN
        - SCHULEN_FUER_ALLGEMEINBILDUNG
        - VOLLZEITBERUFSSCHULEN
        - LEHREN_ANLEHREN
        - BERUFSMATURITAET_NACH_LEHRE
        - HOEHERE_BERUFSBILDUNG
        - FACHHOCHSCHULEN
        - UNIVERSITAETEN_ETH
      type: string
    PersonInAusbildung:
      type: object
      allOf:
        - required:
            - adresse.id
          type: object
        - $ref: '#/components/schemas/PersonInAusbildungUpdate'
    Gesuchsperiode:
      required:
        - id
        - gueltigAb
        - gueltigBis
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        gueltigAb:
          $ref: '#/components/schemas/LocalDate'
        gueltigBis:
          $ref: '#/components/schemas/LocalDate'
        einreichfrist:
          $ref: '#/components/schemas/LocalDate'
        aufschaltdatum:
          $ref: '#/components/schemas/LocalDate'
          example: '2022-12-12'
      example:
        - id: 3fa85f64-5717-4562-b3fc-2c963f66afa3
          gueltigAb: '2022-02-01'
          gueltigBis: '2023-01-31'
          einreichfrist: '2022-06-30'
          aufschaltdatum: '2022-06-01'
        - id: 3fa85f64-5717-4562-b3fc-2c963f66afa3
          gueltigAb: '2022-02-01'
          gueltigBis: '2023-01-31'
          einreichfrist: '2022-06-30'
          aufschaltdatum: '2022-06-01'
    ElternTyp:
      description: ''
      enum:
        - VATER
        - MUTTER
      type: string
    ElternUpdate:
      title: Root Type for Eltern
      description: ''
      required:
        - adresse
        - ausweisbFluechtling
        - ergaenzungsleistungAusbezahlt
        - geburtsdatum
        - identischerZivilrechtlicherWohnsitz
        - nachname
        - sozialhilfebeitraegeAusbezahlt
        - sozialversicherungsnummer
        - telefonnummer
        - vorname
        - elternTyp
      type: object
      properties:
        vorname:
          type: string
        adresse:
          $ref: '#/components/schemas/Adresse'
          properties:
            coAdresse:
              type: string
            strasse:
              type: string
            hausnummer:
              type: string
            plz:
              type: string
            ort:
              type: string
            land:
              type: string
            id:
              type: string
        identischerZivilrechtlicherWohnsitz:
          type: boolean
        identischerZivilrechtlicherWohnsitzOrt:
          description: Required wenn identischerZivilrechtlicherWohnsitz = false
          type: string
        identischerZivilrechtlicherWohnsitzPLZ:
          description: Required wenn identischerZivilrechtlicherWohnsitz = false
          type: string
        telefonnummer:
          type: string
        sozialversicherungsnummer:
          type: string
        geburtsdatum:
          format: date
          description: dd.MM.YYYY
          type: string
        sozialhilfebeitraegeAusbezahlt:
          type: boolean
        ausweisbFluechtling:
          type: boolean
        ergaenzungsleistungAusbezahlt:
          type: boolean
        id:
          $ref: '#/components/schemas/UUID'
          description: ''
        elternTyp:
          $ref: '#/components/schemas/ElternTyp'
        nachname:
          type: string
    Eltern:
      title: Root Type for Eltern
      description: ''
      type: object
      allOf:
        - required:
            - id
          type: object
          properties:
            copyOfId:
              $ref: '#/components/schemas/UUID'
              description: ''
        - $ref: '#/components/schemas/ElternUpdate'
    Geschwister:
      title: Root Type for Geschwister
      description: ''
      type: object
      allOf:
        - required:
            - id
          type: object
          properties:
            copyOfId:
              $ref: '#/components/schemas/UUID'
              description: ''
        - $ref: '#/components/schemas/GeschwisterUpdate'
    Kind:
      title: Root Type for Geschwister
      description: ''
      type: object
      allOf:
        - required:
            - id
          type: object
          properties:
            copyOfId:
              $ref: '#/components/schemas/UUID'
              description: ''
        - $ref: '#/components/schemas/KindUpdate'
    LebenslaufItem:
      title: Root Type for Lebenslauf
      description: ''
      type: object
      allOf:
        - required:
            - id
          type: object
          properties:
            copyOfId:
              $ref: '#/components/schemas/UUID'
              description: ''
        - $ref: '#/components/schemas/LebenslaufItemUpdate'
    Partner:
      type: object
      allOf:
        - type: object
        - $ref: '#/components/schemas/PartnerUpdate'
    Ausbildungsstaette:
      required:
        - id
        - ausbildungsland
        - name
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        ausbildungsgaenge:
          type: array
          items:
            $ref: '#/components/schemas/Ausbildungsgang'
        ausbildungsland:
          $ref: '#/components/schemas/Ausbildungsland'
        name:
          type: string
    Kontoinhaber:
      description: ''
      enum:
        - GESUCHSTELLER
        - VATER
        - MUTTER
        - SOZIALDIENST_INSTITUTION
        - ANDERE
      type: string
    GesuchFormular:
      required: [ ]
      type: object
      properties:
        ausbildung:
          $ref: '#/components/schemas/Ausbildung'
          description: ''
        personInAusbildung:
          $ref: '#/components/schemas/PersonInAusbildung'
          description: ''
        familiensituation:
          $ref: '#/components/schemas/Familiensituation'
        partner:
          $ref: '#/components/schemas/Partner'
          description: ''
        auszahlung:
          $ref: '#/components/schemas/Auszahlung'
          description: ''
        elterns:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Eltern'
        geschwisters:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Geschwister'
        lebenslaufItems:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/LebenslaufItem'
        kinds:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/Kind'
    PersonInAusbildungUpdate:
      required:
        - adresse
        - sozialversicherungsnummer
        - nachname
        - vorname
        - anrede
        - identischerZivilrechtlicherWohnsitz
        - email
        - telefonnummer
        - geburtsdatum
        - nationalitaet
        - wohnsitz
        - sozialhilfebeitraege
        - quellenbesteuert
        - digitaleKommunikation
        - korrespondenzSprache
      type: object
      properties:
        adresse:
          $ref: '#/components/schemas/Adresse'
        sozialversicherungsnummer:
          type: string
        vorname:
          type: string
        anrede:
          $ref: '#/components/schemas/Anrede'
        identischerZivilrechtlicherWohnsitz:
          type: boolean
        email:
          type: string
        telefonnummer:
          type: string
        geburtsdatum:
          $ref: '#/components/schemas/LocalDate'
        nationalitaet:
          $ref: '#/components/schemas/Land'
        heimatort:
          description: Required nur wenn Land = CH
          type: string
        niederlassungsstatus:
          $ref: '#/components/schemas/Niederlassungsstatus'
          description: Required wenn Nationalitaet != CH
        zivilstand:
          $ref: '#/components/schemas/Zivilstand'
        wohnsitz:
          $ref: '#/components/schemas/Wohnsitz'
        wohnsitzAnteilMutter:
          description: Required wenn Wohnsitz.MUTTER_VATER.
          type: number
        wohnsitzAnteilVater:
          description: Required wenn Wohnsitz.MUTTER_VATER.
          type: number
        sozialhilfebeitraege:
          type: boolean
        quellenbesteuert:
          type: boolean
        digitaleKommunikation:
          type: boolean
        vormundschaft:
          description: Required nur wenn Land = CH
          type: boolean
        nachname:
          type: string
        identischerZivilrechtlicherWohnsitzOrt:
          description: Required wenn identischerZivilrechtlicherWohnsitz = false
          type: string
        identischerZivilrechtlicherWohnsitzPLZ:
          description: Required wenn identischerZivilrechtlicherWohnsitz = false
          type: string
        korrespondenzSprache:
          $ref: '#/components/schemas/Sprache'
          description: ''
    Benutzer:
      description: ''
      required:
        - id
        - nachname
        - sozialversicherungsnummer
        - vorname
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
          description: ''
        sozialversicherungsnummer:
          type: string
        vorname:
          type: string
        nachname:
          type: string
    GesuchFormularUpdate:
      required: [ ]
      type: object
      properties:
        ausbildung:
          $ref: '#/components/schemas/AusbildungUpdate'
          description: ''
        personInAusbildung:
          $ref: '#/components/schemas/PersonInAusbildungUpdate'
          description: ''
        familiensituation:
          $ref: '#/components/schemas/FamiliensituationUpdate'
        partner:
          $ref: '#/components/schemas/PartnerUpdate'
          description: ''
        auszahlung:
          $ref: '#/components/schemas/AuszahlungUpdate'
          description: ''
        elterns:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/ElternUpdate'
        geschwisters:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/GeschwisterUpdate'
        lebenslaufItems:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/LebenslaufItemUpdate'
        kinds:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/KindUpdate'
    FormData:
      format: binary
      type: string
  responses:
    Unauthorized:
      content:
        text/plain: { }
      description: Die Zugriffsdaten sind nicht gültig
    Forbidden:
      content:
        text/plain: { }
      description: Der Zugriff wurde verweigert
    NotFound:
      content:
        text/plain: { }
      description: Die angeforderte Ressource existiert nicht
    ServerError:
      content:
        text/plain: { }
      description: Interner Server Fehler
  securitySchemes:
    SecurityScheme:
      scheme: basic
      type: http
      description: Authentication
tags:
  - name: Ausbildungsstaette
  - name: Auth
  - name: Configuration
  - name: Fall
  - name: Gesuch
  - name: Gesuchsperiode
  - name: Stammdaten
  - name: Benutzer
    description: ''
