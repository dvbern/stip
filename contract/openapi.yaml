openapi: 3.0.3
info:
  title: STIP API
  version: '1.0'
  license:
    name: GNU AGPLv3
    url: 'https://www.gnu.org/licenses/agpl.txt'
servers:
  - url: 'http://localhost:{port}/api/v1'
    variables:
      port:
        default: '8080'
paths:
  /mail/welcome:
    post:
      tags:
        - Mail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WelcomeMail'
      responses:
        '200':
          description: Mail was successfully sent
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: sendWelcomeEmail
      summary: Sends an e-mail for a newly created user
  /gesuch:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GesuchCreate'
        required: true
      tags:
        - Gesuch
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UUID'
          description: New Gesuch is created
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createGesuch
      summary: Creates a new Gesuch
  /gesuch/benutzer/me/sb/{getGesucheSBQueryType}:
    get:
      tags:
        - Gesuch
      parameters:
        - name: getGesucheSBQueryType
          schema:
            $ref: '#/components/schemas/GetGesucheSBQueryType'
          in: path
          required: true
        - $ref: '#/components/parameters/fallNummer'
        - $ref: '#/components/parameters/piaNachname'
        - $ref: '#/components/parameters/piaVorname'
        - $ref: '#/components/parameters/piaGeburtsdatum'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/bearbeiter'
        - $ref: '#/components/parameters/letzteAktivitaetFrom'
        - $ref: '#/components/parameters/letzteAktivitaetTo'
        - $ref: '#/components/parameters/typ'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
        - name: sortColumn
          schema:
            $ref: '#/components/schemas/SbDashboardColumn'
          in: query
          required: false
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSbDashboard'
          description: Returns gesuche filtered by status and sb
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesucheSb
      summary: Returns gesuche filtered by status and sb
  /gesuch/benutzer/me/gs:
    get:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gesuch'
          description: Returns gesuche filtered by gs
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesucheGs
      summary: Returns gesuche filtered by gs
  /gesuch/benutzer/me/gs-dashboard:
    get:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FallDashboardItem'
          description: Returns gesuche for dashboard filtered by gs
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGsDashboard
      summary: Returns gesuche for dashboard filtered by gs
  /gesuch/benutzer/me/sozialdienst-mitarbeiter-dashboard/{fallId}:
    get:
      tags:
        - Gesuch
      parameters:
        - name: fallId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FallDashboardItem'
          description: Returns gesuche for dashboard filtered by sozialdienst mitarbeiter
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getSozialdienstMitarbeiterDashboard
      summary: Returns gesuche for dashboard filtered by gs
  /gesuch/status/in-bearbeitung/{gesuchTrancheId}:
    post:
      tags:
        - Gesuch
      parameters:
        - name: gesuchTrancheId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchWithChanges'
          description: Returns gesuch in status
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: changeGesuchStatusToInBearbeitung
  /gesuch/status/bereit-fuer-bearbeitung/{gesuchTrancheId}:
    post:
      tags:
        - Gesuch
      parameters:
        - name: gesuchTrancheId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Kommentar'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchWithChanges'
          description: Returns gesuch in status
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: changeGesuchStatusToBereitFuerBearbeitung
  /gesuch/status/verfuegt/{gesuchTrancheId}:
    post:
      tags:
        - Gesuch
      parameters:
        - name: gesuchTrancheId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gesuch'
          description: Returns gesuch in status
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: changeGesuchStatusToVerfuegt
  /gesuch/status/versendet/{gesuchTrancheId}:
    post:
      tags:
        - Gesuch
      parameters:
        - name: gesuchTrancheId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gesuch'
          description: Returns gesuch in status
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: changeGesuchStatusToVersendet
  /gesuch/status/negative-verfuegung/{gesuchTrancheId}:
    post:
      tags:
        - Gesuch
      parameters:
        - name: gesuchTrancheId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AusgewaehlterGrund'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gesuch'
          description: Returns gesuch in status
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: changeGesuchStatusToNegativeVerfuegung
  /gesuch/status/unterschriftenblatt-erhalten/{gesuchTrancheId}:
    parameters:
      - $ref: '#/components/parameters/gesuchTrancheId'
    post:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gesuch'
          description: Returns gesuch in status
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: changeGesuchStatusToVersandbereit
  '/gesuch/{gesuchId}/notiz/all':
    parameters:
      - name: gesuchId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - GesuchNotiz
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GesuchNotiz'
          description: all notizen of a fall from given gesuch
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getNotizen
      summary: Get all notizen of a fall from given gesuch
  '/gesuch/notiz/create':
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GesuchNotizCreate'
        required: true
      tags:
        - GesuchNotiz
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchNotiz'
          description: new notiz is created
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createNotiz
      summary: Creates a new Notiz for an existing gesuch
  '/gesuch/notiz':
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GesuchNotizUpdate'
        required: true
      tags:
        - GesuchNotiz
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchNotiz'
          description: Notiz aktualisiert
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: updateNotiz
      summary: Updates the Notiz of a Gesuch with the given Notiz-Id
  '/gesuch/notiz/juristischeAbklaerung/{notizId}':
    parameters:
      - name: notizId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JuristischeAbklaerungNotizAntwort'
        required: true
      tags:
        - GesuchNotiz
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchNotiz'
          description: Juristische Abklaerung Notiz Antwort posted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: answerJuristischeAbklaerungNotiz
      summary: Sets the Answer of a Juristische Abklaerung Notiz Antwort
  '/gesuch/notiz/{notizId}':
    parameters:
      - name: notizId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - GesuchNotiz
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchNotiz'
          description: |
            get a single notiz
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getNotiz
      summary: get a single Notiz of a Gesuch with the given Notiz-Id
    delete:
      tags:
        - GesuchNotiz
      responses:
        '204':
          description: |
            Notiz deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: deleteNotiz
      summary: delete a Notiz of a Gesuch with the given Notiz-Id
  '/gesuch/{gesuchId}/einreichedatum':
    parameters:
      - $ref: '#/components/parameters/gesuchId'
    get:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EinreichedatumStatus'
          description: Check ob einreichedatumManuellAendern aufrufbar ist oder nicht
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: canEinreichedatumAendern
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EinreichedatumAendernRequest'
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gesuch'
          description: Aendert das Einreichedatum des Gesuch manuell
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: einreichedatumManuellAendern
  '/gesuch/{gesuchId}/beschwerde':
    parameters:
      - $ref: '#/components/parameters/gesuchId'
    get:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BeschwerdeVerlaufEntry'
          description: Returns all the BeschwerdeVerlaufEntrys for a given Gesuch
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getAllBeschwerdeVerlaufEntrys
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeschwerdeVerlaufEntryCreate'
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeschwerdeVerlaufEntry'
          description: Creates a new BeschwerdeVerlaufEntry for a given Gesuch
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createBeschwerdeVerlaufEntry
  '/gesuch/{gesuchId}/beschwerde-entscheid':
    post:
      tags:
        - Gesuch
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BeschwerdeEntscheidCreate'
      parameters:
        - $ref: '#/components/parameters/gesuchId'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createBeschwerdeEntscheid
      x-quarkus-response-type: io.smallrye.mutiny.Uni<Response>
  /stip-decision/all:
    get:
      tags:
        - StipDecision
      responses:
        '200':
          description: 'Get all StipDecisionText entries'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StipDecisionText'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getAll
  /ausbildung:
    post:
      tags:
        - Ausbildung
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AusbildungUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ausbildung'
          description: Returns the created Ausbildung
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createAusbildung
      summary: Returniert die erstellte Ausbildung
  /ausbildung/{ausbildungId}:
    parameters:
      - name: ausbildungId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - Ausbildung
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ausbildung'
          description: Returns the created Ausbildung
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getAusbildung
      summary: Returniert die Ausbildung
    patch:
      tags:
        - Ausbildung
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AusbildungUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ausbildung'
          description: Returns the created Ausbildung
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: updateAusbildung
      summary: Returniert die Ausbildung
  '/gesuchDokument/customGesuchDokument/':
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDokumentTypCreate'
        required: true
      tags:
        - Dokument
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchDokument'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createCustomDokumentTyp
      summary: create CustomDokumentTyp
  '/gesuchDokument/customGesuchDokument/{customDokumentTypId}':
    parameters:
      - name: customDokumentTypId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    delete:
      tags:
        - Dokument
      responses:
        '204':
          description: |
            Custom Dokument Typ deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: deleteCustomDokumentTyp
      summary: delete a customDokumentTyp
  '/gesuchDokument/gs/{gesuchTrancheId}/{dokumentTyp}':
    get:
      tags:
        - Dokument
      parameters:
        - name: dokumentTyp
          schema:
            $ref: '#/components/schemas/DokumentTyp'
          in: path
          required: true
        - name: gesuchTrancheId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NullableGesuchDokument'
          description: Returns a Dokument for a given GesuchTrancheId and a DokumentTyp
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesuchDokumentForTypGS
      summary: Returniert das GesuchDokument mit der gegebenen Tranche Id und alle Dokumente die dazu gehoeren. Historisiert für den GS
  '/gesuchDokument/sb/{gesuchTrancheId}/{dokumentTyp}':
    get:
      tags:
        - Dokument
      parameters:
        - name: dokumentTyp
          schema:
            $ref: '#/components/schemas/DokumentTyp'
          in: path
          required: true
        - name: gesuchTrancheId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NullableGesuchDokument'
          description: Returns a Dokument for a given GesuchTrancheId and a DokumentTyp
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesuchDokumentForTypSB
      summary: Returniert das GesuchDokument mit der gegebenen Tranche Id und alle Dokumente die dazu gehoeren. Für den SB
  '/gesuchDokument/{gesuchTrancheId}/{dokumentTyp}':
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DokumentCreate'
        required: true
      tags:
        - Dokument
      parameters:
        - name: dokumentTyp
          schema:
            $ref: '#/components/schemas/DokumentTyp'
          in: path
          required: true
        - name: gesuchTrancheId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createDokument
      summary: Upload a file for the given Typ to the Tranche
      x-quarkus-response-type: io.smallrye.mutiny.Uni<Response>
  '/customGesuchDokument/sb/{customDokumentTypId}':
    get:
      tags:
        - Dokument
      parameters:
        - name: customDokumentTypId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NullableGesuchDokument'
          description: Returns an Array of Dokumente for a given GesuchTrancheId and a CustomDokumentTyp
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getCustomGesuchDokumentForTypSB
      summary: Returniert das GesuchDokument mit der gegebenen Tranche Id und alle Dokumente die dazu gehoeren. Für den SB
  '/customGesuchDokument/gs/{customDokumentTypId}':
    get:
      tags:
        - Dokument
      parameters:
        - name: customDokumentTypId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NullableGesuchDokument'
          description: Returns an Array of Dokumente for a given GesuchTrancheId and a CustomDokumentTyp
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getCustomGesuchDokumentForTypGS
      summary: Returniert das GesuchDokument mit der gegebenen Tranche Id und alle Dokumente die dazu gehoeren. Für den GS
  '/customGesuchDokument/{customDokumentTypId}':
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DokumentCreate'
        required: true
      tags:
        - Dokument
      parameters:
        - name: customDokumentTypId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: uploadCustomGesuchDokument
      summary: Upload a file for the given customDokumentTyp to the Tranche
      x-quarkus-response-type: io.smallrye.mutiny.Uni<Response>
  '/gesuchDokument/{gesuchDokumentId}/kommentare/gs':
    get:
      tags:
        - Dokument
      parameters:
        - name: gesuchDokumentId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GesuchDokumentKommentar'
          description: Returns an Array of GesuchDokumentKommentar for a given GesuchDokuemntId
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesuchDokumentKommentareGS
      summary: Returniert GesuchDokumentKommentare zu einem GesuchDokument.
  '/gesuchDokument/{gesuchDokumentId}/kommentare/sb':
    get:
      tags:
        - Dokument
      parameters:
        - name: gesuchDokumentId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GesuchDokumentKommentar'
          description: Returns an Array of GesuchDokumentKommentar for a given GesuchDokuemntId
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesuchDokumentKommentareSB
      summary: Returniert GesuchDokumentKommentare zu einem GesuchDokument.
  '/gesuchDokument/{gesuchDokumentId}/akzeptieren':
    parameters:
      - name: gesuchDokumentId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    patch:
      tags:
        - Dokument
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: gesuchDokumentAkzeptieren
  '/gesuchDokument/{gesuchDokumentId}/ablehnen':
    parameters:
      - name: gesuchDokumentId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GesuchDokumentAblehnenRequest'
      tags:
        - Dokument
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: gesuchDokumentAblehnen
  '/unterschriftenblatt/{gesuchId}/{unterschriftenblattTyp}':
    post:
      tags:
        - Dokument
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UnterschriftenblattCreate'
      parameters:
        - $ref: '#/components/parameters/unterschriftenblattTyp'
        - $ref: '#/components/parameters/gesuchId'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createUnterschriftenblatt
      x-quarkus-response-type: io.smallrye.mutiny.Uni<Response>
  '/unterschriftenblatt/{gesuchId}':
     get:
      tags:
        - Dokument
      parameters:
        - $ref: '#/components/parameters/gesuchId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnterschriftenblattDokument'
          description: Returns an Array of Unterschriftenblaetter
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getUnterschriftenblaetterForGesuch
  '/unterschriftenblatt/dokument/{dokumentId}':
    delete:
      tags:
        - Dokument
      responses:
        '200':
          description: Dokument deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: deleteUnterschriftenblattDokument
      summary: deletes a Dokument
    parameters:
      - name: dokumentId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
  '/fall/sb':
    get:
      tags:
        - Fall
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fall'
          description: Get all Faelle which are assigned to the currently logged in Sachbearbeiter
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getFaelleForSb
      summary: Get alle Faelle für den SB
  '/fall/gs':
    get:
      tags:
        - Fall
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fall'
          description: Get the current Fall for the currently logged in Gesuchsteller
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getFallForGs
      summary: Get Fall für den GS
    post:
      tags:
        - Fall
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fall'
          description: Return des neu erstellten Falls für den GS
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createFallForGs
  /config/deployment:
    get:
      tags:
        - Configuration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentConfig'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getDeploymentConfig
      summary: Returniert der Deployment Configuration.
      description: Gibt zuerueck die Version und Stage aus das Backend
  /gesuchsjahr:
    get:
      tags:
        - Gesuchsjahr
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gesuchsjahr'
          description: Returned all Gesuchsjahre
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: getGesuchsjahre
      summary: Gets all Gesuchsjahre
    post:
      tags:
        - Gesuchsjahr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GesuchsjahrCreate'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gesuchsjahr'
          description: Returned new created Gesuchsjahr
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: createGesuchsjahr
      summary: Creates a new Gesuchsjahr
  /gesuchsjahr/{gesuchsjahrId}:
    parameters:
      - name: gesuchsjahrId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - Gesuchsjahr
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gesuchsjahr'
          description: Returned Gesuchsjahr
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: getGesuchsjahr
      summary: Returns a Gesuchsjahr with the given id
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GesuchsjahrUpdate'
      tags:
        - Gesuchsjahr
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gesuchsjahr'
          description: Returned updated Gesuchsjahr
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: updateGesuchsjahr
      summary: Updates a Gesuchsjahr with the given id
    delete:
      tags:
        - Gesuchsjahr
      responses:
        204:
          description: Gesuchsjahr deleted
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: deleteGesuchsjahr
      summary: Deletes a Gesuchsjahr with the given id
  /gesuchsjahr/publish/{gesuchsjahrId}:
    parameters:
      - name: gesuchsjahrId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    patch:
      tags:
        - Gesuchsjahr
      responses:
        200:
          description: Gesuchsjahr published
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gesuchsjahr'
      operationId: publishGesuchsjahr
      summary: Publishes a Gesuchsjahr with the given id
  /gesuchsperiode:
    get:
      tags:
        - Gesuchsperiode
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gesuchsperiode'
          description: Get `Gesuchsperiode`
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesuchsperioden
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GesuchsperiodeCreate'
        required: true
      tags:
        - Gesuchsperiode
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchsperiodeWithDaten'
          description: Gesuchsperiode created
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createGesuchsperiode
  /gesuchsperiode/latest:
    get:
      tags:
        - Gesuchsperiode
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NullableGesuchsperiodeWithDaten'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getLatest
      summary: Returniert die neuste GesuchsperiodeWithDaten
  /gesuchsperiode/aktive:
    get:
      tags:
        - Gesuchsperiode
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gesuchsperiode'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getAktiveGesuchsperioden
      summary: Get all active Gesuchsperioden
  '/gesuchsperiode/{gesuchsperiodeId}':
    parameters:
      - name: gesuchsperiodeId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - Gesuchsperiode
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchsperiodeWithDaten'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesuchsperiode
      summary: Returniert die GesuchsperiodeWithDaten mit der gegebene Id.
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GesuchsperiodeUpdate'
      tags:
        - Gesuchsperiode
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchsperiodeWithDaten'
          description: Returned updated Gesuchsperiode
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: updateGesuchsperiode
      summary: Updates a Gesuchperiode with the given id
    delete:
      tags:
        - Gesuchsperiode
      responses:
        204:
          description: Gesuchsperiode deleted
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: deleteGesuchsperiode
      summary: Deletes a Gesuchsperiode with the given id
  /gesuchsperiode/publish/{gesuchsperiodeId}:
    parameters:
      - name: gesuchsperiodeId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    patch:
      tags:
        - Gesuchsperiode
      responses:
        200:
          description: Gesuchsperiode published
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchsperiodeWithDaten'
      operationId: publishGesuchsperiode
      summary: Publishes a Gesuchsperiode with the given id
  /sozialdienst:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SozialdienstCreate'
      tags:
        - Sozialdienst
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sozialdienst'
          description: Returns created Sozialdienst
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: createSozialdienst
      summary: Create a new Sozialdienst
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SozialdienstUpdate'
      tags:
        - Sozialdienst
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sozialdienst'
          description: Returns updated Sozialdienst
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: updateSozialdienst
      summary: Update a Sozialdienst
    get:
      tags:
        - Sozialdienst
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sozialdienst'
          description: Returns all Sozialdienste
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: getAllSozialdienste
      summary: Returns all Sozialdienste
  /sozialdienst/delegation:
    get:
      tags:
        - Sozialdienst
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SozialdienstSlim'
          description: Returns all Sozialdienste
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: getAllSozialdiensteForDelegation
  /sozialdienst/{sozialdienstId}/replaceSozialdienstAdmin:
    parameters:
      - $ref: '#/components/parameters/sozialdienstId'
    patch:
      tags:
        - Sozialdienst
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SozialdienstAdmin'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SozialdienstBenutzer'
          description: Replaces a Sozialdienst admin by a new one
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: replaceSozialdienstAdmin
  /sozialdienst/{sozialdienstId}:
    parameters:
      - $ref: '#/components/parameters/sozialdienstId'
    delete:
      tags:
        - Sozialdienst
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sozialdienst'
          description: Deletes a Sozialdienst by id
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: deleteSozialdienst
      summary: Delete a Sozialdienst by Id
    get:
      tags:
        - Sozialdienst
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sozialdienst'
          description: Returns a Sozialdienst by id
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: getSozialdienst
      summary: Get a Sozialdienst by Id
  /sozialdienst/benutzer:
    get:
      tags:
        - Sozialdienst
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SozialdienstBenutzer'
          description: Returns all SozialdienstBenutzers of the Sozialdienst of the logged in SozialdienstAdmin
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: getSozialdienstBenutzerList
    post:
      description: create a new SozialdienstBenutzer that is assigned to the Sozialdienst of the currently logged in SozialdienstAdmin
      tags:
        - Sozialdienst
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SozialdienstBenutzerCreate'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SozialdienstBenutzer'
          description: Returns the created SozialdienstBenutzer
      operationId: createSozialdienstBenutzer
    patch:
      description: update an exisitng SozialdienstBenutzer
      tags:
        - Sozialdienst
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SozialdienstBenutzerUpdate'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SozialdienstBenutzer'
          description: Returns the updated SozialdienstBenutzer
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: updateSozialdienstBenutzer
  /sozialdienst/admin:
    patch:
      tags:
        - Sozialdienst
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SozialdienstBenutzerUpdate'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SozialdienstBenutzer'
          description: Updates data of a Sozialdienst admin
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: updateSozialdienstAdmin
  /sozialdienst/benutzer/{sozialdienstBenutzerId}:
    parameters:
      - name: sozialdienstBenutzerId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - Sozialdienst
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SozialdienstBenutzer'
          description: Returns the Sozialdienst Benutzer with the given ID
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: getSozialdienstBenutzer
    delete:
      description: update an exisitng SozialdienstBenutzer
      tags:
        - Sozialdienst
      responses:
        200:
          description: Returns on successfull delete
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: deleteSozialdienstBenutzer
  /delegieren/{fallId}/{sozialdienstId}:
    parameters:
      - $ref: '#/components/parameters/fallId'
      - $ref: '#/components/parameters/sozialdienstId'
    post:
      tags:
      - Delegieren
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelegierungCreate'
      responses:
        204:
          description: Das Gesuch wurde erfolgreich dem Sozialdienst delegiert
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: fallDelegieren
  /delegierung/{delegierungId}/mitarbeiterDelegieren:
    parameters:
      - $ref: '#/components/parameters/delegierungId'
    post:
      tags:
        - Delegieren
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelegierterMitarbeiterAendern'
      responses:
        204:
          description: Der delegierte Mitarbeiter wurde erfolgreich geandert
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
      operationId: delegierterMitarbeiterAendern
  /delegierung/{getDelegierungSozQueryType}:
    get:
      tags:
        - Delegieren
      parameters:
        - name: getDelegierungSozQueryType
          schema:
            $ref: '#/components/schemas/GetDelegierungSozQueryType'
          in: path
          required: true
        - $ref: '#/components/parameters/fallNummer'
        - $ref: '#/components/parameters/nachname'
        - $ref: '#/components/parameters/vorname'
        - $ref: '#/components/parameters/geburtsdatum'
        - $ref: '#/components/parameters/wohnort'
        - $ref: '#/components/parameters/delegierungAngenommen'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
        - name: sortColumn
          schema:
            $ref: '#/components/schemas/SozDashboardColumn'
          in: query
          required: false
        - $ref: '#/components/parameters/sortOrder'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSozDashboard'
          description: Returns FallWithDelegierung
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getDelegierungsOfSozialdienst
      summary: Returns a list of Faelle with Delegierung
  /stammdaten/land:
    get:
      tags:
        - Stammdaten
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Land'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getLaender
      summary: Returns a List of LandCode
  /stammdaten/land/euefta:
    get:
      tags:
        - Stammdaten
      responses:
        '200':
          description: Returns all countries and whether they're part of eu/efta or not
          content:
            application/json:
              schema:
                type: Array
                items:
                  $ref: '#/components/schemas/LandEuEfta'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getLaenderEuEfta
    patch:
      tags:
        - Stammdaten
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: Array
                items:
                  $ref: '#/components/schemas/LandEuEfta'
      responses:
        '200':
          description: 'EU/EFTA Länder wurden erflogreich gesetzt'
          content:
            application/json:
              schema:
                type: Array
                items:
                  $ref: '#/components/schemas/LandEuEfta'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: setLaenderEuEfta
  /ausbildungsstaette:
    get:
      tags:
        - Ausbildungsstaette
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ausbildungsstaette'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getAusbildungsstaetten
      summary: Returniert alle Ausbildungsstaette zur Verfuegung.
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AusbildungsstaetteCreate'
      tags:
        - Ausbildungsstaette
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ausbildungsstaette'
          description: New Ausbildungsstaette created
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createAusbildungsstaette
  '/ausbildungsstaette/{ausbildungsstaetteId}':
    parameters:
      - name: ausbildungsstaetteId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - Ausbildungsstaette
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ausbildungsstaette'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getAusbildungsstaette
      summary: returns a Ausbildungsstaette with the given id
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AusbildungsstaetteUpdate'
      tags:
        - Ausbildungsstaette
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ausbildungsstaette'
          description: Ausbildungsstaette updated
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: updateAusbildungsstaette
    delete:
      tags:
        - Ausbildungsstaette
      responses:
        '204':
          description: Ausbildungsstaette deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: deleteAusbildungsstaette
      summary: Delete Ausbildungsstaette
  '/gesuch/{gesuchId}':
    parameters:
      - name: gesuchId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GesuchUpdate'
        required: true
      tags:
        - Gesuch
      responses:
        '202':
          description: Gesuch updated
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: updateGesuch
      summary: Updates the Gesuch with the given Id
    delete:
      tags:
        - Gesuch
      responses:
        '204':
          description: |
            Gesuch deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: deleteGesuch
      summary: delete a Gesuch
  '/gesuch/changes/{gesuchTrancheId}':
    parameters:
      - name: gesuchTrancheId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchWithChanges'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getInitialTrancheChanges
      summary: Returns the inital tranche changes by gesuchTrancheId
  '/gesuch/gs/{gesuchTrancheId}':
        parameters:
          - name: gesuchTrancheId
            schema:
              $ref: '#/components/schemas/UUID'
            in: path
            required: true
        get:
          tags:
            - Gesuch
          responses:
            '200':
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Gesuch'
              description: OK
            '401':
              $ref: '#/components/responses/Unauthorized'
            '403':
              $ref: '#/components/responses/Forbidden'
            '404':
              $ref: '#/components/responses/NotFound'
            '500':
              $ref: '#/components/responses/ServerError'
          operationId: getGesuchGS
          summary: Returns the Gesuch with the given Id
  '/gesuch/sb/{gesuchTrancheId}':
    parameters:
      - name: gesuchTrancheId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchWithChanges'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesuchSB
      summary: Returns the Gesuch with the given Id
  '/gesuch/{gesuchId}/info':
    parameters:
      - name: gesuchId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchInfo'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesuchInfo
      summary: Returns the basic Gesuch info with the given Id
  /steuerdaten/nesko/{gesuchTrancheId}:
    parameters:
      - name: gesuchTrancheId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NeskoGetSteuerdatenRequest'
        required: true
      tags:
        - Steuerdaten
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Steuerdaten'
          description: Steuerdaten updated
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: updateSteuerdatenFromNesko
      summary: Updates the Steuerdaten from Nesko
  /steuerdaten/{gesuchTrancheId}:
    parameters:
      - name: gesuchTrancheId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - Steuerdaten
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Steuerdaten'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getSteuerdaten
      summary: Returniert die Steuerdaten der gegebenen gesuchTrancheId.
    patch:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Steuerdaten'
        required: true
      tags:
        - Steuerdaten
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Steuerdaten'
          description: Steuerdaten updated
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: updateSteuerdaten
      summary: Updates the Steuerdaten of the given gesuchTrancheId
  '/dokument/{dokumentArt}/download':
    parameters:
      - name: token
        schema:
          type: string
        in: query
        required: true
      - name: dokumentArt
        schema:
          $ref: '#/components/schemas/DokumentArt'
        in: path
        required: true
    get:
      tags:
        - Dokument
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: File returned
      operationId: getDokument
      summary: get Dokument
      x-quarkus-response-type: org.jboss.resteasy.reactive.RestMulti<io.vertx.mutiny.core.buffer.Buffer>
  '/dokument/{dokumentId}':
    parameters:
      - name: dokumentId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - Dokument
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDownloadToken'
          description: File returned
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
          description: File returned
      operationId: getDokumentDownloadToken
      summary: get Dokument Download Token
    delete:
      tags:
        - Dokument
      responses:
        '200':
          description: Dokument deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: deleteDokument
      summary: deletes a Dokument
  '/gesuch/{gesuchTrancheId}/einreichen/gs':
    patch:
      tags:
        - Gesuch
      parameters:
        - name: gesuchTrancheId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gesuch'
          description: Gesuch eingereicht
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: gesuchEinreichenGs
      summary: Das Gesuch einreichen als Gesuchsteller
  '/gesuch/{gesuchTrancheId}/einreichen/jur':
    patch:
      tags:
        - Gesuch
      parameters:
        - name: gesuchTrancheId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gesuch'
          description: Gesuch eingereicht
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: gesuchEinreichenJur
      summary: Das Gesuch einreichen als Jurist
  '/gesuch/{gesuchId}/nachfristDokumente':
    parameters:
      - name: gesuchId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    patch:
      tags:
        - Gesuch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NachfristAendernRequest'
      responses:
        '204':
          description: nachfrist updated successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: updateNachfristDokumente
      summary: Nachfrist der nachzureichenden Dokumente anpassen
  '/gesuch/{gesuchTrancheId}/fehlendeDokumente':
    parameters:
      - name: gesuchTrancheId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    patch:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchWithChanges'
          description: Fehlende Dokumente übermittelt
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: gesuchFehlendeDokumenteUebermitteln
      summary: Dem GS übermitteln das Dokumente nicht akzeptiert wurden
  '/gesuch/{gesuchTrancheId}/fehlendeDokumenteEinreichen':
    parameters:
      - $ref: '#/components/parameters/gesuchTrancheId'
    patch:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gesuch'
          description: Fehlende Dokumente eingereicht
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: gesuchTrancheFehlendeDokumenteEinreichen
      summary: Dem SB übermitteln das fehlende Dokumente hochgeladen wurden
  '/gesuch/{gesuchTrancheId}/bearbeitungAbschliessen':
    parameters:
      - name: gesuchTrancheId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    patch:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchWithChanges'
          description: Bearbeitung des Gesuch Abschliessen
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: bearbeitungAbschliessen
      summary: Die Bearbeitung des Gesuch durch den SB abschliessen
  '/gesuch/{gesuchTrancheId}/gesuchZurueckweisen':
    parameters:
      - $ref: '#/components/parameters/gesuchTrancheId'
    patch:
      tags:
        - Gesuch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Kommentar'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchZurueckweisenResponse'
          description: Gesuch zurueckweisen and GS
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: gesuchZurueckweisen
      summary: Gas Gesuch an den GS zurueckweisen
  '/gesuch/{gesuchId}/statusprotokoll':
    parameters:
      - name: gesuchId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - Gesuch
      responses:
        '201':
          description: Gesuch eingereicht
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatusprotokollEntry'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getStatusProtokoll
      summary: Holt das Statusprotokoll für ein Gesuch
  '/gesuch/{gesuchId}/berechnung':
    parameters:
      - name: gesuchId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - Gesuch
      responses:
        '200':
          description: Stipendien berechnet für Gesuch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Berechnungsresultat'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getBerechnungForGesuch
      summary: Berechnet und holt die Berechnung für ein Gesuch
  '/gesuch/{gesuchId}/berechnungsblatt/token':
    parameters:
      - name: gesuchId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDownloadToken'
          description: File returned
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getBerechnungsblattDownloadToken
      summary: get Berechnungsblatt Download Token
  '/gesuch/berechnungsblatt':
    parameters:
      - name: token
        schema:
          type: string
        in: query
        required: true
    get:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Berechnungsblatt File returned
      operationId: getBerechnungsBlattForGesuch
      summary: Berechnet und generiert das Berechnungsblatt für ein Gesuch
      x-quarkus-response-type: org.jboss.resteasy.reactive.RestMulti<io.vertx.mutiny.core.buffer.Buffer>
  '/gesuchtranche/{gesuchTrancheId}/fehlendeDokumente':
    parameters:
      - name: gesuchTrancheId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    patch:
      tags:
        - GesuchTranche
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchWithChanges'
          description: Fehlende Dokumente übermittelt
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: aenderungFehlendeDokumenteUebermitteln
      summary: Dem GS übermitteln das Dokumente auf dieser Änderung nicht akzeptiert wurden
  '/gesuchtranche/{gesuchTrancheId}/fehlendeDokumenteEinreichen':
    parameters:
      - $ref: '#/components/parameters/gesuchTrancheId'
    patch:
      tags:
        - GesuchTranche
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gesuch'
          description: Fehlende Dokumente eingereicht
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: aenderungFehlendeDokumenteEinreichen
      summary: Dem SB übermitteln das fehlende Dokumente auf dieser Änderung hochgeladen wurden
  '/gesuchtranche/{gesuchTrancheId}/einreichen/validieren/gs':
    get:
      tags:
        - GesuchTranche
      parameters:
        - name: gesuchTrancheId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationReport'
          description: Returns an Array of Dokumente for a given GesuchId and a DokumentTyp
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: gesuchTrancheEinreichenValidierenGS
      summary: Das Gesuch Einreichen Validation Report generieren
  '/gesuchtranche/{gesuchTrancheId}/einreichen/validieren/sb':
    get:
      tags:
        - GesuchTranche
      parameters:
        - name: gesuchTrancheId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationReport'
          description: Returns an Array of Dokumente for a given GesuchId and a DokumentTyp
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: gesuchTrancheEinreichenValidierenSB
      summary: Das Gesuch Einreichen Validation Report generieren
  '/gesuch/{aenderungId}/aenderung/gs/changes':
    parameters:
      - $ref: '#/components/parameters/aenderungId'
    get:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchWithChanges'
          description: Returns
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGsAenderungChangesInBearbeitung
  '/gesuch/{aenderungId}/aenderung/sb/changes':
    parameters:
      - $ref: '#/components/parameters/aenderungId'
    get:
      tags:
        - Gesuch
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchWithChanges'
          description: Returns
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getSbAenderungChanges
  /tenant/current:
    get:
      tags:
        - Tenant
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantInfo'
          description: Tenant
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getCurrentTenant
      summary: Current Tenant
      description: '`Tenant` based on the current Request'
  /benutzer/{benutzerId}:
    parameters:
      - name: benutzerId
        schema:
          type: string
        in: path
        required: true
    delete:
      tags:
        - Benutzer
      responses:
        204:
          description: Benutzer deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: deleteBenutzer
      summary: Deletes a benutzer with the given id

  /benutzer/prepare/me:
    get:
      tags:
        - Benutzer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benutzer'
          description: Current Benutzer
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: prepareCurrentBenutzer
      summary: Get or create and update current benutzer
  '/ausbildungsgang/{ausbildungsgangId}':
    parameters:
      - name: ausbildungsgangId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - Ausbildungsgang
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ausbildungsgang'
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getAusbildungsgang
      summary: return der Ausbildungsgang
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AusbildungsgangUpdate'
        required: true
      tags:
        - Ausbildungsgang
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ausbildungsgang'
          description: Ausbildungsgang updated
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: updateAusbildungsgang
      summary: Updates a Ausbildungsgang with the given ID
    delete:
      tags:
        - Ausbildungsgang
      responses:
        '204':
          description: Ausbildungsgang deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: deleteAusbildungsgang
      summary: delete a Ausbildungsgang
  /ausbildungsgang:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AusbildungsgangCreate'
        required: true
      tags:
        - Ausbildungsgang
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ausbildungsgang'
          description: New Ausbildungsgang is created
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createAusbildungsgang
      summary: Creates a new Ausbildungsgang
  /benutzer/stammdaten/sachbearbeiter:
    get:
      tags:
        - Benutzer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Benutzer'
          description: >-
            Return a list of all Sachbearbeiter with their Sachbearbeiter Zuordnung Stammdaten
            when exist
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getSachbearbeitende
    patch:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SachbearbeiterZuordnungStammdatenList'
      tags:
        - Benutzer
      responses:
        '200':
          description: Sachbearbeiter Stammdatenzuweisung updated
        '202':
          description: Gesuch updated
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createOrUpdateSachbearbeiterStammdatenList
  '/benutzer/stammdaten/sachbearbeiter/{benutzerId}':
    get:
      tags:
        - Benutzer
      parameters:
        - name: benutzerId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SachbearbeiterZuordnungStammdaten'
          description: Return the Stammdaten for the given Benutzer when exist
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getSachbearbeiterStammdaten
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SachbearbeiterZuordnungStammdaten'
        required: true
      tags:
        - Benutzer
      parameters:
        - name: benutzerId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          description: Sachbearbeiter Stammdaten created / updated
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createOrUpdateSachbearbeiterStammdaten
  '/gesuchtranche/validatePages/{gesuchTrancheId}/gs':
    get:
      tags:
        - GesuchTranche
        - Validation
      parameters:
        - name: gesuchTrancheId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationReport'
          description: Die Validierung wurde erflogreich durchgeführt
      operationId: validateGesuchTranchePagesGS
  '/gesuchtranche/validatePages/{gesuchTrancheId}/sb':
    get:
      tags:
        - GesuchTranche
        - Validation
      parameters:
        - name: gesuchTrancheId
          schema:
            $ref: '#/components/schemas/UUID'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationReport'
          description: Die Validierung wurde erflogreich durchgeführt
      operationId: validateGesuchTranchePagesSB
  '/gesuchtranche/{gesuchTrancheId}/dokumente/gs':
    parameters:
      - name: gesuchTrancheId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - GesuchTranche
      responses:
        '200':
          description: GesuchDokumente returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GesuchDokument'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesuchDokumenteGS
  '/gesuchtranche/{gesuchTrancheId}/dokumente/sb':
    parameters:
      - name: gesuchTrancheId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - GesuchTranche
      responses:
        '200':
          description: GesuchDokumente returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GesuchDokument'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getGesuchDokumenteSB
  '/gesuchtranche/{gesuchTrancheId}/dokumenteToUpload/gs':
    parameters:
      - name: gesuchTrancheId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - GesuchTranche
      responses:
        '200':
          description: Returns the documents that are to be uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DokumenteToUpload'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getDocumentsToUploadGS
  '/gesuchtranche/{gesuchTrancheId}/dokumenteToUpload/sb':
    parameters:
      - name: gesuchTrancheId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - GesuchTranche
      responses:
        '200':
          description: Returns the documents that are to be uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DokumenteToUpload'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getDocumentsToUploadSB
  '/gesuchtranche/gs/{gesuchId}':
    parameters:
      - name: gesuchId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - GesuchTranche
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchTrancheList'
          description: Alle GesuchTranchen fuer ein Gesuch
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getAllTranchenForGesuchGS
  '/gesuchtranche/sb/{gesuchId}':
    parameters:
      - name: gesuchId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    get:
      tags:
        - GesuchTranche
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchTrancheList'
          description: Alle GesuchTranchen fuer ein Gesuch
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getAllTranchenForGesuchSB
  '/gesuchtranche/{gesuchId}/aenderungsantrag':
    parameters:
      - name: gesuchId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    post:
      tags:
        - GesuchTranche
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAenderungsantragRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchTranche'
          description: Aenderungsantrag wurde erstellt
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createAenderungsantrag
  '/gesuchtranche/{gesuchId}/tranche':
    parameters:
      - name: gesuchId
        schema:
          $ref: '#/components/schemas/UUID'
        in: path
        required: true
    post:
      tags:
        - GesuchTranche
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGesuchTrancheRequest'
      responses:
        '200':
          description: 'GesuchTranche wurde erflogreich erstellt'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchTranche'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createGesuchTrancheCopy
  '/gesuchtranche/{aenderungId}/aenderung/einreichen':
    parameters:
      - $ref: '#/components/parameters/aenderungId'
    patch:
      tags:
        - GesuchTranche
      responses:
        '200':
          description: Eingereicht
        '400':
          description: Falsche Tranche eingereicht
        '404':
          description: Die Tranche gibt es nicht
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: aenderungEinreichen
  '/gesuchtranche/{aenderungId}/aenderung/akzeptieren':
    parameters:
      - $ref: '#/components/parameters/aenderungId'
    post:
      tags:
        - GesuchTranche
      responses:
        '200':
          description: 'Aenderung wurde erflogreich akzeptiert'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchTranche'
        '400':
          description: Falsche Tranche akzeptiert
        '404':
          description: Die Aenderung gibt es nicht
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: aenderungAkzeptieren
  '/gesuchtranche/{aenderungId}/aenderung/manuelleAenderung':
    parameters:
      - $ref: '#/components/parameters/aenderungId'
    patch:
      tags:
        - GesuchTranche
      responses:
        '200':
          description: 'Aenderung wurde erflogreich auf manuell gesetzt'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchTranche'
        '400':
          description: Falsche Tranche versucht auf manuell zu setzen
        '404':
          description: Die Aenderung gibt es nicht
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: aenderungManuellAnpassen
  '/gesuchtranche/{aenderungId}/aenderung/ablehnen':
    parameters:
      - $ref: '#/components/parameters/aenderungId'
    patch:
      tags:
        - GesuchTranche
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Kommentar'
      responses:
        '200':
          description: 'Aenderung wurde erflogreich abgelehnt'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GesuchTranche'
        '400':
          description: Falsche Tranche abgelehnt
        '404':
          description: Die Aenderung gibt es nicht
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: aenderungAblehnen
  '/gesuchtranche/{aenderungId}/aenderung/delete':
    parameters:
      - $ref: '#/components/parameters/aenderungId'
    delete:
      tags:
        - GesuchTranche
      responses:
        '200':
          description: Geloescht
        '400':
          description: Tranche nicht gefunden
        '404':
          description: Tranche nicht gefunden
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: deleteAenderung
  /bildungskategorie:
    get:
      tags:
        - Bildungskategorie
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bildungskategorie'
          description: Returns all Bildungskategorien
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getBildungskategorien
      summary: Gets all Bildungskategorien
  /plz:
    get:
      tags:
        - Plz
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/plz'
          description: Returns all plzs
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getPlz
      summary: Gets all PLZs
  /notifications:
    get:
      tags:
        - Notification
      responses:
        '200':
          description: Returns all Notifications for the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getNotificationsForCurrentUser
      summary: Gets all notifications for the User
  /buchhaltung/{gesuchId}:
    parameters:
      - $ref: '#/components/parameters/gesuchId'
    get:
      tags:
        - Buchhaltung
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuchhaltungEntry'
          description: Returns all buchhaltungsentrys of a Fall with the given gesuchId
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: getBuchhaltungEntrys
      summary: Gets all buchhaltungsentrys
    post:
      tags:
        - Buchhaltung
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuchhaltungSaldokorrektur'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuchhaltungEntry'
          description: Create a buchhaltungsentry from a saldokorrektur
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: createBuchhaltungSaldokorrektur
      summary: Create a buchhaltungsentry from a saldokorrektur
components:
  schemas:
    WelcomeMail:
      type: object
      required:
        - name
        - vorname
        - email
        - redirectUri
      properties:
        name:
          type: string
        vorname:
          type: string
        email:
          type: string
        redirectUri:
          type: string
    CustomDokumentTyp:
      type: object
      required:
        - id
        - type
        - description
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        type:
          type: string
        description:
          type: string
    CustomDokumentTypCreate:
      type: object
      required:
        - type
        - description
        - trancheId
      properties:
        type:
          type: string
        description:
          type: string
        trancheId:
          $ref: '#/components/schemas/UUID'
    Anrede:
      enum:
        - HERR
        - FRAU
      type: string
    AusbildungsPensum:
      enum:
        - VOLLZEIT
        - TEILZEIT
      type: string
    DokumentTyp:
      enum:
        - AUSBILDUNG_BESTAETIGUNG_AUSBILDUNGSSTAETTE
        - PERSON_NIEDERLASSUNGSSTATUS_C
        - PERSON_NIEDERLASSUNGSSTATUS_B
        - PERSON_NIEDERLASSUNGSSTATUS_COMPLETE
        - PERSON_BEGRUENDUNGSSCHREIBEN_ALTER_AUSBILDUNGSBEGIN
        - PERSON_KESB_ERNENNUNG
        - PERSON_MIETVERTRAG
        - PERSON_SOZIALHILFEBUDGET
        - PERSON_TRENNUNG_ODER_UNTERHALTS_BELEG
        - PERSON_AUSWEIS
        - FAMILIENSITUATION_GEBURTSSCHEIN
        - FAMILIENSITUATION_AUFENTHALT_UNBEKANNT_VATER
        - FAMILIENSITUATION_AUFENTHALT_UNBEKANNT_MUTTER
        - FAMILIENSITUATION_TRENNUNGSKONVENTION
        - ELTERN_ERGAENZUNGSLEISTUNGEN_VATER
        - ELTERN_ERGAENZUNGSLEISTUNGEN_MUTTER
        - ELTERN_SOZIALHILFEBUDGET_VATER
        - ELTERN_SOZIALHILFEBUDGET_MUTTER
        - ELTERN_MIETVERTRAG_HYPOTEKARZINSABRECHNUNG_VATER
        - ELTERN_MIETVERTRAG_HYPOTEKARZINSABRECHNUNG_MUTTER
        - ELTERN_MIETVERTRAG_HYPOTEKARZINSABRECHNUNG_FAMILIE
        - GESCHWISTER_BESTAETIGUNG_AUSBILDUNGSSTAETTE
        - KINDER_UNTERHALTSVERTRAG_TRENNUNGSKONVENTION
        - KINDER_ALIMENTENVERORDUNG
        - PARTNER_AUSBILDUNG_LOHNABRECHNUNG
        - PARTNER_BELEG_OV_ABONNEMENT
        - AUSZAHLUNG_ABTRETUNGSERKLAERUNG
        - EK_BELEG_ALIMENTE
        - EK_BELEG_KINDERZULAGEN
        - EK_VERFUEGUNG_GEMEINDE_INSTITUTION
        - EK_BELEG_BEZAHLTE_RENTEN
        - EK_VERFUEGUNG_ERGAENZUNGSLEISTUNGEN
        - EK_ENTSCHEID_ERGAENZUNGSLEISTUNGEN_EO
        - EK_BELEG_OV_ABONNEMENT
        - EK_MIETVERTRAG
        - EK_BELEG_BETREUUNGSKOSTEN_KINDER
        - EK_LOHNABRECHNUNG
        - EK_VERDIENST
        - EK_VERMOEGEN
        - DARLEHEN_BETREIBUNGSREGISTERAUSZUG
        - DARLEHEN_AUFSTELLUNG_KOSTEN_ELTERN
        - DARLEHEN_KOPIE_SCHULGELDRECHNUNG
        - DARLEHEN_BELEGE_ANSCHAFFUNGEN
        - STEUERERKLAERUNG_AUSBILDUNGSBEITRAEGE_VATER
        - STEUERERKLAERUNG_AUSBILDUNGSBEITRAEGE_MUTTER
        - STEUERERKLAERUNG_AUSBILDUNGSBEITRAEGE_FAMILIE
      type: string
    DokumentArt:
      enum:
        - GESUCH_DOKUMENT
        - UNTERSCHRIFTENBLATT
        - CUSTOM_DOKUMENT
        - BESCHWERDE_ENTSCHEID
      type: string
    UnterschriftenblattDokumentTyp:
      type: string
      enum:
        - GEMEINSAM
        - MUTTER
        - VATER
    ElternAbwesenheitsGrund:
      enum:
        - VERSTORBEN
        - UNBEKANNT
        - WEDER_NOCH
      type: string
    ElternUnbekanntheitsGrund:
      enum:
        - UNBEKANNTER_AUFENTHALTSORT
        - FEHLENDE_ANERKENNUNG
      type: string
    Elternschaftsteilung:
      enum:
        - MUTTER
        - VATER
        - GEMEINSAM
      type: string
    Gesuchstatus:
      enum:
        - ABKLAERUNG_DURCH_RECHSTABTEILUNG
        - VERFUEGT
        - VERSANDBEREIT
        - VERSENDET
        - WARTEN_AUF_UNTERSCHRIFTENBLATT
        - IN_BEARBEITUNG_SB
        - IN_FREIGABE
        - IN_BEARBEITUNG_GS
        - ANSPRUCH_MANUELL_PRUEFEN
        - BEREIT_FUER_BEARBEITUNG
        - EINGEREICHT
        - JURISTISCHE_ABKLAERUNG
        - FEHLENDE_DOKUMENTE
        - NICHT_ANSPRUCHSBERECHTIGT
        - NICHT_BEITRAGSBERECHTIGT
        - KEIN_STIPENDIENANSPRUCH
        - STIPENDIENANSPRUCH
        - GESUCH_ABGELEHNT
        - NEGATIVE_VERFUEGUNG
      type: string
    GetGesucheSBQueryType:
      enum:
        - ALLE_BEARBEITBAR
        - ALLE_BEARBEITBAR_MEINE
        - ALLE_JURISTISCHE_ABKLAERUNG_MEINE
        - ALLE_MEINE
        - ALLE
      type: string
    GetDelegierungSozQueryType:
      enum:
        - ALLE_BEARBEITBAR_MEINE
        - ALLE
      type: string
    GueltigkeitStatus:
      enum:
        - ENTWURF
        - PUBLIZIERT
        - ARCHIVIERT
    LocalDate:
      format: date
      type: string
      example: '2022-03-10'
    Niederlassungsstatus:
      enum:
        - NIEDERLASSUNGSBEWILLIGUNG_C
        - AUFENTHALTSBEWILLIGUNG_B
        - FLUECHTLING
      type: string
    Zivilstand:
      enum:
        - LEDIG
        - VERHEIRATET
        - KONKUBINAT
        - EINGETRAGENE_PARTNERSCHAFT
        - GESCHIEDEN_GERICHTLICH
        - AUFGELOESTE_PARTNERSCHAFT
        - VERWITWET
      type: string
    SteuerdatenTyp:
      enum:
        - FAMILIE
        - VATER
        - MUTTER
      type: string
    Adresse:
      required:
        - land
        - strasse
        - plz
        - ort
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        land:
          $ref: '#/components/schemas/Land'
        coAdresse:
          type: string
        strasse:
          type: string
        hausnummer:
          type: string
        plz:
          type: string
        ort:
          type: string
    DeploymentConfig:
      type: object
      properties:
        environment:
          type: string
        version:
          type: string
        allowedMimeTypes:
          type: array
          items:
            type: string
    GesuchDokument:
      required:
        - id
        - dokumente
        - status
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        dokumentTyp:
          $ref: '#/components/schemas/DokumentTyp'
        customDokumentTyp:
          $ref: '#/components/schemas/CustomDokumentTyp'
        dokumente:
          type: array
          items:
            $ref: '#/components/schemas/Dokument'
        status:
          $ref: '#/components/schemas/Dokumentstatus'
    UnterschriftenblattDokument:
      required:
        - id
        - dokumentTyp
        - dokumente
        - status
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        dokumentTyp:
          $ref: '#/components/schemas/UnterschriftenblattDokumentTyp'
        dokumente:
          type: array
          items:
            $ref: '#/components/schemas/Dokument'
    Dokument:
      required:
        - id
        - filename
        - filepath
        - filesize
        - objectId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        filename:
          type: string
        filepath:
          type: string
        filesize:
          type: string
        timestampErstellt:
          type: string
        objectId:
          type: string
    Fall:
      required:
        - id
        - fallNummer
        - mandant
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        fallNummer:
          type: string
        mandant:
          type: string
    FallWithDelegierung:
      required:
        - id
        - fallNummer
        - mandant
        - delegierung
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        fallNummer:
          type: string
        mandant:
          type: string
        delegierung:
          $ref: '#/components/schemas/Delegierung'
    Gesuchsjahr:
      type: object
      required:
        - id
        - bezeichnungDe
        - bezeichnungFr
        - technischesJahr
        - gueltigkeitStatus
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        bezeichnungDe:
          type: string
        bezeichnungFr:
          type: string
        technischesJahr:
          type: integer
        gueltigkeitStatus:
          $ref: '#/components/schemas/GueltigkeitStatus'
    GesuchsjahrCreate:
      type: object
      required:
        - bezeichnungDe
        - bezeichnungFr
        - technischesJahr
      properties:
        bezeichnungDe:
          type: string
        bezeichnungFr:
          type: string
        technischesJahr:
          type: integer
    GesuchsjahrUpdate:
      type: object
      properties:
        bezeichnungDe:
          type: string
        bezeichnungFr:
          type: string
        technischesJahr:
          type: integer
    DokumentCreate:
      required:
        - fileUpload
      type: object
      properties:
        fileUpload:
          $ref: '#/components/schemas/FileUpload'
    UnterschriftenblattCreate:
      required:
        - fileUpload
      type: object
      properties:
        fileUpload:
          $ref: '#/components/schemas/FileUpload'
    UUID:
      format: uuid
      type: string
    LebenslaufItemUpdate:
      title: Root Type for Lebenslauf
      required:
        - bis
        - von
        - wohnsitz
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        bildungsart:
          $ref: '#/components/schemas/LebenslaufAusbildungsArt'
          description: Required wenn taetigkeitsart = null
        von:
          description: Datum im Format mm.YYYY
          type: string
        bis:
          description: Datum im Format mm.YYYY
          type: string
        wohnsitz:
          $ref: '#/components/schemas/WohnsitzKanton'
        ausbildungAbgeschlossen:
          type: boolean
        berufsbezeichnung:
          description: >-
            Requierd wenn bildungsart = 'EIDGENOESSISCHES_BERUFSATTEST' oder
            'EIDGENOESSISCHES_FAEHIGKEITSZEUGNIS'
          type: string
        fachrichtung:
          description: >-
            Required wenn bildungsart = "BACHELOR_HOCHSCHULE_UNI" oder "BACHELOR_FACHHOCHSCHULE"
            oder "MASTER"
          type: string
        titelDesAbschlusses:
          description: Required wenn bildungsart = "ANDERER_AUSBILDUNGSABSCHLUSS"
          type: string
        taetigkeitsart:
          $ref: '#/components/schemas/Taetigkeitsart'
          description: Required wenn bildungsart = null
        taetigkeitsBeschreibung:
          description: Required wenn taetigkeitsart != null
          type: string
    FamiliensituationUpdate:
      required:
        - elternVerheiratetZusammen
      type: object
      properties:
        elternVerheiratetZusammen:
          type: boolean
        elternteilUnbekanntVerstorben:
          type: boolean
        gerichtlicheAlimentenregelung:
          type: boolean
        mutterUnbekanntVerstorben:
          $ref: '#/components/schemas/ElternAbwesenheitsGrund'
        mutterUnbekanntGrund:
          $ref: '#/components/schemas/ElternUnbekanntheitsGrund'
        mutterWiederverheiratet:
          type: boolean
        vaterUnbekanntVerstorben:
          $ref: '#/components/schemas/ElternAbwesenheitsGrund'
        vaterUnbekanntGrund:
          $ref: '#/components/schemas/ElternUnbekanntheitsGrund'
        vaterWiederverheiratet:
          type: boolean
        werZahltAlimente:
          $ref: '#/components/schemas/Elternschaftsteilung'
          description: Required nur wenn gerichtlicheAlimentenregelung = true
    Ausbildungssituation:
      enum:
        - VORSCHULPFLICHTIG
        - SCHULPFLICHTIG
        - IN_AUSBILDUNG
        - KEINE
      type: string
    GeschwisterUpdate:
      title: Root Type for Geschwister
      required:
        - wohnsitz
        - vorname
        - nachname
        - geburtsdatum
        - ausbildungssituation
      type: object
      properties:
        vorname:
          type: string
        geburtsdatum:
          format: date
          description: dd.MM.yyyy
          type: string
        wohnsitz:
          $ref: '#/components/schemas/Wohnsitz'
        ausbildungssituation:
          $ref: '#/components/schemas/Ausbildungssituation'
        id:
          $ref: '#/components/schemas/UUID'
        wohnsitzAnteilMutter:
          description: Required wenn Wohnsitz.MUTTER_VATER.
          type: number
        wohnsitzAnteilVater:
          description: Required wenn Wohnsitz.MUTTER_VATER.
          type: number
        nachname:
          type: string
    PartnerUpdate:
      required:
        - adresse
        - nachname
        - vorname
        - geburtsdatum
        - sozialversicherungsnummer
      type: object
      properties:
        adresse:
          $ref: '#/components/schemas/Adresse'
        vorname:
          type: string
        geburtsdatum:
          $ref: '#/components/schemas/LocalDate'
          description: dd.MM.yyyy
        sozialversicherungsnummer:
          type: string
        nachname:
          type: string
        ausbildungMitEinkommenOderErwerbstaetig:
          type: boolean
        jahreseinkommen:
          description: Required falls ausbildungMitEinkommenOderErwerbstaetig true ist
          type: integer
        fahrkosten:
          description: Required falls ausbildungMitEinkommenOderErwerbstaetig true ist
          type: integer
        verpflegungskosten:
          description: Required falls ausbildungMitEinkommenOderErwerbstaetig true ist
          type: integer
    KindUpdate:
      title: Root Type for Geschwister
      required:
        - wohnsitz
        - vorname
        - nachname
        - geburtsdatum
        - ausbildungssituation
        - wohnsitzAnteilPia
      type: object
      properties:
        vorname:
          type: string
        geburtsdatum:
          format: date
          description: dd.MM.yyyy
          type: string
        ausbildungssituation:
          $ref: '#/components/schemas/Ausbildungssituation'
        id:
          $ref: '#/components/schemas/UUID'
        wohnsitzAnteilPia:
          type: integer
        nachname:
          type: string
        erhalteneAlimentebeitraege:
          type: integer
    Auszahlung:
      title: Root Type for Auszahlung
      type: object
      allOf:
        - type: object
        - $ref: '#/components/schemas/AuszahlungUpdate'
    AuszahlungUpdate:
      title: Root Type for Auszahlung
      required:
        - adresse
        - iban
        - nachname
        - vorname
        - kontoinhaber
      type: object
      properties:
        vorname:
          type: string
        adresse:
          $ref: '#/components/schemas/Adresse'
        iban:
          type: string
        nachname:
          type: string
        kontoinhaber:
          $ref: '#/components/schemas/Kontoinhaber'
    BeschwerdeEntscheidCreate:
      required:
        - kommentar
        - beschwerdeErfolgreich
        - fileUpload
      type: object
      properties:
        kommentar:
          type: string
        beschwerdeErfolgreich:
          type: boolean
        fileUpload:
          $ref: '#/components/schemas/FileUpload'
    BeschwerdeEntscheid:
      required:
        - kommentar
        - beschwerdeErfolgreich
        - dokumente
      type: object
      properties:
        kommentar:
          type: string
        beschwerdeErfolgreich:
          type: boolean
        dokumente:
          type: array
          items:
            $ref: '#/components/schemas/Dokument'
    Gesuch:
      required:
        - fallId
        - fallNummer
        - ausbildungId
        - gesuchsperiode
        - gesuchStatus
        - gesuchNummer
        - id
        - aenderungsdatum
        - gesuchTrancheToWorkWith
        - verfuegt
      type: object
      properties:
        fallId:
          $ref: '#/components/schemas/UUID'
        fallNummer:
          type: string
        ausbildungId:
          $ref: '#/components/schemas/UUID'
        gesuchsperiode:
          $ref: '#/components/schemas/Gesuchsperiode'
        gesuchStatus:
          $ref: '#/components/schemas/Gesuchstatus'
        gesuchNummer:
          type: string
        id:
          $ref: '#/components/schemas/UUID'
        aenderungsdatum:
          $ref: '#/components/schemas/LocalDate'
          description: Datum wann das Gesuch zu letzt geändert wurde
        bearbeiter:
          description: Zuständiger Sachbearbeiter des Gesuchs
          type: string
        gesuchTrancheToWorkWith:
          $ref: '#/components/schemas/GesuchTranche'
        einreichedatum:
          format: date
          type: string
        delegierung:
          $ref: '#/components/schemas/DelegierungSlim'
        nachfristDokumente:
          $ref: '#/components/schemas/LocalDate'
        verfuegt:
          type: boolean
    PersoenlicheAngaben:
      required:
        - anrede
        - nachname
        - vorname
        - geburtsdatum
        - adresse
      type: object
      properties:
        anrede:
          $ref: '#/components/schemas/Anrede'
        nachname:
          type: string
        vorname:
          type: string
        geburtsdatum:
          $ref: '#/components/schemas/LocalDate'
        adresse:
          $ref: '#/components/schemas/Adresse'
    Delegierung:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        sozialdienst:
          $ref: '#/components/schemas/SozialdienstSlim'
        delegierterMitarbeiter:
          $ref: '#/components/schemas/SozialdienstBenutzer'
        delegierungAngenommen:
          type: boolean
        persoenlicheAngaben:
          $ref: '#/components/schemas/PersoenlicheAngaben'
    DelegierungSlim:
      type: object
      properties:
        sozialdienst:
          $ref: '#/components/schemas/SozialdienstSlim'
    DelegierungCreate:
      required:
        - anrede
        - nachname
        - vorname
        - geburtsdatum
        - adresse
      type: object
      properties:
        anrede:
          $ref: '#/components/schemas/Anrede'
        nachname:
          type: string
        vorname:
          type: string
        geburtsdatum:
          $ref: '#/components/schemas/LocalDate'
        adresse:
          $ref: '#/components/schemas/Adresse'
    DelegierterMitarbeiterAendern:
      required:
        - mitarbeiterId
      type: object
      properties:
        mitarbeiterId:
          $ref: '#/components/schemas/UUID'
    GesuchInfo:
      required:
        - id
        - gesuchNummer
        - gesuchStatus
        - startDate
        - endDate
        - canGetBerechnung
        - beschwerdeHaengig
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        gesuchNummer:
          type: string
        gesuchStatus:
          $ref: '#/components/schemas/Gesuchstatus'
        startDate:
          $ref: '#/components/schemas/LocalDate'
        endDate:
          $ref: '#/components/schemas/LocalDate'
        canGetBerechnung:
          type: boolean
        beschwerdeHaengig:
          type: boolean
    FallDashboardItem:
      required:
        - fall
        - ausbildungDashboardItems
        - notifications
      type: object
      properties:
        fall:
          $ref: '#/components/schemas/Fall'
        ausbildungDashboardItems:
          type: array
          items:
            $ref: '#/components/schemas/AusbildungDashboardItem'
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        delegierung:
          $ref: '#/components/schemas/DelegierungSlim'
    AusbildungDashboardItem:
      type: object
      properties:
        gesuchs:
          type: array
          items:
            $ref: '#/components/schemas/GesuchDashboardItem'
      allOf:
        - $ref: '#/components/schemas/Ausbildung'
    GesuchDashboardItem:
      required:
        - id
        - currentTrancheId
        - gesuchsperiode
        - gesuchStatus
        - startDate
        - endDate
      type: object
      properties:
        nachfristDokumente:
          $ref: '#/components/schemas/LocalDate'
        gesuchsperiode:
          $ref: '#/components/schemas/Gesuchsperiode'
        gesuchStatus:
          $ref: '#/components/schemas/Gesuchstatus'
        id:
          $ref: '#/components/schemas/UUID'
        currentTrancheId:
          $ref: '#/components/schemas/UUID'
        offeneAenderung:
          $ref: '#/components/schemas/GesuchTrancheSlim'
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        missingDocuments:
          required:
            - trancheId
            - count
          type: object
          properties:
            trancheId:
              $ref: '#/components/schemas/UUID'
            count:
              type: integer
    GesuchWithChanges:
      allOf:
        - $ref: '#/components/schemas/Gesuch'
      description: '1 or 2 Aenderungstranche in relation to another Tranche'
      properties:
        changes:
          type: array
          items:
            $ref: '#/components/schemas/GesuchTranche'
        isInitial:
          type: boolean
    GesuchCreate:
      required:
        - ausbildungId
      type: object
      properties:
        ausbildungId:
          $ref: '#/components/schemas/UUID'
    GesuchUpdate:
      required:
        - gesuchTrancheToWorkWith
      type: object
      properties:
        nachfristDokumente:
          type: string
        gesuchTrancheToWorkWith:
          $ref: '#/components/schemas/GesuchTrancheUpdate'
    LandEuEfta:
      title: Is the country part of eu/efta
      type: object
      required:
        - land
        - isEuEfta
      properties:
        land:
          $ref: '#/components/schemas/Land'
        isEuEfta:
          type: boolean
    Land:
      enum:
        - 'CH'
        - 'AF'
        - 'EG'
        - 'AL'
        - 'DZ'
        - 'AD'
        - 'AO'
        - 'AG'
        - 'GQ'
        - 'AR'
        - 'AM'
        - 'AZ'
        - 'ET'
        - 'AU'
        - 'BS'
        - 'BH'
        - 'BD'
        - 'BB'
        - 'BY'
        - 'BE'
        - 'BZ'
        - 'BJ'
        - 'BT'
        - 'BO'
        - 'BA'
        - 'BR'
        - 'BN'
        - 'BG'
        - 'BF'
        - 'BI'
        - 'CV'
        - 'CL'
        - 'CN'
        - 'CK'
        - 'CR'
        - 'CI'
        - 'DK'
        - 'DE'
        - 'DM'
        - 'DO'
        - 'DJ'
        - 'EC'
        - 'SV'
        - 'ER'
        - 'EE'
        - 'SZ'
        - 'FJ'
        - 'FI'
        - 'FR'
        - 'GA'
        - 'GM'
        - 'GE'
        - 'GH'
        - 'GD'
        - 'GR'
        - 'GT'
        - 'GN'
        - 'GW'
        - 'GF'
        - 'HT'
        - 'VA'
        - 'HN'
        - 'IN'
        - 'ID'
        - 'IQ'
        - 'IR'
        - 'IE'
        - 'IS'
        - 'IL'
        - 'IT'
        - 'JM'
        - 'JP'
        - 'YE'
        - 'JO'
        - 'KH'
        - 'CM'
        - 'CA'
        - 'KZ'
        - 'QA'
        - 'KE'
        - 'KG'
        - 'KI'
        - 'CO'
        - 'KM'
        - 'CG'
        - 'CD'
        - 'KR'
        - 'KP'
        - 'XK'
        - 'HR'
        - 'CU'
        - 'KW'
        - 'LA'
        - 'LS'
        - 'LV'
        - 'LB'
        - 'LR'
        - 'LY'
        - 'LI'
        - 'LT'
        - 'LU'
        - 'MG'
        - 'MW'
        - 'MY'
        - 'MV'
        - 'ML'
        - 'MT'
        - 'MA'
        - 'MH'
        - 'MR'
        - 'MU'
        - 'MX'
        - 'FM'
        - 'MO'
        - 'MC'
        - 'MN'
        - 'ME'
        - 'MZ'
        - 'MM'
        - 'NA'
        - 'NR'
        - 'NP'
        - 'NZ'
        - 'NI'
        - 'NL'
        - 'NE'
        - 'NG'
        - 'NU'
        - 'MK'
        - 'NO'
        - 'OM'
        - 'AT'
        - 'PK'
        - 'PW'
        - 'PA'
        - 'PG'
        - 'PY'
        - 'PE'
        - 'PH'
        - 'PL'
        - 'PT'
        - 'RW'
        - 'RO'
        - 'RU'
        - 'SB'
        - 'ZM'
        - 'WS'
        - 'SM'
        - 'ST'
        - 'SA'
        - 'SE'
        - 'SN'
        - 'RS'
        - 'SC'
        - 'SL'
        - 'ZW'
        - 'SG'
        - 'SK'
        - 'SI'
        - 'SO'
        - 'ES'
        - 'LK'
        - 'KN'
        - 'LC'
        - 'VC'
        - 'ZA'
        - 'SD'
        - 'SS'
        - 'SR'
        - 'SY'
        - 'TJ'
        - 'TZ'
        - 'TH'
        - 'TL'
        - 'TG'
        - 'TO'
        - 'TT'
        - 'TD'
        - 'CZ'
        - 'TN'
        - 'TR'
        - 'TM'
        - 'TV'
        - 'UG'
        - 'UA'
        - 'HU'
        - 'UY'
        - 'UZ'
        - 'VU'
        - 'VE'
        - 'AE'
        - 'US'
        - 'GB'
        - 'VN'
        - 'CF'
        - 'CY'
        - 'STATELESS'
      type: string
    Sprache:
      enum:
        - DEUTSCH
        - FRANZOESISCH
      type: string
    WohnsitzKanton:
      enum:
        - AG
        - AI
        - AR
        - BL
        - BS
        - BE
        - FR
        - GE
        - GL
        - GR
        - JU
        - LU
        - NE
        - NW
        - OW
        - SG
        - SH
        - SZ
        - SO
        - TI
        - TG
        - UR
        - VD
        - VS
        - ZG
        - ZH
        - AUSLAND
      type: string
    Familiensituation:
      type: object
      allOf:
        - type: object
        - $ref: '#/components/schemas/FamiliensituationUpdate'
    Taetigkeitsart:
      enum:
        - ERWERBSTAETIGKEIT
        - ANDERE_TAETIGKEIT
        - BETREUUNG_FAMILIENMITGLIEDER_EIGENER_HAUSHALT
      type: string
    Bildungsstufe:
      enum:
        - SEKUNDAR_2
        - TERTIAER
    Bildungskategorie:
      type: object
      required:
        - id
        - bezeichnungDe
        - bezeichnungFr
        - bildungsstufe
        - bfs
      properties:
        bezeichnungDe:
          type: string
        bezeichnungFr:
          type: string
        bildungsstufe:
          $ref: '#/components/schemas/Bildungsstufe'
        bfs:
          type: integer
        id:
          $ref: '#/components/schemas/UUID'
    LebenslaufAusbildungsArt:
      enum:
        - BERUFSVORBEREITENDES_SCHULJAHR
        - VORLEHRE
        - GESTALTERISCHE_VORKURSE
        - EIDGENOESSISCHES_BERUFSATTEST
        - EIDGENOESSISCHES_FAEHIGKEITSZEUGNIS
        - BERUFSMATURITAET_NACH_LEHRE
        - FACHMATURITAET
        - GYMNASIALE_MATURITAETSSCHULEN
        - EIDGENOESSISCHES_DIPLOM
        - EIDGENOESSISCHER_FACHAUSWEIS
        - DIPLOM_HOEHERE_FACHSCHULE
        - BACHELOR_HOCHSCHULE_UNI
        - BACHELOR_FACHHOCHSCHULE
        - MASTER
        - ANDERER_BILDUNGSABSCHLUSS
      type: string
    PersonInAusbildung:
      type: object
      allOf:
        - required:
            - adresse.id
          type: object
        - $ref: '#/components/schemas/PersonInAusbildungUpdate'
    ElternTyp:
      enum:
        - VATER
        - MUTTER
      type: string
    ElternUpdate:
      title: Root Type for Eltern
      required:
        - adresse
        - ausweisbFluechtling
        - geburtsdatum
        - identischerZivilrechtlicherWohnsitz
        - nachname
        - telefonnummer
        - vorname
        - elternTyp
        - sozialhilfebeitraege
      type: object
      properties:
        vorname:
          type: string
        adresse:
          $ref: '#/components/schemas/Adresse'
        identischerZivilrechtlicherWohnsitz:
          type: boolean
        identischerZivilrechtlicherWohnsitzOrt:
          description: Required wenn identischerZivilrechtlicherWohnsitz = false
          type: string
        identischerZivilrechtlicherWohnsitzPLZ:
          description: Required wenn identischerZivilrechtlicherWohnsitz = false
          type: string
        telefonnummer:
          type: string
        sozialversicherungsnummer:
          type: string
        geburtsdatum:
          format: date
          description: dd.MM.yyyy
          type: string
        ausweisbFluechtling:
          type: boolean
        id:
          $ref: '#/components/schemas/UUID'
        elternTyp:
          $ref: '#/components/schemas/ElternTyp'
        nachname:
          type: string
        ergaenzungsleistungen:
          description: |
            'Falls steuerdatenTyp = Familie: Ergaenzungsleistungen Vater'
            'Falls steuerdatenTyp != Famile: Ergaenzungsleistungen steuerdatenTyp'
          type: integer
        sozialhilfebeitraege:
          type: boolean
        wohnkosten:
          description: 'Die Wohnkosten vom Elternteil, werden gespiegelt auf den anderen falls Sie zusammen wohnen'
          type: integer
    Eltern:
      title: Root Type for Eltern
      type: object
      allOf:
        - $ref: '#/components/schemas/ElternUpdate'
    Geschwister:
      title: Root Type for Geschwister
      type: object
      allOf:
        - $ref: '#/components/schemas/GeschwisterUpdate'
    Kind:
      title: Root Type for Geschwister
      type: object
      allOf:
        - $ref: '#/components/schemas/KindUpdate'
    LebenslaufItem:
      title: Root Type for Lebenslauf
      type: object
      allOf:
        - $ref: '#/components/schemas/LebenslaufItemUpdate'
    Partner:
      type: object
      allOf:
        - type: object
        - $ref: '#/components/schemas/PartnerUpdate'
    Kontoinhaber:
      enum:
        - GESUCHSTELLER
        - VATER
        - MUTTER
        - SOZIALDIENST_INSTITUTION
        - ANDERE
      type: string
    GesuchFormular:
      required:
        - ausbildung
      type: object
      properties:
        ausbildung:
          $ref: '#/components/schemas/Ausbildung'
        personInAusbildung:
          $ref: '#/components/schemas/PersonInAusbildung'
        familiensituation:
          $ref: '#/components/schemas/Familiensituation'
        partner:
          $ref: '#/components/schemas/Partner'
        auszahlung:
          $ref: '#/components/schemas/Auszahlung'
        elterns:
          type: array
          items:
            $ref: '#/components/schemas/Eltern'
        geschwisters:
          type: array
          items:
            $ref: '#/components/schemas/Geschwister'
        lebenslaufItems:
          type: array
          items:
            $ref: '#/components/schemas/LebenslaufItem'
        kinds:
          type: array
          items:
            $ref: '#/components/schemas/Kind'
        einnahmenKosten:
          $ref: '#/components/schemas/EinnahmenKosten'
        steuererklaerung:
          type: array
          items:
            $ref: '#/components/schemas/SteuererklaerungUpdate'
        steuerdatenTabs:
          type: array
          items:
            $ref: '#/components/schemas/SteuerdatenTyp'
        darlehen:
          $ref: '#/components/schemas/Darlehen'
    PersonInAusbildungUpdate:
      required:
        - adresse
        - sozialversicherungsnummer
        - nachname
        - vorname
        - anrede
        - identischerZivilrechtlicherWohnsitz
        - email
        - telefonnummer
        - geburtsdatum
        - nationalitaet
        - wohnsitz
        - sozialhilfebeitraege
        - korrespondenzSprache
      type: object
      properties:
        adresse:
          $ref: '#/components/schemas/Adresse'
        sozialversicherungsnummer:
          type: string
        vorname:
          type: string
        anrede:
          $ref: '#/components/schemas/Anrede'
        identischerZivilrechtlicherWohnsitz:
          type: boolean
        email:
          type: string
        telefonnummer:
          type: string
        geburtsdatum:
          $ref: '#/components/schemas/LocalDate'
        nationalitaet:
          $ref: '#/components/schemas/Land'
        heimatort:
          description: Required nur wenn Land = CH
          type: string
        niederlassungsstatus:
          $ref: '#/components/schemas/Niederlassungsstatus'
          description: Required wenn Nationalitaet != CH
        einreisedatum:
          description: Visible nur wenn niederlassungsstatus B
          $ref: '#/components/schemas/LocalDate'
        zivilstand:
          $ref: '#/components/schemas/Zivilstand'
        wohnsitz:
          $ref: '#/components/schemas/Wohnsitz'
        wohnsitzAnteilMutter:
          description: Required wenn Wohnsitz.MUTTER_VATER.
          type: number
        wohnsitzAnteilVater:
          description: Required wenn Wohnsitz.MUTTER_VATER.
          type: number
        sozialhilfebeitraege:
          type: boolean
        vormundschaft:
          description: Required nur wenn Land = CH
          type: boolean
        nachname:
          type: string
        identischerZivilrechtlicherWohnsitzOrt:
          description: Required wenn identischerZivilrechtlicherWohnsitz = false
          type: string
        identischerZivilrechtlicherWohnsitzPLZ:
          description: Required wenn identischerZivilrechtlicherWohnsitz = false
          type: string
        korrespondenzSprache:
          $ref: '#/components/schemas/Sprache'
        zustaendigerKanton:
          $ref: '#/components/schemas/ZustaendigerKanton'
        zustaendigeKESB:
          $ref: '#/components/schemas/ZustaendigeKESB'
    Benutzer:
      type: object
      allOf:
        - required:
            - id
          type: object
          properties:
            id:
              $ref: '#/components/schemas/UUID'
            sachbearbeiterZuordnungStammdaten:
              $ref: '#/components/schemas/SachbearbeiterZuordnungStammdaten'
        - $ref: '#/components/schemas/BenutzerUpdate'
    GesuchFormularUpdate:
      required: []
      type: object
      properties:
        # ausbildung:
        #   $ref: '#/components/schemas/AusbildungUpdate'
        personInAusbildung:
          $ref: '#/components/schemas/PersonInAusbildungUpdate'
        familiensituation:
          $ref: '#/components/schemas/FamiliensituationUpdate'
        partner:
          $ref: '#/components/schemas/PartnerUpdate'
        auszahlung:
          $ref: '#/components/schemas/AuszahlungUpdate'
        elterns:
          type: array
          items:
            $ref: '#/components/schemas/ElternUpdate'
        geschwisters:
          type: array
          items:
            $ref: '#/components/schemas/GeschwisterUpdate'
        lebenslaufItems:
          type: array
          items:
            $ref: '#/components/schemas/LebenslaufItemUpdate'
        kinds:
          type: array
          items:
            $ref: '#/components/schemas/KindUpdate'
        einnahmenKosten:
          $ref: '#/components/schemas/EinnahmenKostenUpdate'
        darlehen:
          $ref: '#/components/schemas/Darlehen'
        steuererklaerung:
          type: array
          items:
            $ref: '#/components/schemas/SteuererklaerungUpdate'
    FileUpload:
      format: binary
      type: string
    Wohnsitz:
      enum:
        - FAMILIE
        - MUTTER_VATER
        - EIGENER_HAUSHALT
      type: string
    ValidationReport:
      required:
        - validationErrors
        - validationWarnings
      type: object
      properties:
        validationErrors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
        validationWarnings:
          type: array
          items:
            $ref: '#/components/schemas/ValidationWarning'
        hasDocuments:
          description: 'Whether or not the Gesuch validated has one or more GesuchDokument attached'
          type: boolean
    ValidationMessage:
      required:
        - message
        - messageTemplate
      type: object
      properties:
        propertyPath:
          type: string
        messageTemplate:
          type: string
        message:
          type: string
    ValidationWarning:
      allOf:
        - $ref: '#/components/schemas/ValidationMessage'
    ValidationError:
      allOf:
        - $ref: '#/components/schemas/ValidationMessage'
    TenantInfo:
      title: Root Type for TenantInfo
      description: Client Application Info about a `Tenant`
      required:
        - clientAuth
        - identifier
      type: object
      properties:
        identifier:
          type: string
        clientAuth:
          $ref: '#/components/schemas/TenantAuthConfig'
    BenutzerUpdate:
      required:
        - nachname
        - vorname
      type: object
      properties:
        vorname:
          type: string
        nachname:
          type: string
        benutzereinstellungen:
          $ref: '#/components/schemas/BenutzereinstellungenUpdate'
    TenantAuthConfig:
      title: Root Type for TenantAuthConfig
      required:
        - authServerUrl
        - realm
      type: object
      properties:
        authServerUrl:
          type: string
        realm:
          type: string
      example:
        authServerUrl: some text
        realm: some text
    EinnahmenKostenUpdate:
      required:
        - nettoerwerbseinkommen
        - fahrkosten
        - verdienstRealisiert
      type: object
      properties:
        nettoerwerbseinkommen:
          type: integer
        alimente:
          description: Required nur wenn mind. ein Elternteil Alimente zahlt
          type: integer
        zulagen:
          description: Required nur wenn mind. ein Kind gibt
          type: integer
        renten:
          description: Required nur wenn mind. ein Elternteil gestorben ist
          type: integer
        eoLeistungen:
          type: integer
        ergaenzungsleistungen:
          type: integer
        beitraege:
          type: integer
        ausbildungskosten:
          description: The cost for the education calculated over the whole year
          type: integer
        fahrkosten:
          type: integer
        wohnkosten:
          type: integer
        wgWohnend:
          description: Required nur wenn Person eigener Haushalt hat
          type: boolean
        verdienstRealisiert:
          type: boolean
        auswaertigeMittagessenProWoche:
          description: Required nur wenn die Person keinen eigenen Haushalt führt
          type: integer
        betreuungskostenKinder:
          description: Betreuungskosten eigener Kinder
          type: integer
        veranlagungsCode:
          description: 2-Stelliger Veranlagungscode (0-99)
          type: integer
          minimum: 0
          maximum: 99
          default: 0
        steuerjahr:
          description: Aktuelles oder ein vergangenes Steuerjahr als 4-stellige Zahl. Default ist Vorjahr des Gesuchsjahrs
          type: integer
          minimum: 0
          maximum: 99999
        vermoegen:
          description: Ganze Zahl, ohne Kommastellen
          type: integer
          minimum: 0
          maximum: 2147483647
        steuernKantonGemeinde:
          description: transient and calculated readonly field
          type: integer
          minimum: 0
          maximum: 2147483647
    EinnahmenKosten:
      type: object
      allOf:
        - type: object
        - $ref: '#/components/schemas/EinnahmenKostenUpdate'
    Darlehen:
      type: object
      required:
        - willDarlehen
      properties:
        willDarlehen:
          description: Required wenn volljährig, sonst nicht moeglich!
          type: boolean
        betragDarlehen:
          description: Required wenn willDarlehen = true
          type: integer
          minimum: 0
        betragBezogenKanton:
          description: Required wenn willDarlehen = true
          type: integer
          minimum: 0
        schulden:
          description: Required wenn willDarlehen = true
          type: integer
          minimum: 0
        anzahlBetreibungen:
          description: Required wenn willDarlehen = true - mit Fileupload
          type: integer
          minimum: 0
        grundNichtBerechtigt:
          description: Keine Stipendienberechtigung, auf Grund der tatsächlichen Kosten können die Mittel der Eltern jedoch nicht einbezogen werden - Falls Ja mit Fileupload
          type: boolean
        grundAusbildungZwoelfJahre:
          description: Keine Stipendienberechtigung wegen Überschreitens der Ausbildungsdauer von 12 Jahren.
          type: boolean
        grundHoheGebuehren:
          description: Falls ja mit Fileupload
          type: boolean
        grundAnschaffungenFuerAusbildung:
          description: Falls ja mit Fileupload
          type: boolean
        grundZweitausbildung:
          type: boolean
    AusbildungBase:
      required:
        - fallId
        - fachrichtung
        - ausbildungBegin
        - ausbildungEnd
        - pensum
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        fallId:
          $ref: '#/components/schemas/UUID'
        fachrichtung:
          type: string
        ausbildungNichtGefunden:
          type: boolean
        ausbildungBegin:
          description: Datum im Format mm.YYYY
          type: string
        ausbildungEnd:
          description: Datum im Format mm.YYYY
          type: string
        besuchtBMS:
          description: Required bei Ausbildungskategorien 4 oder 5. Kann nur dann auf true gesetzt werden.
          type: boolean
        pensum:
          $ref: '#/components/schemas/AusbildungsPensum'
        alternativeAusbildungsstaette:
          description: Required wenn andere ausbildungNichtGefunden = true
          type: string
        alternativeAusbildungsgang:
          description: Required wenn andere ausbildungNichtGefunden = true
          type: string
        ausbildungsort:
          description: Not required if isAusbildungAusland = true
          type: string
        isAusbildungAusland:
          type: boolean
    Ausbildung:
      required:
        - status
        - editable
      type: object
      properties:
        status:
          $ref: '#/components/schemas/AusbildungsStatus'
        ausbildungsgang:
          $ref: '#/components/schemas/Ausbildungsgang'
        editable:
          type: boolean
      allOf:
        - $ref: '#/components/schemas/AusbildungBase'
    AusbildungUpdate:
      type: object
      properties:
        ausbildungsgangId:
          $ref: '#/components/schemas/UUID'
          description: |
            Required wenn andere ausbildungNichtGefunden = false
      allOf:
        - $ref: '#/components/schemas/AusbildungBase'
    Ausbildungsstaette:
      anyOf:
        - required: []
          type: object
          properties:
            ausbildungsgaenge:
              type: array
              items:
                $ref: '#/components/schemas/Ausbildungsgang'
        - $ref: '#/components/schemas/AusbildungsstaetteUpdate'
      type: object
    AusbildungsgangUpdate:
      required:
        - bezeichnungDe
        - bezeichnungFr
        - bildungskategorieId
        - ausbildungsstaetteId
      type: object
      properties:
        bezeichnungDe:
          type: string
        bezeichnungFr:
          type: string
        bildungskategorieId:
          $ref: '#/components/schemas/UUID'
        ausbildungsstaetteId:
          $ref: '#/components/schemas/UUID'
    AusbildungsgangCreate:
      required:
        - bezeichnungDe
        - bezeichnungFr
        - bildungskategorieId
        - ausbildungsstaette
      type: object
      properties:
        bezeichnungDe:
          type: string
        bezeichnungFr:
          type: string
        bildungskategorieId:
          $ref: '#/components/schemas/UUID'
        ausbildungsstaetteId:
          $ref: '#/components/schemas/UUID'
    Ausbildungsort:
      type: string
    GesuchsperiodeWithDaten:
      required:
        - id
        - gueltigkeitStatus
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        gueltigkeitStatus:
          $ref: '#/components/schemas/GueltigkeitStatus'
      allOf:
        - $ref: '#/components/schemas/GesuchsperiodeDaten'
    NullableGesuchDokument:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/GesuchDokument'
    NullableGesuchsperiodeWithDaten:
      properties:
        value:
          $ref: '#/components/schemas/GesuchsperiodeWithDaten'
    Gesuchsperiode:
      required:
        - id
        - bezeichnungDe
        - bezeichnungFr
        - gesuchsperiodeStart
        - gesuchsperiodeStopp
        - aufschaltterminStart
        - aufschaltterminStopp
        - einreichefristNormal
        - einreichefristReduziert
        - gueltigkeitStatus
        - gesuchsjahr
        - ausbKosten_SekII
        - ausbKosten_Tertiaer
        - fristNachreichenDokumente
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        bezeichnungDe:
          type: string
        bezeichnungFr:
          type: string
        gueltigkeitStatus:
          $ref: '#/components/schemas/GueltigkeitStatus'
        gesuchsperiodeStart:
          $ref: '#/components/schemas/LocalDate'
        gesuchsperiodeStopp:
          $ref: '#/components/schemas/LocalDate'
        aufschaltterminStart:
          $ref: '#/components/schemas/LocalDate'
        aufschaltterminStopp:
          $ref: '#/components/schemas/LocalDate'
        einreichefristNormal:
          $ref: '#/components/schemas/LocalDate'
        einreichefristReduziert:
          $ref: '#/components/schemas/LocalDate'
        gesuchsjahr:
          $ref: '#/components/schemas/Gesuchsjahr'
        ausbKosten_SekII:
          type: integer
        ausbKosten_Tertiaer:
          type: integer
        fristNachreichenDokumente:
          type: integer
    GesuchsperiodeCreate:
      type: object
      allOf:
        - $ref: '#/components/schemas/GesuchsperiodeDaten'
    GesuchsperiodeUpdate:
      type: object
      allOf:
        - $ref: '#/components/schemas/GesuchsperiodeDaten'
    GesuchsperiodeDaten:
      type: object
      required:
        - bezeichnungDe
        - bezeichnungFr
        - fiskaljahr
        - gesuchsjahrId
        - gesuchsperiodeStart
        - gesuchsperiodeStopp
        - aufschaltterminStart
        - aufschaltterminStopp
        - einreichefristNormal
        - einreichefristReduziert
        - ausbKosten_SekII
        - ausbKosten_Tertiaer
        - freibetrag_vermoegen
        - freibetrag_erwerbseinkommen
        - elternbeteiligungssatz
        - einkommensfreibetrag
        - vermogenSatzAngerechnet
        - integrationszulage
        - limite_EkFreibetrag_Integrationszulage
        - stipLimite_Minimalstipendium
        - person_1
        - personen_2
        - personen_3
        - personen_4
        - personen_5
        - personen_6
        - personen_7
        - proWeiterePerson
        - kinder_00_18
        - jugendliche_erwachsene_19_25
        - erwachsene_26_99
        - wohnkosten_fam_1pers
        - wohnkosten_fam_2pers
        - wohnkosten_fam_3pers
        - wohnkosten_fam_4pers
        - wohnkosten_fam_5pluspers
        - wohnkosten_persoenlich_1pers
        - wohnkosten_persoenlich_2pers
        - wohnkosten_persoenlich_3pers
        - wohnkosten_persoenlich_4pers
        - wohnkosten_persoenlich_5pluspers
        - preisProMahlzeit
        - maxSaeule3a
        - anzahlWochenLehre
        - anzahlWochenSchule
        - vermoegensanteilInProzent
        - reduzierungDesGrundbedarfs
        - limiteAlterAntragsstellerHalbierungElternbeitrag
        - zweiterAuszahlungsterminMonat
        - zweiterAuszahlungsterminTag
        - fristNachreichenDokumente
      properties:
        bezeichnungDe:
          type: string
        bezeichnungFr:
          type: string
        einreichfrist:
          $ref: '#/components/schemas/LocalDate'
        fiskaljahr:
          type: integer
        gesuchsjahrId:
          $ref: '#/components/schemas/UUID'
        gesuchsperiodeStart:
          format: date
          description: dd.MM.yyyy
          type: string
        gesuchsperiodeStopp:
          format: date
          description: dd.MM.yyyy
          type: string
        aufschaltterminStart:
          format: date
          description: dd.MM.yyyy
          type: string
        aufschaltterminStopp:
          format: date
          description: dd.MM.yyyy
          type: string
        einreichefristNormal:
          format: date
          description: dd.MM.yyyy
          type: string
        einreichefristReduziert:
          format: date
          description: dd.MM.yyyy
          type: string
        ausbKosten_SekII:
          type: integer
        ausbKosten_Tertiaer:
          type: integer
        freibetrag_vermoegen:
          type: integer
        freibetrag_erwerbseinkommen:
          type: integer
        einkommensfreibetrag:
          type: integer
        elternbeteiligungssatz:
          type: integer
        vermogenSatzAngerechnet:
          type: integer
        integrationszulage:
          type: integer
        limite_EkFreibetrag_Integrationszulage:
          type: integer
        stipLimite_Minimalstipendium:
          type: integer
        person_1:
          type: integer
        personen_2:
          type: integer
        personen_3:
          type: integer
        personen_4:
          type: integer
        personen_5:
          type: integer
        personen_6:
          type: integer
        personen_7:
          type: integer
        proWeiterePerson:
          type: integer
        kinder_00_18:
          type: integer
        jugendliche_erwachsene_19_25:
          type: integer
        erwachsene_26_99:
          type: integer
        wohnkosten_fam_1pers:
          type: integer
        wohnkosten_fam_2pers:
          type: integer
        wohnkosten_fam_3pers:
          type: integer
        wohnkosten_fam_4pers:
          type: integer
        wohnkosten_fam_5pluspers:
          type: integer
        wohnkosten_persoenlich_1pers:
          type: integer
        wohnkosten_persoenlich_2pers:
          type: integer
        wohnkosten_persoenlich_3pers:
          type: integer
        wohnkosten_persoenlich_4pers:
          type: integer
        wohnkosten_persoenlich_5pluspers:
          type: integer
        preisProMahlzeit:
          type: integer
        maxSaeule3a:
          type: integer
        anzahlWochenLehre:
          type: integer
        anzahlWochenSchule:
          type: integer
        vermoegensanteilInProzent:
          type: integer
        reduzierungDesGrundbedarfs:
          type: integer
        limiteAlterAntragsstellerHalbierungElternbeitrag:
          type: integer
        zweiterAuszahlungsterminMonat:
          type: integer
        zweiterAuszahlungsterminTag:
          type: integer
        fristNachreichenDokumente:
          type: integer
    AusbildungsstaetteUpdate:
      required:
        - nameFr
        - nameDe
      type: object
      properties:
        nameDe:
          type: string
        nameFr:
          type: string
        id:
          $ref: '#/components/schemas/UUID'
    AusbildungsstaetteCreate:
      required:
        - nameFr
        - nameDe
      type: object
      properties:
        nameDe:
          type: string
        nameFr:
          type: string
    Ausbildungsgang:
      required:
        - bildungskategorie
        - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        bezeichnungDe:
          type: string
        bezeichnungFr:
          type: string
        bildungskategorie:
          $ref: '#/components/schemas/Bildungskategorie'
        ausbildungsstaetteId:
          $ref: '#/components/schemas/UUID'
    AusbildungsStatus:
      enum:
        - AKTIV
        - ABGEBROCHEN
        - ABGESCHLOSSEN
    FileDownloadToken:
      required:
        - token
      type: object
      properties:
        token:
          type: string
    NeskoGetSteuerdatenRequest:
      required:
        - token
        - steuerdatenTyp
        - steuerjahr
      type: object
      properties:
        token:
          type: string
        steuerdatenTyp:
          $ref: '#/components/schemas/SteuerdatenTyp'
        steuerjahr:
          type: integer
    GesuchTrancheStatus:
      enum:
        - IN_BEARBEITUNG_GS
        - UEBERPRUEFEN
        - MANUELLE_AENDERUNG
        - AKZEPTIERT
        - ABGELEHNT
        - FEHLENDE_DOKUMENTE
    GesuchTranche:
      required:
        - id
        - gueltigAb
        - gueltigBis
        - status
        - typ
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        gueltigAb:
          $ref: '#/components/schemas/LocalDate'
        gueltigBis:
          $ref: '#/components/schemas/LocalDate'
        comment:
          type: string
        gesuchFormular:
          $ref: '#/components/schemas/GesuchFormular'
        status:
          $ref: '#/components/schemas/GesuchTrancheStatus'
        typ:
          $ref: '#/components/schemas/GesuchTrancheTyp'
    GesuchTrancheUpdate:
      required:
        - gesuchFormular
        - id
      type: object
      properties:
        gesuchFormular:
          $ref: '#/components/schemas/GesuchFormularUpdate'
        id:
          $ref: '#/components/schemas/UUID'
    GesuchTrancheList:
      type: object
      properties:
        tranchen:
          type: array
          items:
            $ref: '#/components/schemas/GesuchTrancheSlim'
        initialTranchen:
          type: array
          items:
            $ref: '#/components/schemas/GesuchTrancheSlim'
    GesuchTrancheSlim:
      type: object
      required:
        - id
        - gueltigAb
        - gueltigBis
        - status
        - typ
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        gueltigAb:
          $ref: '#/components/schemas/LocalDate'
        gueltigBis:
          $ref: '#/components/schemas/LocalDate'
        status:
          $ref: '#/components/schemas/GesuchTrancheStatus'
        comment:
          type: string
        typ:
          $ref: '#/components/schemas/GesuchTrancheTyp'
    SachbearbeiterZuordnungStammdaten:
      type: object
      properties:
        buchstabenDe:
          type: string
        buchstabenFr:
          type: string
    SachbearbeiterZuordnungStammdatenList:
      type: object
      properties:
        sachbearbeiter:
          $ref: '#/components/schemas/UUID'
        zuordnung:
          $ref: '#/components/schemas/SachbearbeiterZuordnungStammdaten'
    Benutzereinstellungen:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        digitaleKommunikation:
          type: boolean
    BenutzereinstellungenUpdate:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        digitaleKommunikation:
          type: boolean
    plz:
      description: 'PLZ und ort für Type ahead funktionalitaet'
      type: object
      required:
        - plz
        - ort
        - kantonskuerzel
      properties:
        plz:
          type: string
        ort:
          type: string
        kantonskuerzel:
          type: string
    SteuererklaerungUpdate:
      title: Root Type for Steuererklaerung
      required:
        - steuerdatenTyp
        - steuererklaerungInBern
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        steuerdatenTyp:
          $ref: '#/components/schemas/SteuerdatenTyp'
        steuererklaerungInBern:
          type: boolean
    Steuerdaten:
      title: Root Type for Steuerdaten
      required:
        - steuernKantonGemeinde
        - steuernBund
        - fahrkosten
        - verpflegung
        - totalEinkuenfte
        - eigenmietwert
        - isArbeitsverhaeltnisSelbstaendig
        - kinderalimente
        - vermoegen
        - steuerdatenTyp
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        steuerdatenTyp:
          $ref: '#/components/schemas/SteuerdatenTyp'
        steuernKantonGemeinde:
          type: integer
        steuernBund:
          type: integer
        fahrkosten:
          type: integer
        fahrkostenPartner:
          type: integer
        verpflegung:
          type: integer
        verpflegungPartner:
          type: integer
        steuerjahr:
          type: integer
        veranlagungsCode:
          type: integer
        totalEinkuenfte:
          type: integer
        eigenmietwert:
          type: integer
        isArbeitsverhaeltnisSelbstaendig:
          type: boolean
        saeule3a:
          type: integer
        saeule2:
          type: integer
        kinderalimente:
          type: integer
        vermoegen:
          type: integer
    SozialdienstBenutzerBase:
      required:
        - vorname
        - nachname
        - email
      properties:
        vorname:
          type: string
        nachname:
          type: string
        email:
          type: string
    SozialdienstBenutzerCreate:
      required:
        - redirectUri
      properties:
        redirectUri:
          type: string
      allOf:
        - $ref: '#/components/schemas/SozialdienstBenutzerBase'
    SozialdienstBenutzer:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/UUID'
      allOf:
        - $ref: '#/components/schemas/SozialdienstBenutzerBase'
    SozialdienstBenutzerUpdate:
      required:
        - id
        - vorname
        - nachname
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        vorname:
          type: string
        nachname:
          type: string
    SozialdienstAdmin:
      required:
        - keycloakId
        - vorname
        - nachname
        - email
      properties:
        keycloakId:
          type: string
        vorname:
          type: string
        nachname:
          type: string
        email:
          type: string
    # SozialdienstAdmin:
    #   type: object
    #   allOf:
    #     - $ref: '#/components/schemas/SozialdienstAdmin'
    SozialdienstCreate:
      required:
        - name
        - iban
        - adresse
        - sozialdienstAdmin
      properties:
        name:
          type: string
        iban:
          type: string
        adresse:
          $ref: '#/components/schemas/Adresse'
        sozialdienstAdmin:
          $ref: '#/components/schemas/SozialdienstAdmin'
    SozialdienstUpdate:
      required:
        - id
        - name
        - iban
        - adresse
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        name:
          type: string
        iban:
          type: string
        adresse:
          $ref: '#/components/schemas/Adresse'
    SozialdienstSlim:
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        name:
          type: string
        adresse:
          $ref: '#/components/schemas/Adresse'
    Sozialdienst:
      allOf:
        - $ref: '#/components/schemas/SozialdienstSlim'
        - type: object
          required:
            - id
            - name
            - adresse
            - iban
            - sozialdienstAdmin
          properties:
            adresse:
              $ref: '#/components/schemas/Adresse'
            iban:
              type: string
            sozialdienstAdmin:
              $ref: '#/components/schemas/SozialdienstBenutzer'
    StatusprotokollEntry:
      description: 'Eintrag von dem Statusprotokoll'
      type: object
      properties:
        timestamp:
          description: 'Datum und Zeit vom wechsel zu status, ISO 8601 formatiert'
          type: string
          format: date-time
        status:
          description: 'Status welcher am stichtag erreicht wurde'
          $ref: '#/components/schemas/Gesuchstatus'
        benutzer:
          description: 'Der Benutzer welcher den Statuswechsel ausgelöst hat'
          type: string
        kommentar:
          description: 'Kommentar vom SB über die Statusänderung'
          type: string
    GesuchDokumentAblehnenRequest:
      description: 'Meta information um ein GesuchDokument abzulehnen'
      type: object
      properties:
        kommentar:
          $ref: '#/components/schemas/GesuchDokumentKommentar'
    GesuchDokumentKommentar:
      description: 'Kommentar zu einem (abgelehnten) GesuchDokument'
      type: object
      required:
        - gesuchTrancheId
        - gesuchDokumentId
      properties:
        gesuchTrancheId:
          $ref: '#/components/schemas/UUID'
        gesuchDokumentId:
          $ref: '#/components/schemas/UUID'
        dokumentStatus:
          $ref: '#/components/schemas/Dokumentstatus'
        kommentar:
          type: string
        user_erstellt:
          type: string
        timestampErstellt:
          $ref: '#/components/schemas/LocalDate'
    GesuchTrancheTyp:
      enum:
        - AENDERUNG
        - TRANCHE
    Dokumentstatus:
      enum:
        - AUSSTEHEND
        - ABGELEHNT
        - AKZEPTIERT
    Notification:
      description: Notification for a Gesuch
      type: object
      required:
        - notificationType
        - gesuchId
        - timestamp
        - userErstellt
      properties:
        notificationText:
          type: string
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        gesuchId:
          $ref: '#/components/schemas/UUID'
        userErstellt:
          type: string
        timestampErstellt:
          $ref: '#/components/schemas/LocalDate'
    GesuchNotizTyp:
      enum:
        - GESUCH_NOTIZ
        - JURISTISCHE_NOTIZ
    NotificationType:
      enum:
        - GESUCH_EINGEREICHT
        - GESUCH_STATUS_CHANGE_WITH_COMMENT
        - FEHLENDE_DOKUMENTE_EINREICHEN
        - FEHLENDE_DOKUMENTE
        - FEHLENDE_DOKUMENTE_NICHT_EINGEREICHT
        - AENDERUNG_ABGELEHNT
    Berechnungsresultat:
      description: Resultat der Berechnung (gesamtes Gesuch)
      required:
        - year
        - berechnung
        - tranchenBerechnungsresultate
      type: object
      properties:
        year:
          type: integer
        berechnung:
          description: 'Berechneter Stpendiumsanspruch für das Gesuch'
          type: integer
        berechnungReduziert:
          description: 'Berechneter Stpendiumsanspruch für das Gesuch nach allfälligem abzug wegen zuspäteinreichens'
          type: integer
        tranchenBerechnungsresultate:
          description: 'Resultate der Berechnung für die Tranchen des Gesuchs'
          type: array
          items:
            $ref: '#/components/schemas/TranchenBerechnungsresultat'
        verminderteBerechnungMonate:
          description: 'Die Anzahl von Monaten für welche die Berechnung stattfand'
          type: integer
    TranchenBerechnungsresultat:
      description: Resultat der Berechnung (eine Tranche)
      required:
        - nameGesuchsteller
        - berechnung
        - gueltigAb
        - gueltigBis
        - gesuchTrancheId
        - berechnungsanteilKinder
        - berechnungsStammdaten
        - persoenlichesBudgetresultat
        - familienBudgetresultate
      type: object
      properties:
        nameGesuchsteller:
          type: string
        berechnung:
          description: 'Berechneter Stpendiumsanspruch für diese Tranche'
          type: integer
        gueltigAb:
          $ref: '#/components/schemas/LocalDate'
        gueltigBis:
          $ref: '#/components/schemas/LocalDate'
        gesuchTrancheId:
          description: 'ID der tranche für welche die Berechnung ausgeführt wurde.
            Mehrere resultate mit der gleichen ID sind die berechnungen für
            getrennte eltern mit Kindern die eine Obhutsteilung haben'
          $ref: '#/components/schemas/UUID'
        berechnungsanteilKinder:
          description: 'Anteil dieser Berechnung am Berechnungstotal.
            Für Tranchen welche nur eine Berechnung haben ist dieser wert == 1.'
          type: number
        berechnungsStammdaten:
          description: 'Stammdaten für die Stipendienberechnung'
          $ref: '#/components/schemas/BerechnungsStammdaten'
        persoenlichesBudgetresultat:
          description: 'Berechnungsdaten des persönlichen Budgets'
          $ref: '#/components/schemas/PersoenlichesBudgetresultat'
        familienBudgetresultate:
          description: 'Berechnungsdaten der Familienbudgets'
          type: array
          items:
            $ref: '#/components/schemas/FamilienBudgetresultat'
    BerechnungsStammdaten:
      description: Stammdaten used for the calculation of the stipendium
      required:
        - maxSaeule3a
        - einkommensfreibetrag
        - freibetragErwerbseinkommen
        - freibetragVermoegen
        - vermoegensanteilInProzent
        - anzahlWochenLehre
        - anzahlWochenSchule
        - preisProMahlzeit
        - stipLimiteMinimalstipendium
        - limiteAlterAntragsstellerHalbierungElternbeitrag
      type: object
      properties:
        maxSaeule3a:
          type: integer
        einkommensfreibetrag:
          type: integer
        freibetragErwerbseinkommen:
          type: integer
        freibetragVermoegen:
          type: integer
        vermoegensanteilInProzent:
          type: integer
        anzahlWochenLehre:
          type: integer
        anzahlWochenSchule:
          type: integer
        preisProMahlzeit:
          type: integer
        stipLimiteMinimalstipendium:
          type: integer
        limiteAlterAntragsstellerHalbierungElternbeitrag:
          type: integer
    PersoenlichesBudgetresultat:
      description: Persoenliche Budget daten fuer und von der Berechnung
      required:
        - anzahlPersonenImHaushalt
        - eigenerHaushalt
        - anteilFamilienbudget
        - einkommen
        - alimente
        - leistungenEO
        - rente
        - kinderAusbildungszulagen
        - ergaenzungsleistungen
        - gemeindeInstitutionen
        - steuerbaresVermoegen
        - anrechenbaresVermoegen
        - einkommenPartner
        - einnahmenPersoenlichesBudget
        - anteilLebenshaltungskosten
        - grundbedarf
        - wohnkosten
        - medizinischeGrundversorgung
        - steuernKantonGemeinde
        - fahrkosten
        - fahrkostenPartner
        - verpflegung
        - verpflegungPartner
        - fremdbetreuung
        - ausbildungskosten
        - ausgabenPersoenlichesBudget
        - persoenlichesbudgetBerechnet
      type: object
      properties:
        anzahlPersonenImHaushalt:
          type: integer
        totalVorTeilung:
          type: integer
        eigenerHaushalt:
          type: boolean
        anteilFamilienbudget:
          type: integer
        einkommen:
          type: integer
        alimente:
          type: integer
        leistungenEO:
          type: integer
        rente:
          type: integer
        kinderAusbildungszulagen:
          type: integer
        ergaenzungsleistungen:
          type: integer
        gemeindeInstitutionen:
          type: integer
        steuerbaresVermoegen:
          type: integer
        anrechenbaresVermoegen:
          type: integer
        einkommenPartner:
          type: integer
        einnahmenPersoenlichesBudget:
          type: integer
        anteilLebenshaltungskosten:
          type: integer
        grundbedarf:
          type: integer
        wohnkosten:
          type: integer
        medizinischeGrundversorgung:
          type: integer
        steuernKantonGemeinde:
          type: integer
        fahrkosten:
          type: integer
        fahrkostenPartner:
          type: integer
        verpflegung:
          type: integer
        verpflegungPartner:
          type: integer
        fremdbetreuung:
          type: integer
        ausbildungskosten:
          type: integer
        ausgabenPersoenlichesBudget:
          type: integer
        persoenlichesbudgetBerechnet:
          type: integer
    FamilienBudgetresultat:
      description: Familien Budget daten fuer und von der Berechnung
      required:
        - familienBudgetTyp
        - selbststaendigErwerbend
        - anzahlPersonenImHaushalt
        - anzahlGeschwisterInAusbildung
        - totalEinkuenfte
        - ergaenzungsleistungen
        - steuerbaresVermoegen
        - anrechenbaresVermoegen
        - saeule2
        - saeule3a
        - eigenmietwert
        - alimente
        - einnahmenFamilienbudget
        - grundbedarf
        - effektiveWohnkosten
        - medizinischeGrundversorgung
        - integrationszulage
        - steuernBund
        - steuernKantonGemeinde
        - fahrkostenPerson1
        - fahrkostenPerson2
        - essenskostenPerson1
        - essenskostenPerson2
        - ausgabenFamilienbudget
        - familienbudgetBerechnet
      type: object
      properties:
        familienBudgetTyp:
          $ref: '#/components/schemas/SteuerdatenTyp'
        selbststaendigErwerbend:
          type: boolean
        anzahlPersonenImHaushalt:
          type: integer
        anzahlGeschwisterInAusbildung:
          type: integer
        totalEinkuenfte:
          type: integer
        ergaenzungsleistungen:
          type: integer
        steuerbaresVermoegen:
          type: integer
        anrechenbaresVermoegen:
          type: integer
        saeule2:
          type: integer
        saeule3a:
          type: integer
        eigenmietwert:
          type: integer
        alimente:
          type: integer
        einnahmenFamilienbudget:
          type: integer
        grundbedarf:
          type: integer
        effektiveWohnkosten:
          type: integer
        medizinischeGrundversorgung:
          type: integer
        integrationszulage:
          type: integer
        steuernBund:
          type: integer
        steuernKantonGemeinde:
          type: integer
        fahrkostenPerson1:
          type: integer
        fahrkostenPerson2:
          type: integer
        essenskostenPerson1:
          type: integer
        essenskostenPerson2:
          type: integer
        ausgabenFamilienbudget:
          type: integer
        familienbudgetBerechnet:
          type: integer
    BaseTrancheRequest:
      type: object
      properties:
        start:
          type: string
          format: date
        end:
          type: string
          format: date
        comment:
          type: string
    CreateAenderungsantragRequest:
      allOf:
        - $ref: '#/components/schemas/BaseTrancheRequest'
        - type: object
          required:
            - start
            - comment
    CreateGesuchTrancheRequest:
      allOf:
        - $ref: '#/components/schemas/BaseTrancheRequest'
        - type: object
          required:
            - start
            - comment
    Kommentar:
      type: object
      required:
        - text
      properties:
        text:
          type: string
    JuristischeAbklaerungNotizAntwort:
      type: object
      required:
        - antwort
      properties:
        antwort:
          type: string
    GesuchNotizCreate:
      type: object
      required:
        - gesuchId
        - betreff
        - text
        - notizTyp
      properties:
        gesuchId:
          $ref: '#/components/schemas/UUID'
        betreff:
          maximum: 100
          type: string
        text:
          type: string
        notizTyp:
          $ref: '#/components/schemas/GesuchNotizTyp'
    GesuchNotizUpdate:
      type: object
      required:
        - id
        - betreff
        - text
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        betreff:
          maximum: 100
          type: string
        text:
          type: string
    GesuchNotiz:
      required:
        - userErstellt
        - timestampErstellt
        - notizTyp
        - gesuchNummer
        - id
      type: object
      properties:
        userErstellt:
          type: string
        timestampErstellt:
          $ref: '#/components/schemas/LocalDate'
        userMutiert:
          type: string
        timestampMutiert:
          $ref: '#/components/schemas/LocalDate'
        notizTyp:
          $ref: '#/components/schemas/GesuchNotizTyp'
        gesuchNummer:
          type: string
        antwort:
          type: string
      allOf:
        - type: object
        - $ref: '#/components/schemas/GesuchNotizUpdate'
    PaginatedResult:
      type: object
      properties:
        page:
          type: integer
        pageSize:
          type: integer
        totalEntries:
          type: integer
    PaginatedSbDashboard:
      allOf:
        - $ref: '#/components/schemas/PaginatedResult'
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/SbDashboardGesuch'
    PaginatedSozDashboard:
      allOf:
        - $ref: '#/components/schemas/PaginatedResult'
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/FallWithDelegierung'
    SbDashboardGesuch:
      type: object
      required:
        - id
        - gesuchTrancheId
        - fallNummer
        - typ
        - piaNachname
        - piaVorname
        - piaGeburtsdatum
        - trancheStatus
        - gesuchStatus
        - bearbeiter
        - letzteAktivitaet
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        gesuchTrancheId:
          $ref: '#/components/schemas/UUID'
        fallNummer:
          type: string
        typ:
          $ref: '#/components/schemas/GesuchTrancheTyp'
        piaNachname:
          type: string
        piaVorname:
          type: string
        piaGeburtsdatum:
          type: string
          format: date
        gesuchStatus:
          $ref: '#/components/schemas/Gesuchstatus'
        trancheStatus:
          $ref: '#/components/schemas/GesuchTrancheStatus'
        bearbeiter:
          type: string
        letzteAktivitaet:
          type: string
          format: date
    SbDashboardColumn:
      enum:
        - FALLNUMMER
        - TYP
        - PIA_NACHNAME
        - PIA_VORNAME
        - PIA_GEBURTSDATUM
        - STATUS
        - BEARBEITER
        - LETZTE_AKTIVITAET
    SozDashboardColumn:
      enum:
        - FALLNUMMER
        - NACHNAME
        - VORNAME
        - GEBURTSDATUM
        - WOHNORT
        - DELEGIERUNG_ANGENOMMEN
    SortOrder:
      enum:
        - ASCENDING
        - DESCENDING
    ZustaendigerKanton:
      enum:
        - BERN
        - ANDERER_KANTON
      type: string
    ZustaendigeKESB:
      enum:
        - KESB_BERN
        - KESB_ANDERER_KANTON
      type: string
    StipDecision:
      enum:
        - GESUCH_VALID
        - EINGABEFRIST_ABGELAUFEN
        - AUSBILDUNG_NICHT_ANERKANNT
        - AUSBILDUNGEN_LAENGER_12_JAHRE
        - AUSBILDUNG_IM_LEBENSLAUF
        - PIA_AELTER_35_JAHRE
        - KEIN_WOHNSITZ_KANTON_BE
        - SCHULJAHR_9_SEKSTUFE_1
        - AUSBILDUNG_PBI1
        - ART_32_BBV
        - ZWEITAUSBILDUNG
        - AUSBILDUNG_2_GLEICHE_STUFE_BVS_ODER_VORBILDUNG
        - EBA_LEHRE
        - HOCHSCHULSTUDIUM_2
        - MEHRERE_AUSBILDUNGSWECHSEL
        - NICHT_BERECHTIGTE_PERSON
        - ANSPRUCH_MANUELL_PRUEFEN
        - ANSPRUCH_UNKLAR
    StipDecisionText:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        stipDecision:
          $ref: '#/components/schemas/StipDecision'
        titleDe:
          type: string
        textDe:
          type: string
        textFr:
          type: string
    AusgewaehlterGrund:
      type: object
      required:
        - decisionId
      properties:
        decisionId:
          $ref: '#/components/schemas/UUID'
    DokumenteToUpload:
      type: object
      properties:
        customDokumentTyps:
          type: array
          items:
            $ref: '#/components/schemas/CustomDokumentTyp'
        required:
          type: array
          items:
            $ref: '#/components/schemas/DokumentTyp'
        unterschriftenblaetter:
          type: array
          items:
            $ref: '#/components/schemas/UnterschriftenblattDokumentTyp'
        sbCanFehlendeDokumenteUebermitteln:
          type: boolean
        gsCanDokumenteUebermitteln:
          type: boolean
        sbCanBearbeitungAbschliessen:
          type: boolean
        sbCanUploadUnterschriftenblatt:
          type: boolean
    SapStatus:
      enum:
        - SUCCESS
        - FAILURE
        - IN_PROGRESS
    BuchhaltungType:
      enum:
        - SALDOAENDERUNG
        - AUSZAHLUNG
        - STIPENDIUM
    BuchhaltungEntry:
      type: object
      required:
        - userErstellt
        - timestampErstellt
        - buchhaltungType
        - saldoAenderung
        - saldo
        - comment
      properties:
        userErstellt:
          type: string
        timestampErstellt:
          type: string
          format: date-time
        buchhaltungType:
          $ref: '#/components/schemas/BuchhaltungType'
        stipendienBetrag:
          type: integer
        auszahlung:
          type: integer
        rueckforderung:
          type: integer
        saldoAenderung:
          type: integer
        saldo:
          type: integer
        sapId:
          type: integer
        sapStatus:
          $ref: '#/components/schemas/SapStatus'
        comment:
          type: string
        verfuegungId:
          $ref: '#/components/schemas/UUID'
        gesuchId:
          $ref: '#/components/schemas/UUID'
    BuchhaltungSaldokorrektur:
      type: object
      required:
        - betrag
        - comment
      properties:
        betrag:
          type: integer
        comment:
          type: string
    EinreichedatumAendernRequest:
      type: object
      required:
        - newEinreichedatum
      properties:
        newEinreichedatum:
          type: string
          format: date
        betreff:
          type: string
        text:
          type: string
    EinreichedatumStatus:
      type: object
      required:
        - canAendern
      properties:
        canAendern:
          type: boolean
    BeschwerdeVerlaufEntryCreate:
      type: object
      required:
        - kommentar
        - beschwerdeSetTo
      properties:
        kommentar:
          type: string
        beschwerdeSetTo:
          type: boolean
    BeschwerdeVerlaufEntry:
      type: object
      required:
        - kommentar
        - beschwerdeSetTo
        - timestampErstellt
        - userErstellt
      allOf:
        - $ref: '#/components/schemas/BeschwerdeVerlaufEntryCreate'
      properties:
        beschwerdeEntscheid:
          $ref: '#/components/schemas/BeschwerdeEntscheid'
        timestampErstellt:
          type: string
          format: date-time
        userErstellt:
          type: string
    NachfristAendernRequest:
      type: object
      required:
        - newNachfrist
      properties:
        newNachfrist:
          type: string
          format: date
    GesuchZurueckweisenResponse:
      type: object
      required:
        - gesuchId
        - gesuchTrancheId
      properties:
        gesuchId:
          $ref: '#/components/schemas/UUID'
        gesuchTrancheId:
          $ref: '#/components/schemas/UUID'
  responses:
    Unauthorized:
      content:
        text/plain: {}
      description: Die Zugriffsdaten sind nicht gültig
    Forbidden:
      content:
        text/plain: {}
      description: Der Zugriff wurde verweigert
    NotFound:
      content:
        text/plain: {}
      description: Die angeforderte Ressource existiert nicht
    ServerError:
      content:
        text/plain: {}
      description: Interner Server Fehler
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationReport'
      description: Die Kunde Request Daten sind ungültig
  securitySchemes:
    auth-uat-bern:
      type: openIdConnect
      openIdConnectUrl: https://uat-auth-stip.apps.apollo.ocp.dvbern.ch/realms/bern
      description: Bern (UAT)
    auth-dev-bern:
      type: openIdConnect
      openIdConnectUrl: https://dev-auth-stip.apps.mercury.ocp.dvbern.ch/realms/bern
      description: Bern (DEV)
  parameters:
    aenderungId:
      name: aenderungId
      in: path
      required: true
      description: Die ID der Aenderung
      schema:
        $ref: '#/components/schemas/UUID'
    gesuchId:
      name: gesuchId
      in: path
      required: true
      description: Die ID vom Gesuch
      schema:
        $ref: '#/components/schemas/UUID'
    gesuchTrancheId:
      name: gesuchTrancheId
      in: path
      required: true
      description: Die ID von der GesuchTranche
      schema:
        $ref: '#/components/schemas/UUID'
    fallId:
      name: fallId
      in: path
      required: true
      description: Die ID vom Fall
      schema:
        $ref: '#/components/schemas/UUID'
    delegierungId:
      name: delegierungId
      in: path
      required: true
      description: Die ID der Delegierung
      schema:
        $ref: '#/components/schemas/UUID'
    sortOrder:
      in: query
      name: sortOrder
      schema:
        $ref: '#/components/schemas/SortOrder'
    fallNummer:
      in: query
      name: fallNummer
      schema:
        type: string
    piaNachname:
      in: query
      name: piaNachname
      schema:
        type: string
    nachname:
      in: query
      name: nachname
      schema:
        type: string
    piaVorname:
      in: query
      name: piaVorname
      schema:
        type: string
    vorname:
      in: query
      name: vorname
      schema:
        type: string
    piaWohnort:
      in: query
      name: piaWohnort
      schema:
        type: string
    wohnort:
      in: query
      name: wohnort
      schema:
        type: string
    piaGeburtsdatum:
      in: query
      name: piaGeburtsdatum
      schema:
        type: string
        format: date
    geburtsdatum:
      in: query
      name: geburtsdatum
      schema:
        type: string
        format: date
    delegierungAngenommen:
      in: query
      name: delegierungAngenommen
      schema:
        type: boolean
    status:
      in: query
      name: status
      schema:
        type: string
    bearbeiter:
      in: query
      name: bearbeiter
      schema:
        type: string
    letzteAktivitaetFrom:
      in: query
      name: letzteAktivitaetFrom
      schema:
        type: string
        format: date
    letzteAktivitaetTo:
      in: query
      name: letzteAktivitaetTo
      schema:
        type: string
        format: date
    typ:
      in: query
      name: typ
      required: true
      schema:
        $ref: '#/components/schemas/GesuchTrancheTyp'
    page:
      in: query
      name: page
      required: true
      schema:
        type: integer
    pageSize:
      in: query
      name: pageSize
      required: true
      schema:
        type: integer
    sozialdienstId:
      name: sozialdienstId
      schema:
        $ref: '#/components/schemas/UUID'
      in: path
      required: true
    unterschriftenblattTyp:
      name: unterschriftenblattTyp
      schema:
        $ref: '#/components/schemas/UnterschriftenblattDokumentTyp'
      in: path
      required: true
security:
  - auth-uat-bern: []
  - auth-dev-bern: []
tags:
  - name: Ausbildungsstaette
  - name: Auth
  - name: Configuration
  - name: Fall
  - name: Gesuch
  - name: Gesuchsperiode
  - name: Stammdaten
  - name: Benutzer
  - name: Tenant
  - name: Ausbildungsgang
  - name: Mail
  - name: Delegieren
