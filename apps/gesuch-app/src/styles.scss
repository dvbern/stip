// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$gesuch-app-primary: mat.define-palette(mat.$indigo-palette);
$gesuch-app-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$gesuch-app-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$gesuch-app-theme: mat.define-light-theme(
  (
    color: (
      primary: $gesuch-app-primary,
      accent: $gesuch-app-accent,
      warn: $gesuch-app-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($gesuch-app-theme);

.mdc-text-field:not(.mdc-text-field--disabled):not(
    .mdc-text-field--focused
  ):not(.mdc-text-field--invalid)
  .mdc-floating-label {
  color: black;
}
.mat-mdc-form-field.mat-mdc-form-field-label-always-float {
  align-self: flex-start;
  --mat-mdc-form-field-floating-label-scale: 1;
  .mat-mdc-text-field-wrapper.mdc-text-field--outlined
    .mdc-notched-outline--upgraded
    .mdc-floating-label--float-above {
    --mat-mdc-form-field-label-transform: translateY(-38.75px)
      scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));
  }

  .mdc-text-field--outlined:not(.mdc-text-field--disabled) {
    background-color: white;
  }
  .mat-mdc-form-field-hint-wrapper,
  .mat-mdc-form-field-error-wrapper {
    padding: 0;
  }
}
.mdc-radio .mdc-label {
  width: 100%;
}
.mat-mdc-radio-group.ng-invalid.ng-touched .mat-mdc-radio-button {
  --mdc-radio-unselected-icon-color: #{mat.get-color-from-palette(
      $gesuch-app-warn
    )};
}

// override boostrap variables + add custom
@import 'theme';
@include dv-variables;

@import 'components';

@import 'bootstrap/scss/bootstrap';

@import 'bootstrap-overrides';

// add your global styles here

* {
  outline: none;
}

// Typeahead popup (ng-bootstrap with custom popup class)
.dv-typeahead-popup {
  width: 100%;
  overflow: hidden;
  padding-top: 0;
  padding-bottom: 0;
}

// Typeahead "Bitte w√§hlen" soll gleich aussehen wie bei Dropdowns
.form-control[role='combobox']::placeholder {
  color: #000;
}

.dv-typeahead-clear-btn.btn {
  position: absolute;
  top: var(--dv-border-width);
  right: 34px;
  height: calc(100% - var(--dv-border-width) - var(--dv-border-width));
  border-color: transparent;
  background: #fff;
  border-radius: 0;
  color: #666;
  padding: 0 0.5rem 1px;
  box-shadow: none;

  &:hover,
  &:active {
    color: #000;
    border-color: transparent;
    background: #fff;
  }
}
