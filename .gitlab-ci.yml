stages: [test, build, deploy, mirror]

variables:
  ARGOCD_APP: stip
  ARGOCD_IMAGES: api,gesuch-app,sachbearbeitung-app
  STIP_OVERLAYS_DIR: manifests/stip/overlays

backend:
  stage: build
  trigger:
    include: backend/.gitlab-ci.yml
    strategy: depend

frontend:
  stage: build
  trigger:
    include: frontend/.gitlab-ci.yml
    strategy: depend

include:
  - component: 'gitlab.dvbern.ch/devops/gitlab/components/workflow@v0.1.6'

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/argocd-deploy-helm@24c4a3cb712e0022fad8d869437ef6984f6398df'
    inputs:
      name: "deploy:dev"
      deployment-environment: "dev"
      deployment-environment-url: "https://dev-stip.$DVB_OCP_MERCURY_ROUTER"
      deployment-environment-values-path: "charts/stip/environments/dev/values.yaml"
      deployment-on: "default"
      deployment-mode: "on_success"
      argocd-server: "$ARGOCD_SERVER"
      argocd-token: "$ARGOCD_TOKEN"
      argocd-app-name: "$ARGOCD_APP"


  - component: 'gitlab.dvbern.ch/devops/gitlab/components/argocd-deploy-helm@24c4a3cb712e0022fad8d869437ef6984f6398df'
    inputs:
      name: "deploy:uat"
      deployment-environment: "uat"
      deployment-environment-url: "https://uat-stip.kibon.ch"
      deployment-environment-values-path: "charts/stip/environments/uat/values.yaml"
      deployment-on: "tag"
      deployment-mode: "manual"
      argocd-server: "$ARGOCD_SERVER"
      argocd-token: "$ARGOCD_TOKEN"
      argocd-app-name: "$ARGOCD_APP"

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/argocd-deploy-helm@24c4a3cb712e0022fad8d869437ef6984f6398df'
    inputs:
      name: "deploy:prod"
      deployment-environment: "prod"
      deployment-environment-url: "https://stip.kibon.ch"
      deployment-environment-values-path: "charts/stip/environments/prod/values.yaml"
      deployment-on: "tag"
      deployment-mode: "manual"
      argocd-server: "$ARGOCD_SERVER"
      argocd-token: "$ARGOCD_TOKEN"
      argocd-app-name: "$ARGOCD_APP"

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/argocd-review-app@v0.1.6'
    inputs:
      review-app-url: "https://${CI_COMMIT_REF_SLUG}-stip.$DVB_OCP_MERCURY_ROUTER"

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/github-mirror@f59b6bfce107fe606d8fd6685044e61a1dcf53a5'
    inputs:
      git-mirror-target: "dvbern/stip"
      mirror-on: "tag"
      mirror-when: "always"

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/argocd-install@65f114f45e6d4503a2d79482b5f77df392e01213'
    inputs:
      argocd-server: "$ARGOCD_SERVER"
      argocd-token: "$ARGOCD_TOKEN"

start_e2e:
  stage: test
  resource_group: "argocd:dev"
  extends: .install-argocd
  script:
    - argocd app sync stip-e2e --insecure
    - argocd app set stip-e2e --helm-set api.replicaCount=1 --insecure
    - argocd app set stip-e2e --helm-set gesuchApp.replicaCount=1 --insecure
    - argocd app set stip-e2e --helm-set sachbearbeitungApp.replicaCount=1 --insecure
    - argocd app set stip-e2e --helm-set postgres-cluster.enabled=true --insecure
    - argocd app sync stip-e2e --insecure
    - argocd app wait stip-e2e --insecure
  environment:
    name: e2e
    url: "https://e2e-stip.$DVB_OCP_MERCURY_ROUTER"
    action: start
  rules:
    - if: $PIPELINE_TYPE == "default"
      when: manual # TODO set to automatic after testing

run_e2e:
  stage: test
  needs:
    - start_e2e
  tags: [ "zone:tz", "os:linux", "type:docker" ]
  image:
    name: docker-registry.dvbern.ch/devops/docker/tools/k8s/main
    entrypoint: [ "" ]
  script:
    - echo "TODO actually run the tests"
  rules:
    - if: $PIPELINE_TYPE == "default"
      when: manual # TODO set to automatic after testing

stop_e2e:
  stage: test
  needs:
    - run_e2e
  resource_group: "argocd:dev"
  extends: .install-argocd
  script:
    - argocd app set stip-e2e --helm-set api.replicaCount=0 --insecure
    - argocd app set stip-e2e --helm-set gesuchApp.replicaCount=0 --insecure
    - argocd app set stip-e2e --helm-set sachbearbeitungApp.replicaCount=0 --insecure
    - argocd app set stip-e2e --helm-set postgres-cluster.enabled=false --insecure
    - argocd app sync stip-e2e --insecure
    - argocd app wait stip-e2e
  environment:
    name: e2e
    url: "https://e2e-stip.$DVB_OCP_MERCURY_ROUTER"
    action: stop
  rules:
    - if: $PIPELINE_TYPE == "default"
      when: manual # TODO set to automatic after testing
