stages: [build, deploy, mirror]

variables:
  ARGOCD_APP: stip
  ARGOCD_IMAGES: api
  STIP_OVERLAYS_DIR: manifests/stip/overlays 

backend:
  stage: build
  trigger:
    include: backend/.gitlab-ci.yml
    strategy: depend

frontend:
  stage: build
  trigger:
    include: frontend/.gitlab-ci.yml
    strategy: depend

# TODO: Mirror job

include:
  - component: 'gitlab.dvbern.ch/devops/gitlab/components/workflow@v0.0.7'
  - component: 'gitlab.dvbern.ch/devops/gitlab/components/argocd-deploy@v0.0.7'
    inputs:
      name: "deploy:dev"
      deployment-overlay-path: "$STIP_OVERLAYS_DIR/dev"
      deployment-environment: "dev"
      deployment-environment-url: "https://dev-stip.apps.apollo.ocp.dvbern.ch"
      deployment-image-names: "$ARGOCD_IMAGES"
      deployment-on: "default"
      deployment-mode: "on_success"
      argocd-server: "$ARGOCD_SERVER"
      argocd-token: "$ARGOCD_TOKEN"
      argocd-app-name: "$ARGOCD_APP"

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/argocd-deploy@v0.0.7'
    inputs:
      name: "deploy:uat"
      deployment-overlay-path: "$STIP_OVERLAYS_DIR/uat"
      deployment-environment: "uat"
      deployment-environment-url: "https://uat-stip.apps.apollo.ocp.dvbern.ch"
      deployment-image-names: "$ARGOCD_IMAGES"
      deployment-on: "tag"
      deployment-mode: "manual"
      argocd-server: "$ARGOCD_SERVER"
      argocd-token: "$ARGOCD_TOKEN"
      argocd-app-name: "$ARGOCD_APP"

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/argocd-deploy@v0.0.7'
    inputs:
      name: "deploy:prod"
      deployment-overlay-path: "$STIP_OVERLAYS_DIR/prod"
      deployment-environment: "prod"
      deployment-environment-url: "https://stip.apps.apollo.ocp.dvbern.ch"
      deployment-image-names: "$ARGOCD_IMAGES"
      deployment-on: "tag"
      deployment-mode: "manual"
      argocd-server: "$ARGOCD_SERVER"
      argocd-token: "$ARGOCD_TOKEN"
      argocd-app-name: "$ARGOCD_APP"

review-app:start:
  stage: deploy
  tags: ['os:linux', 'type:docker', 'zone:tz']  
  image:
    name: '${DVB_DOCKER_REGISTRY}/dockerhub/alpine/curl'
    entrypoint: ['']
  script:
    - 'curl -X PUT -H "PRIVATE-TOKEN: ${REVIEW_APPS_TOKEN}" ${CI_API_V4_URL}/projects/{$CI_PROJECT_ID}/merge_requests/$CI_MERGE_REQUEST_IID?add_labels=preview'
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: https://${CI_COMMIT_REF_SLUG}-stip.apps.apollo.ocp.dvbern.ch
    action: start
    on_stop: review-app:stop
    auto_stop_in: 3 days
  rules:
    - if: $CI_MERGE_REQUEST_IID
      when: manual

review-app:stop:
  stage: deploy
  tags: ['os:linux', 'type:docker', 'zone:tz']  
  image:
    name: '${DVB_DOCKER_REGISTRY}/dockerhub/alpine/curl'
    entrypoint: ['']
  script:
    - 'curl -X PUT -H "PRIVATE-TOKEN: ${REVIEW_APPS_TOKEN}" ${CI_API_V4_URL}/projects/{$CI_PROJECT_ID}/merge_requests/$CI_MERGE_REQUEST_IID?remove_labels=preview'
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  rules:
    - if: $CI_MERGE_REQUEST_IID
      when: manual