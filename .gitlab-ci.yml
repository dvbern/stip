stages: [test, build, e2e, mirror, deploy]

variables:
  ARGOCD_APP: stip
  ARGOCD_IMAGES: api,gesuch-app,sachbearbeitung-app
  STIP_OVERLAYS_DIR: manifests/stip/overlays

backend:
  stage: build
  trigger:
    include: backend/.gitlab-ci.yml
    strategy: depend

frontend:
  stage: build
  trigger:
    include: frontend/.gitlab-ci.yml
    strategy: depend

include:
  - component: 'gitlab.dvbern.ch/devops/gitlab/components/workflow@5ee978eeededdc1275eb9f200743ba14dfaf2c30'

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/argocd-deploy-helm@24c4a3cb712e0022fad8d869437ef6984f6398df'
    inputs:
      name: "deploy:dev"
      deployment-environment: "dev"
      deployment-environment-url: "https://dev-stip.$DVB_OCP_MERCURY_ROUTER"
      deployment-environment-values-path: "charts/stip/environments/dev/values.yaml"
      deployment-on: "default"
      deployment-mode: "on_success"
      argocd-server: "$ARGOCD_SERVER"
      argocd-token: "$ARGOCD_TOKEN"
      argocd-app-name: "$ARGOCD_APP"


  - component: 'gitlab.dvbern.ch/devops/gitlab/components/argocd-deploy-helm@24c4a3cb712e0022fad8d869437ef6984f6398df'
    inputs:
      name: "deploy:uat"
      deployment-environment: "uat"
      deployment-environment-url: "https://uat-stip.kibon.ch"
      deployment-environment-values-path: "charts/stip/environments/uat/values.yaml"
      deployment-on: "tag"
      deployment-mode: "manual"
      argocd-server: "$ARGOCD_SERVER"
      argocd-token: "$ARGOCD_TOKEN"
      argocd-app-name: "$ARGOCD_APP"

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/argocd-deploy-helm@24c4a3cb712e0022fad8d869437ef6984f6398df'
    inputs:
      name: "deploy:prod"
      deployment-environment: "prod"
      deployment-environment-url: "https://stip.kibon.ch"
      deployment-environment-values-path: "charts/stip/environments/prod/values.yaml"
      deployment-on: "tag"
      deployment-mode: "manual"
      argocd-server: "$ARGOCD_SERVER"
      argocd-token: "$ARGOCD_TOKEN"
      argocd-app-name: "$ARGOCD_APP"

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/argocd-review-app@v0.1.6'
    inputs:
      review-app-url: "https://${CI_COMMIT_REF_SLUG}-stip.$DVB_OCP_MERCURY_ROUTER"

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/github-mirror@10ddb6aa7b7338ee8fc9a8760d2fe46710e35980'
    inputs:
      git-mirror-clone-token: "$GITLAB_STIP_PULL_TOKEN"
      git-mirror-target: "dvbern/stip"
      mirror-on: "tag"
      mirror-when: "always"

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/argocd-install@23fb5ca15e20adc66f4500cd855587afe1d24818'
    inputs:
      argocd-server: "$E2E_ARGOCD_SERVER"
      argocd-token: "$E2E_ARGOCD_TOKEN"

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/nx@b2bce2f00106241c91bbbfe1c77d9cd3750e227f'
    inputs:
      name: ".nx"
      e2e-test-package-version: '13.6.2'
      context-dir: 'frontend'
      e2e-test-image: docker-registry.dvbern.ch/microsoft/playwright
      e2e-test-image-version: v1.41.1-jammy

start-e2e:
  stage: e2e
  resource_group: "argocd:dev"
  extends: .install-argocd
  script:
    - argocd app sync stip-e2e --insecure
    - argocd app set stip-e2e --helm-set image.tag=$VERSION --insecure
    - argocd app set stip-e2e --helm-set api.replicaCount=1 --insecure
    - argocd app set stip-e2e --helm-set gesuchApp.replicaCount=1 --insecure
    - argocd app set stip-e2e --helm-set sachbearbeitungApp.replicaCount=1 --insecure
    - argocd app set stip-e2e --helm-set postgres-cluster.enabled=true --insecure
    - argocd app sync stip-e2e --insecure
    - argocd app wait stip-e2e --insecure
  environment:
    name: e2e
    url: "https://e2e-stip.$DVB_OCP_MERCURY_ROUTER"
    action: start
  rules:
    - if: $PIPELINE_TYPE == "default"
      when: always

run-e2e:
  stage: e2e
  extends: .nx-e2e-test
  resource_group: "e2e"
  variables:
    E2E_BASEURL_GS: "https://e2e-stip.$DVB_OCP_MERCURY_ROUTER"
    E2E_BASEURL_SB: "https://e2e-sb-stip.$DVB_OCP_MERCURY_ROUTER"
  needs:
    - start-e2e

stop-e2e:
  when: always
  stage: e2e
  needs:
    - run-e2e
  resource_group: "argocd:dev"
  extends: .install-argocd
  script:
    - argocd app set stip-e2e --helm-set api.replicaCount=0 --insecure
    - argocd app set stip-e2e --helm-set gesuchApp.replicaCount=0 --insecure
    - argocd app set stip-e2e --helm-set sachbearbeitungApp.replicaCount=0 --insecure
    - argocd app set stip-e2e --helm-set postgres-cluster.enabled=false --insecure
    - argocd app sync stip-e2e --prune --insecure
    - argocd app wait stip-e2e --insecure
  environment:
    name: e2e
    url: "https://e2e-stip.$DVB_OCP_MERCURY_ROUTER"
    action: stop
  rules:
    - if: $PIPELINE_TYPE == "default"
      when: always
