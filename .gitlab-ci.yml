stages: [build, test, deploy, mirror]

variables:
  ARGOCD_APP: stip
  ARGOCD_IMAGES: api,gesuch-app,sachbearbeitung-app
  STIP_OVERLAYS_DIR: manifests/stip/overlays

backend:
  stage: build
  trigger:
    include: backend/.gitlab-ci.yml
    strategy: depend

frontend:
  stage: build
  trigger:
    include: frontend/.gitlab-ci.yml
    strategy: depend

include:
  - component: 'gitlab.dvbern.ch/devops/gitlab/components/workflow@v0.1.6'

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/argocd-deploy-helm@24c4a3cb712e0022fad8d869437ef6984f6398df'
    inputs:
      name: "deploy:dev"
      deployment-environment: "dev"
      deployment-environment-url: "https://dev-stip.$DVB_OCP_MERCURY_ROUTER"
      deployment-environment-values-path: "charts/stip/environments/dev/values.yaml"
      deployment-on: "default"
      deployment-mode: "on_success"
      argocd-server: "$ARGOCD_SERVER"
      argocd-token: "$ARGOCD_TOKEN"
      argocd-app-name: "$ARGOCD_APP"


  - component: 'gitlab.dvbern.ch/devops/gitlab/components/argocd-deploy-helm@24c4a3cb712e0022fad8d869437ef6984f6398df'
    inputs:
      name: "deploy:uat"
      deployment-environment: "uat"
      deployment-environment-url: "https://uat-stip.kibon.ch"
      deployment-environment-values-path: "charts/stip/environments/uat/values.yaml"
      deployment-on: "tag"
      deployment-mode: "manual"
      argocd-server: "$ARGOCD_SERVER"
      argocd-token: "$ARGOCD_TOKEN"
      argocd-app-name: "$ARGOCD_APP"

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/argocd-deploy-helm@24c4a3cb712e0022fad8d869437ef6984f6398df'
    inputs:
      name: "deploy:prod"
      deployment-environment: "prod"
      deployment-environment-url: "https://stip.kibon.ch"
      deployment-environment-values-path: "charts/stip/environments/prod/values.yaml"
      deployment-on: "tag"
      deployment-mode: "manual"
      argocd-server: "$ARGOCD_SERVER"
      argocd-token: "$ARGOCD_TOKEN"
      argocd-app-name: "$ARGOCD_APP"

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/argocd-review-app@v0.1.6'
    inputs:
      review-app-url: "https://${CI_COMMIT_REF_SLUG}-stip.$DVB_OCP_MERCURY_ROUTER"

  - component: 'gitlab.dvbern.ch/devops/gitlab/components/github-mirror@f59b6bfce107fe606d8fd6685044e61a1dcf53a5'
    inputs:
      git-mirror-target: "dvbern/stip"
      mirror-on: "tag"
      mirror-when: "always"

.argocd_e2e:
  stage: test
  tags: [ "zone:tz", "os:linux", "type:docker" ]
  image:
    name: docker-registry.dvbern.ch/devops/docker/tools/k8s/main
    entrypoint: [ "" ]
  resource_group: "argocd:dev"
  script:
    - git clone https://gitlab-ci-token:$DEPLOYMENT_CONFIG_ACCESS_TOKEN@gitlab.dvbern.ch/stip/deployment-config.git deployment-config
    - cd deployment-config
    - values_file=charts/stip/environments/e2e/values.yaml
    # Only set image version if it is set or not empty
    - |
      if [ -z "$IMAGE_VERSION" ]; then
        yq -e -i ".image.tag = \"$IMAGE_VERSION\"" $values_file
      fi

    - yq -e -i ".postgres-cluster.enabled = $POSTGRES_ENABLED" $values_file
    - yq -e -i ".api.replicaCount = $REPLICA_COUNT" $values_file
    - yq -e -i ".gesuchApp.replicaCount = $REPLICA_COUNT" $values_file
    - yq -e -i ".sachbearbeitungApp.replicaCount = $REPLICA_COUNT" $values_file
    - |
      if [ -n "$(git status --porcelain)" ]; then
        git add -A
        git commit -m "ci(deploy): start e2e app"
        git push
      else
        echo "Deployment Config already up-to-date, skipping commit and push"
      fi
    - |
      echo "Using ArgoCD Server at $ARGOCD_SERVER

      # Download ArgoCD CLI and sync
      curl -ksSL -o /usr/local/bin/argocd https://$ARGOCD_SERVER/download/argocd-linux-amd64
      argocd app sync stip-e2e-app --insecure
      argocd app wait stip-e2e-app --insecure

argocd_e2e:start:
  extends: .argocd_e2e
  variables:
    IMAGE_VERSION: $VERSION
    REPLICA_COUNT: 1
    POSTGRES_ENABLED: "true"
  environment:
    name: e2e
    url: "https://dev-e2e-stip.$DVB_OCP_MERCURY_ROUTER"
    action: start
    on_stop: "argocd_e2e:stop"
  rules:
    - if: $PIPELINE_TYPE == "default"
      when: manual # TODO set to automatic after testing

argocd_e2e:stop:
  extends: .argocd_e2e
  variables:
    IMAGE_VERSION: $VERSION
    REPLICA_COUNT: 0
    POSTGRES_ENABLED: "false"
  environment:
    name: e2e
    url: "https://dev-e2e-stip.$DVB_OCP_MERCURY_ROUTER"
    action: stop
  rules:
    - if: $PIPELINE_TYPE == "default"
      when: manual # TODO set to automatic after testing
