include:
  - project: 'devops/gitlab/templates'
    file:
      - '/maven/maven-3-jdk-17.gitlab-ci.yml'
      - '/maven/maven-base.gitlab-ci.yml'
      - '/docker/docker.gitlab-ci.yml'

stages:
  - build
  - analyze
  - deploy
  - mirror

variables:
  IMAGE: ${DVB_DOCKER_REGISTRY}/${CI_PROJECT_ROOT_NAMESPACE}/stip/api:${CI_COMMIT_SHORT_SHA}

maven-build:
  variables:
    MAVEN_ARGS: -Pcoverage

sonarqube-check:
  image: "${DVB_DOCKER_REGISTRY}/dockerhub/library/maven:3.8-eclipse-temurin-17"
  stage: analyze
  tags: [ "os:linux", "type:docker", "zone:tz" ]
  extends: .maven-build-base
  variables:
    MAVEN_IMAGE_TAG: 3.8-eclipse-temurin-11
    SONAR_PROJECT_KEY: kibon_stip-api_AYkrwku6SZqri_oH9Xle
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - mvn $MAVEN_CLI_OPTS $MAVEN_ARGS sonar:sonar -Dsonar.projectKey=${SONAR_PROJECT_KEY} -Dsonar.qualitygate.wait=true
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH
  needs:
    - job: maven-build
      artifacts: true

build-image:
  extends: .docker-build
  variables:
    IMAGE_PATH: $IMAGE
    DOCKERFILE_PATH: src/main/docker/Dockerfile.jvm
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH
      variables:
        KANIKO_ARGS: '--no-push'
  needs:
    - job: maven-build
      artifacts: true

deploy:
  stage: deploy
  image: "${DVB_DOCKER_REGISTRY}/devops/docker/tools/k8s/main"
  tags: [ "os:linux", "type:docker", "zone:tz" ]
  variables:
    STAGE: dev
  script:
    - git fetch origin $CI_COMMIT_BRANCH
    - cd deploy/$STAGE
    - kustomize edit set image $IMAGE
    - "git commit -a -m \"ci($STAGE): deploy image $IMAGE\""
    - git push -o ci.skip https://deploy:$DEPLOYMENT_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git HEAD:$CI_COMMIT_BRANCH
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

mirror:
  stage: mirror
  image: 
    name: "${DVB_DOCKER_REGISTRY}/dockerhub/alpine/git:2.40.1"
    entrypoint: [""]
  tags: [ "os:linux", "type:docker", "zone:tz" ]
  variables:
    GIT_STRATEGY: fetch
  script:
    - git fetch origin $CI_COMMIT_BRANCH
    - git remote add github https://token:${GITHUB_MIRROR_TOKEN}@github.com/dvbern/stip-api.git || echo "Remote github exists"
    - git push github main
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
