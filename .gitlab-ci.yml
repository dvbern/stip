include:
  - local: '.gitlab/common.gitlab-ci.yml'

stages:
  - validate
  - test
  - analyze
  - build
  - deploy

install:
  stage: .pre
  extends: .base
  before_script: []
  script:
    - '[ ! -d node_modules ] && npm ci --legacy-peer-deps --cache=".npm" --ignore-scripts ||
      echo "Skipping npm ci because a cached version is available"'

lint:
  stage: validate
  extends: .base
  script:
    - npx nx affected --base=$NX_BASE --head=$NX_HEAD -t lint --parallel=3

format-check:
  stage: validate
  extends: .base
  script:
    - npx nx format:check --base=$NX_BASE --head=$NX_HEAD

test:
  extends: .base
  stage: test
  script:
    - npm run test:ci
  allow_failure: true
  artifacts:
    when: always
    paths:
      - coverage
    reports:
      junit:
        - junit.xml
    expire_in: 1 day

sonarqube-check:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: ['']
  stage: analyze
  tags: ['os:linux', 'type:docker', 'zone:tz']
  variables:
    SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar'
    GIT_DEPTH: '0'
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs:
    - job: test
      artifacts: true

build:pipeline:
  stage: build
  extends: .base
  script:
    - node ./tools/pipeline/generate.js "$(npx nx print-affected --type=app --base=$NX_BASE --head=$NX_HEAD)"
    - cat affected-apps.gitlab-ci.yml
  artifacts:
    expire_in: 30 days
    paths:
      - affected-apps.gitlab-ci.yml

trigger:affected-apps:
  stage: build
  trigger:
    include:
      - artifact: affected-apps.gitlab-ci.yml
        job: build:pipeline
  needs:
    - job: 'build:pipeline'
